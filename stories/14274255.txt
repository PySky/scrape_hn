QQ is a wrapper over curl for making remote calls inside vim.

QQ works by specifying the a remote request in a REQUEST buffer. Once executed the response is returned in a RESPONSE buffer. All executed requests are stored in default collection file (~/.QQ.default.collection by default), and can be accessed via the HISTORY buffer.

###Request format### Requests are defined in the following formats:

###Request options### These are the current accepted request options

Target URL, at present only the first URL option will be processed. URL's can also make use of URL variable names in the format of .

URL variable, this option will replace instances of present in the URL with the specified . Only the name of the variable is stored in the history this should be useful for sensitive information.

URL parameter, this option will add GET parameters to a URL, e.g. will append to the end of the given URL

Request method, any method should be acceptable here but may be limited by your executable. At present only the first method will be processed

Header definition, all headers should be supported, you can have as many of these as you like

QQ option, these are used to alter the way that QQ handles storing requests and displaying response's. Current option options are:

Data field, this is data sent to the URL, for example form field's sent as part of a post request

File field, this file will be uploaded to the given URL with the specified name.

Body, sends everything after this as raw POST body.

List of configurable options for the plugin:

To run tests, clone vim-themis, and simply run the tests:

If you want to add anything to QQ please think about writing a test for it!|||

QQ.vim - Vim wrapper over curl for REST exploration