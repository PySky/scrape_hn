is a library for temperature conversions and weather forecasts. It includes wrapper for OpenWeatherMap API and provides developer with super-simple way to obtain weather information by geographic coordinates, city name and ZIP code.

Before making requests for weather forecast, sign up here and get API key (if you don't already have one).

Also, don't forget to append permission to your application's manifest file:

Below you can see how to make request for current weather:

Object of type can tell you a lot of information:

locationName weather getNavigation() getLocationName(); latitude weather getNavigation() getCoordinate() getLatitude(); longitude weather getNavigation() getCoordinate() getLongitude(); seaLevel weather getNavigation() getSeaLevel(); groundLevel weather getNavigation() getGroundLevel(); currentTemperatureInKelvin weather getTemperature() getCurrent() .getValue( ); currentTemperatureInCelcius weather getTemperature() getCurrent() .getValue( ); currentTemperatureInFahrenheit weather getTemperature() getCurrent() .getValue( ); minimumTemperatureInKelvin weather getTemperature() getMinimum() .getValue( ); minimumTemperatureInCelcius weather getTemperature() getMinimum() .getValue( ); minimumTemperatureInFahrenheit weather getTemperature() getMinimum() .getValue( ); maximumTemperatureInKelvin weather getTemperature() getMaximum() .getValue( ); maximumTemperatureInCelcius weather getTemperature() getMaximum() .getValue( ); maximumTemperatureInFahrenheit weather getTemperature() getMaximum() .getValue( ); sunriseTimestamp weather getLight() getSunriseTimestamp(); sunsetTimestamp weather getLight() getSunsetTimestamp(); * Wind speed in meters per second. windSpeed weather getWind() getSpeed(); direction weather getWind() getDirection(); cloudinessPercentage weather getCloudiness() getPercentage(); * Rain volume for last three hours. rainThreeHoursVolume weather getRain() getThreeHoursVolume(); * Snow volume for last three hours. snowThreeHoursVolume weather getSnow() getThreeHoursVolume(); weatherTimestamp weather getWeatherTimestamp();

Example of request for 5 day forecast:

If request was successful, handler returns object of type. Forecast is a set of weathers for different timestamps. For example, forecast may include weather for today's 4 PM, today's 7 PM, tomorrow's 8 AM, etc. Below you can see example of usage:

Also, you can request the most appropriate weather for random timestamp:

You can simply check earliest and latest available timestamp:

You can easily convert temperature from Kelvin to Celcius, from Celcius to Fahrenheit, etc. Use class for that:

Before displaying temperature in the app, you need to convert it to string. It's recommended to use class for this purpose:

is available under the MIT license. See the LICENSE file for more info.|||

F32-for-Android - Android library for temperature conversions and weather forecasts. Includes wrapper for OpenWeatherMap API