Responsive Design has been a great breakthrough for modern web development. But I couldn't help but notice that something is lacking in our expectations regarding the aesthetics of web user interfaces as well as the obvious/ not so obvious limitations we endure as end users due to static fonts in 2017.

I will likely touch on a bunch of things you already know so I encourage you to skip through to better parts.

I may also offend you if you’re very sensitive or complacent about the current state of web design. Sorry in advance ;-D

Yes there is a plug

Let’s get directly to the point…

Practically speaking, fonts don’t scale on the web. Some people can’t fathom this but this is a “YUGE” discrepancy for a modern visual platform. I hope you are able to comprehend the impact this has on the way in which we:

Despite what some believe, fonts are not static down to better design implementations or because it works better for Responsive Design, I believe the decision is largely due to backwards compatibility, and rightfully so.

With all that said, all three technologies are way under utilise in modern web development. We are content driven mammals so this obviously why we generally favour HTML.

Unfortunately vh, vw, vmin, & vmax all break the desktop browser’s zoom accessibility feature. Zoom is a frequently used feature in the browser.

There was a proposal for vb & vi units, I believe it would be able to scale without breaking zoom, I’m not sure if it’s still a thing but for now…

A few attempts have come close but I found none that were suitable for real-world usage. Below I have listed the most popular font-scaling libraries. Beside each I have noted issues that I’ve encountered. Most of these libraries (if not all) are no longer maintained:

2. Difficult to no ability to zoom, thus breaking accessibility.

3. Doesn't scale padding/ margin/ line-height and other relative dimensions and doesn’t respect the style attributes on elements (overwrite your inline styles). You must specify relative dimensions (padding/ margin)(More maintenance), or you can’t specify relative dimensions.

4. Scales to a container (which is the inverse effect, generally not a desirable result).

6. Does exactly what vw, vh, vmin, vmax does on mobile.

If only I had a Pepsi

CSS Values and Units Module level 3 was of course built on the foundations of CSS level 1. That was 21+ years ago, when XGA was the standard.

At some point 4k will become the new XGA (we already have 4k smartphones), and companies will continue to push display pixel ratios despite 8k, 20k or 50k (These marketing geniuses don’t stop at 4). At some point we need to be honest and accept that static fonts only complicate web development in the long run and that we can do far more with less complications.

(huff) If font-size can scale proportionately to the width of the viewport consistently across all modern browsers IE9+ without breaking zoom accessibility, design constraints will be significantly reduced.

Yes but you’re not getting it, it’s more predictable this way. There’s far less overflows, collisions and static elements to worry about. Media query usage would be more about design preference and far less for fixing things.

The reason you don’t need to tweak a large design for different resolutions when designing for scale is simply because…

What you see is what you get. Viewing the site at 900px wide vs viewing it at 2560px wide will not give you any hidden surprises. Growth should be linear and you should have the freedom to add media queries on top of such foundation.

I’ve been toying with this library I call MIMETIC, a JavaScript library for scalable web design and zoom detection.

Chech it out on github

The first thing I must point out about MIMETIC is that…

BTW, I have to give thanks to Browserstack for providing cross-browser support.

Now let me tell you what it does…

You can improve accessibility on zoom or even let the user know they are viewing the browser in zoom.

When using MIMETIC the rules change. With Scalable Design there are no textual boundary collisions and all elements scale proportionately by default, thus working against the major caveats of the box model.

There are a few things I discovered to make this library possible:

The scariest discovery is that there was nothing stopping a viable solution being made several years ago, all the way since IE6. Just a decade late.

Not exactly, it’s not that black and white. I am aware that every website could be made/ designed to scale but it depends on the viability of a solution.

Tell me your POV on this topic, I made this article as an attempt to answer the “why” part of the discussion, as well as to show off a practical scalable font solution.

Thanks for the read. Here’s some Magritte…|||

Responsive Design has been a great breakthrough for modern web development. But I couldn't help but notice that something is lacking in our expectations regarding the aesthetics of web user…