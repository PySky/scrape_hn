Time tracking and invoicing you can host anywhere. Full export support in multiple formats and easily extensible.

This app is currently very unstable as I have just started coding it. Everything may, and probably will, change.

Want to get up and running quickly?

We create a default username and password with superuser access to get you started, please change it via the admin panel:

If you are manually deploying to Heroku without using the deploy button make sure you create two settings before pushing using :

You will also need to create a superuser after your push has been successful in order to login:

I've setup an instance on Heroku of Timestrap that resets every 10 minutes if you want to play with it. The username and password are set to the same as the Quickstart ones. If someone messes up the fun for everyone wait till the next reset or start your own Heroku instance.

For all systems you are going to need:

Once you have all of that you can run the following and move onto Testing and/or Running Timestrap:

If you'd prefer to have a minimal installation of Timestrap you can use our base requirements instead of the development or Heroku requirements by running:

You can install everything you need from apt.

If you want to run tests you will need to install some additional packages, these are not required though and if you are working on small changes or documentation then you can rely on Travis CI to run tests for you.

If you run into issues with the version of geckodriver above, want to make sure you have the latest, or get one for your specific processor if you aren't running a linux64 environment go to the geckodriver releases GitHub page.

We use selenium with the geckodriver for testing. If you wish to run tests you will need to make sure you have Firefox installed and on a headless Linux machine you'll need xvfb. For installation instructions on those see the above documentation

I'm trying to push for 100% code coverage on this project! If you want to add or change something and test that everything still works you can do so easily with:

If you push code to our primary repository we test for style adherence and code coverage. If you get a failed build to either of these we won't accept your code till it's fixed.

Always make sure you are in the virtual environment before running additional commands by first running . If you have already done this from the previous step and have not left the environment continue on!

If you have not yet migrated your database do so by running:

You'll need to create your first user too:

After this you can run Timestrap and access it from your browser at .

Want to see how Timestrap would look after being used a while? Run to generate some data. Don't run this on a production database or you'll have to do a lot of clean up.

To support email for things like password resetting you need to update Timestrap's settings. I will not presume your email situation and allow you to do this yourself by reading Django's documentation.

If you are using Heroku you can add to your apps addons on the Heroku admin panel or by running:

You then need to add these settings to :

If you wish to change things like the date strings you'll need to play around with Django's formtat localization settings in . We don't do anything to try and localize by default but we are trying to avoid lock-in to a specific format. If you enable localization and run into any bugs let us know!|||

timestrap - Time tracking and invoicing you can host anywhere. Full export support in multiple formats and easily extensible.