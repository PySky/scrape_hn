Departing from version 2.x, there's been some minor API changes. A breaking change is a server.eventList method, which is not a getter method anymore, because of the inclusion of a namespaces system throughout the library. Other methods will work seamlessly.

Starting from version 3.1.0, we have also switched from to , because of a huge performance boost.

Calls a registered RPC method on server. Resolves once the response is ready. Throws if an RPC error was received.

Emits when the connection is opened and ready for use.

Emits when the connection is closed.

Emits a notification event with possible parameters a client has subscribed to once the server sends it.

Once the Server class is instantiated, you can use a library's instance via server.wss object.

Creates a new event that can be emitted to clients.

Returns a Namespace object initialized by the provided pathname upon connecting (eg: ). Defaults to .

More information on Namespaces below.

Creates a structured error that can be thrown in a .register callback.

Closes the server and terminates all clients.

Emits when the server has started listening for requests.

Namespace represents a pool of sockets connected under a given scope identified by a pathname (eg: ). Basically borrows ideas from .

A convenience method for server.register using this namespace.

A convenience method for server.event using this namespace.

Returns a hash of websocket objects connected to this namespace, identified by .

Emits a created event to clients connected to this namespace.

A convenience getter method that lists all created events in this namespace.

Returns a list of client unique identifiers connected to this namespace.|||

rpc-websockets - JSON-RPC 2.0 implementation over WebSockets for Node.js