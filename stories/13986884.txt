Until recently, whenever I was writing anything on my computer at home, instead of doing what most people do—that is, type every letter of every word—I used an extensive system of abbreviations, which I gradually developed over the course of several years.

The idea is that I had a key on my keyboard, let’s call it “•”, that turned an abbreviation into the corresponding word or phrase. Of course, there is no such key on a normal computer keyboard. To emulate it, I used a bit of AutoHotkey magic (AutoHotkey is a piece of software for Windows with which you can reprogram your keyboard in pretty much any way imaginable).

The principle is rather simple. For example, I used the abbreviation “asap” for “as soon as possible”, so typing “asap•” would produce “as soon as possible”, with 4 times fewer keystrokes!

However, the main point was to have short abbreviations for most words I commonly use, not just phrases. The most common words in English had one-letter abbreviations, e.g.

Other words usually had more recognizable abbreviations, e.g.

Common prefixes and suffixes always followed the same logic, so I had

Of course, these rules sometimes took the natural abbreviations away from other words. For instance, my abbreviation for “opinion” was “oi•” because the more natural “opi•” was taken by “opening”.

I think you can imagine how typing with these abbreviations saves a lot of work. For example, this is how I would type the following sentence:

Different people have different opinions.

 Difn• p• v• difn• oi•s.

That’s around half the keystrokes of the original! That sounds great (and it is indeed very ergonomic). If you are interested in the full list of abbreviations I used (and maybe want to try it out), just follow the link. If you load this script into AutoHotkey, it will change the semicolon key to the “•” key.

Nevertheless, if you are considering using a similar system, I recommend creating your own one from scratch rather than reusing the file above. It was specifically designed to suit my needs and to make the abbreviations easy to remember for me. Trying to memorize them would probably be like trying to read someone else’s source code.

The system of abbreviations sounds great in theory, and yet I stopped using it about a week ago, after several years of use. Since there are other people out there who may want to try a similar system, I thought it would be useful to write about my own experience. There are several reasons why I decided to abandon the system:

1. I wasn’t able to get rid of typos. Everyone (except the very best typists in the world) makes typos. Things like writing “uinversity” instead of “university” just happen from time to time, even to professional typists.

Those typos are usually easy to catch; all you need to do is to use a spellchecker. However, when you make a typo in a system with lots and lots of different abbreviations, the result will likely be an abbreviation of another word, so your spellchecker will not warn you.

This can lead to truly bizarre typos. For example, “art•” was my abbreviation for “article” and “arr•” for arrange. This could easily result in sending a message to a friend reading “have you read the arrange?” instead of “have you read the article?”. Such (occasional but still annoying) messages would usually leave my friends confused and amused at the same time.

I wasn’t able to get rid of those typos completely, even after years of using the system. A few of the less obvious ones even sneaked into my articles and books.

2. Abbreviations were a typing speed bottleneck. As strange as it may sound, I am convinced that the abbreviations were slightly limiting my typing speed. Sure, typing was extremely ergonomic (I had to type much less, after all), but it wasn’t necessarily faster.

In order to type an abbreviation, you first have to recall it. By the end of my typing experiment, my list of abbreviations contained over 3,000 entries. Even though most of them could be derived from less than a thousand basic ones via a process of adding prefixes and suffixes, such as

doing this mental arithmetic takes time—time that could be used for typing actual characters. Trying to remember whether I had any abbreviation at all for the word I was about to type also slowed me down. Assigning an abbreviation to every English word I may ever want to write down is not realistic, so whenever I was typing a less common word that did not have an abbreviation assigned to it, there was a small delay until my brain said, “nope, there’s no abbreviation”.

A solution would be to set a limit—say, a thousand abbreviations—which I would master and know so well that they would cause no delay whatsoever. I tried… and failed. There was always a good reason to add another abbreviation. When I was writing an article about calculus and realized that I didn’t have an abbreviation for “differentiation”, which I used a lot, it just felt silly to be forced to spell it out, while a word like “adjectival” was already on the list because of a previous project, even though I might not use it again for days or weeks.

In conclusion, my typing speed with the abbreviations was around 90 WPM (words per minute, 1 word = 5 characters) when typing “easy” texts and a bit lower when having to use a lot of complex abbreviations (requiring mental arithmetic). Now, a week after I ditched the abbreviations, my typing speed is climbing towards 100 WPM, and I am quite confident it will surpass 100 WPM after I beat that constant urge to reach my “•” key.

3. Occasional technical issues. AutoHotkey expands abbreviations via automatic backspacing and then inputting the real word. This may cause problems in software that uses nonstandard behaviour of the backspace key. For example, autocomplete in a web browser always selects the rest of the suggested word or phrase, so hitting backspace once only erases the suggestion but not what you typed.

If typed “j” and press the “•” key, instead of the expected “how” (“j” was the abbreviation of “how” in my system), I would get “jhow” in the address bar. Little things like that could get quite annoying after a while.

4. Using someone else’s computer was hell. I developed very good muscle memory for the most used abbreviations—which, of course, became utterly useless when I was using someone else’s computer. Using any other keyboard led to a huge error rate because I would constantly type an abbreviation instead of the word I was supposed to type, only to realize that there was no “•” key.

5. Abbreviations may limit your vocabulary. The brain is a lazy animal. When it has a choice between two words, only one of which has an abbreviation, it is likely to choose the one that requires significantly less typing. I think that using the abbreviations for years may have influenced my writing style in an artificial way—but, of course, this is just a theory.

I don’t see myself using abbreviations again in the foreseeable future (because of the reasons mentioned above and because I want to see how fast my typing can get without them), but the system definitely had one big plus: ergonomics.

Typing is more tiring. It may be faster, but the speed is taking its toll. I believe that the system of abbreviations may be very useful for people who suffer from carpal tunnel syndrome or a related medical condition associated with excessive typing—but for now, my hands seem to be doing fine.

In conclusion, it was an interesting experiment, and I don’t regret doing it. Remembering the abbreviations was easier than it may seem from the size of the file I linked to above, since every single abbreviation was the one that seemed the most natural to me, and I also had a fast system for creating new abbreviations. Nonetheless, I feel that I hit a plateau that was limiting my typing abilities, which I could overcome only by ditching the abbreviation system.|||

Until recently, whenever I was writing anything on my computer at home, instead of doing what most people do—that is, type every letter of every word—I used an extensive system of abbreviations,