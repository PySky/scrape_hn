VIM is the infamous text editor(only?, think again!) which I was scared to use initially. It is too overwhelming for new programmers. Fortunately, or unfortunately, I had to do software development and testing inside a Virtual Machine for a particular Open Source software. When I say inside a VM, basically, all I get is the shell of that machine.

Wait, only shell? So, No GUI?

 Yes. So no fancy GUI based text editor or IDE. So, I had to choose between the terminal based editors: Vim, Emacs, Nano.

Now, there are holy wars fought around the world for choosing the best among them. I’m not going into that. I’ll let you choose for yourself. Here, I chose Vim as my primary editor. Vim is highly configurable and powerful. There are tons of smart programmers who have written various plugins for making Vim awesome.I, here, have tried to configure it according to my use. This configurations will evolve as time progresses. Let us first go through the initial steps to get started, after which we can get into the details.

Note: I’ve used it only in OSX and debian based Linux distro. I use iTerm2 in Mac and for linux, I SSH into the Virtual Machine. Make sure that VIM .

OR Simply paste this file into

The file is the configuration file for vim. Whenever vim starts up, it is going to behave in the way this files tells it to. All the commands settings and the plugins that we will use, will be stated in this file. Now that we have the vimrc file, let us do the needful to download the plugins.

After downloading the pre-requisites, We can install all the plugins through the file.

From terminal you can run .

OR

 Open Vim, then and . 

 After this, when you open Vim and press in normal mode , it should look like this.

The following plugins have been used in my . You can go through the documentation of them to know there usage and the nitty-gritty.

This is a ever-evolving list and config for the VIM. The more you use, the more you get near mastering it.|||

