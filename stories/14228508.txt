Welcome to my second Data Science project. This time we will dive into the most recent & hot technology: Deep Neural Networks (DNN).

The problem I am going tackle here is the following: can we identify the language of short text (140 characters) with high accuracy using neural networks? This problem is currently solved by various software libraries, but using a set of hardcoded rules and lookup tables. We will attack this problem using Machine Learning algorithms.

The intro story is fictional, and is here to help you unrderstand potential business context of the problem. What we are doing here is Applied Machine Learning, after all! ðŸ™‚

You are a new employee in R&D department of ACME Inc., a large IT corporation. You have been employed due to your skills in Deep Learning alogorithms.

ACME, within its countless departments, has also a NLPS (Natural Language Processing Services) department. This department offers many services for language translation, sentiment analysis, text classifiation. Among these services, they offer also language identification service. The service is working considerably well, offering accuracy at 95% level. The NLPS executive director believes this level can be much higher. If ACME could claim they have language identification accuracy at 99% level, they could gain huge advantage on the market and market its services as being the best language identification services in the world.

Therefore, you are asked to build a prototype language identification solution using Deep Learning approach. If you prove this solution can achieve 95% accuracy or more, ACMEâ€™s NLPS director will invest into full scale research and impementation project with you as its leader.

In order to solve this problem, I decided to build a Deep Neural Network. In order to find the best solution for this problem, I tested several approaches:

A) First approach was based on feeding the Neural Network with text sample that was processed in the following way:

That approach was working quite OK, achieving accuracy around 89%. But that was not enough for me.

B) Second approach was to add other processed information to data from approach A. So I have added:

That approach worked even better, achieving accuracy around 93%. But that was still not enough for me. While experimenting with this approach and looking for more ways to improve accuracy I decided to test another approach:

C) I decided to count occurence frequency of all the possible letters Â in a sample text string. Assuming we have 7 languages, we exactly know which letters can occur in such texts. List of such letters is just sum of alphabets of all these languages, without letters repetitions. And for each letter in such alphabet we can count its ocurrence in a sample text.

And that was it! Frankly, I expected that this approach could give me some clues about the textâ€™s language, but the result was amazing:

The letter frequency approach in language identification using neural networks can achieve 97,56% accuracy!

This result is just for 7 languages, but some of them are quite similiar to each other. Italian, Spanish and French are considered to be in Latin language group, English and German have also common roots. Czech and Slovakian are extremely similar and are considered to be one of major challenged in the language recognition (seeÂ https://en.wikipedia.org/wiki/Language_identification)

Please see the solution details below and run the code yourself.

Please review the notebook below for details of the solution.

You can also reviev the Notebook on Github.|||

