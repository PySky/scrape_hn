So, how do you learn good practices of the new programming language that you are trying to learn?

Surprised? Some of you may be thinking — “But wait, open source is hard. We can contribute to an open source project only if we are expert in that language, right?”. The answer is No.

Let me tell you a story.

Last year, I got an offer for full-time job from Booking.com and I knew that I’d be working on Perl (which is their primary language for backend). In June 2016, when I got done with my college degree, I started learning Perl so as to prepare myself for my first job after college. Since I was to join in second week of the July, I had roughly one month.

I started reading about syntax of Perl and started understanding some of the common patterns of the language. Now, I really wanted to build something using Perl so that I could apply my knowledge of the language and practice various concepts of the language. While I was looking for ideas to build something in Perl, I came across DuckDuckGo’s open source organization on GitHub. I noticed that some of the open projects were written in Perl. I had a look at the issues and found a lot of “beginner” issues. I immediately started working on them and submitted a couple of pull requests. Fast forward to today, I am one of the main contributors for a couple of their open projects and also one of the 20 Open Source Community Leaders for DuckDuckGo.

Right after I learnt the syntax of Perl, I started contributing to open source projects. While doing so, I always used to look at the existing modules. I used to notice the patterns being used in Perl. Hence, I started picking up those good practices in my own code and it helped me in learning how to write good code in Perl.

That wasn’t just a coincidence; let me tell you another story to derive more correlation.

Recently, while working at Booking.com, I picked up some task which included working (adding a new feature) on one of the services written in Go language. This was the conversation I had with my teammate —

So there I was — at the verge of learning another programming language — Go!

I started reading about the syntax of Go and found an awesome beginners language tour on their official website. It was good enough to get me acquainted with all the basic concepts of the language.

Once again, I started looking for open source projects in Go which had some “beginner” or “easy-fix” issues. I found a project by Google which is basically a Go wrapper for GitHub’s REST API.

I had my first PR on that project 2 days after I started learning Go.|||

Hence, it’s pretty normal for you to start learning a new programming language today. It’s possible that you know C++ and Java but your work requires you to work with Python. Or, you are well versed…