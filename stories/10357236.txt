So there I was, standing in front of the premiere IoT developers of LA (no pressure). I was pitching my idea at Intel’s IoT Roadshow, which amounted to: “I want to make a unique bedside clock, and… it’s fine if it comes out like a Frankenstein”. What started as a simple concept, mutated to a multi-featured futuristic clock. The end product:

We were lucky Neeraja Ganesan and I attracted a third teammate, none other than Matt Pinner who makes custom instruments for Purity Ring. Matt brought an entirely different concept (Google integration) that we were able layer into our schematic. We accomplished this task in one day’s time. In the end, our 3-person team won Silver at the Intel IoT Roadshow in LA!

It couldn’t have been done without some important tools: Node-RED, the new Intel Edison board, and some on-the-fly creativity.

I wanted to create a simple sensor detection that set off a special user experience, or business rule. By getting the Edison connected to Bluemix, I knew we’d have a lot of notification options (Twilio API, Twitter etc.). I wanted to create a 3D printed something + notifier = alarm clock. Seemed simple enough. Additionally, I wanted to attempt what other DIYers haven’t, make a clock without any display of time.

So I decided to participate in the Intel IoT LA Roadshow in LA. Two days to create something unbelievable from scratch!

Today, cloud has really made it possible to get things up and running in a matter of no time! I mean, can you imagine a fully blown product and its URL created within 48 hours?! It’s awesome right! That’s exactly what Bluemix has made possible. And that’s how Matt Pinner (so glad we met you), Colin McCabe and I realized our own IoT dream and went ahead to win 2nd prize.

Being a platform as a service and a deployment medium, we used Bluemix’s Internet of Things foundation and Node-RED editor to connect a device to the cloud. Just key in the ID of your device and click on connect. And voila! Your device is now sending information to the cloud. Using Node-RED for fetching this data and giving the app logic, as nothing but drag and drop! No fear of the black screen(shrugs). This editor is designed to minimize any kind of coding. It has components which are connected by connectors (a squiggly line with 2 ends). And each component has a little editor, where you can write a couple of lines of code based on your requirement.

Don’t believe how easy it is? Alright, try these three steps yourself and you’ll believe your eyes:

And there you go! Your very own, temperature and humidity reader from a virtual device. Just power up an actual Intel Edison/ Raspberry Pi/ Sphero etc… Hook up sensors and feed in the MAC address. Double­ click other boxes to understand other nodes and have fun!

I wanted to ensure there were some design elements to the final piece. Using an arcade-style button from Frys is cool, but building its own special ‘uberbox’ is cooler. The green also helped with inspiring the final design. In actuality, I wanted to put EVERYTHING encapsulated in the green casing (version 2?), but I didn’t have the smaller Edison Breakout board handy, and the tiny bell I was using wouldn’t wake a mouse, so it became a wired remote control for a single button (a feature!).

While our original pitch advertised it would comfortably wake you, we found that the cowbell actually gave a headache-inducing clang (who would have imagined!). There is no way you’d miss a meeting again.

…the video shows the first place winner and a great summary of the Intel event:|||

Republished from the Colin Mc...