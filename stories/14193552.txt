Things programmers say: 'sure, TDD is great, but don't do it dogmatically', 'Functional programming!, but not religiously'

This is a common utterance from programmers, myself included. What is happening here?

Let's unpack DOGMA a little: --Dogma-- 'a principle or set of principles laid down by an authority as incontrovertibly true.'

Dogma in church sense, is generally seen a positive. It allows lay people (regular people) to have an authoritative teaching, without needing degrees in theology etc. This worked well for christians for sometime. However, eventually Martin Luther questioned, challenged and reformed the dogma, doctrine and orthodoxy of the church. What is important about Martin Luther, he was an absolute expert in the dogma, before he started to reform it.

Our industry is still in its infancy. It will likely remain there as number of programmers is doubling every five years. We are in a constant state of inexperience. We need some dogma to get started. To have dogma, we need some authoritative teachers or holy programming prophets.

 I suggest the following:

For programmers today, it is worth questioning the teachings we have. But we need to be careful not to mislead the junior programmers around us, into thinking that industry disciple and practices are just mere dogma.

If you are at Martin Luther level programmer, then question, and reform our industry, please...|||

