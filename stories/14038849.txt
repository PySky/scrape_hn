Straightforward and compliant GeoJSON parsing and serialization with zero dependencies. Easily ingest or output GeoJSON adhering to RFC 7946.

GeoJSON files or strings are read using or (alias ).

Sometimes a particular type of GeoJSON object is expected (e.g. from an API GET request), but for safety the type needs to be checked. Alternatively, the function can be used, which returns an object with safe accessors for specific GeoJSON types.

result picogeojson.result_fromstring(api_response.decode( )) Expecting one or more points or multipoints geom result.points: do something with points geom result.multilinestrings: do something with multilinestrings

This works for Features too, and we can filter by the member.

GeoJSON objects may be constructed in Python and composed ( ) or split ( ).

Keyword arguments can be passed to that

picogeojson will leverage ujson as a backend if it is installed. Otherwise, it uses Python's built-in module.

The read benchmark involves reading a list of earthquake features. The write benchmark involves serializing the continent of Australia.

This is a standalone Python package extracted from the Karta submodule.|||

picogeojson - GeoJSON without obstacles