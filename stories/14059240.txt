Software-defined storage is gaining popularity over the past few years, especially with the huge expansion of private clouds. The most popular is Ceph storage system, and we at Cron are experts at designing, implementation, etc. Storage is a critical part of running Docker containers. Our customers already have Ceph storage running, it is fully supported by Kubernetes, so our solution is just to use it for dynamic volume provisioning which allows storage volumes to be created on-demand by users. Using storage classes in Kubernetes eliminates the need for administrators to create storage before users can claim it. In this post, I will show you how to implement Ceph storage into Kubernetes. My test cluster is deployed by using .

To start you also need a fully functional Ceph cluster and all Kubernetes nodes need to have client available. My Ceph cluster is running Jewel version and I’m using Ubuntu 16.04 for Kubernetes nodes, so installation of Ceph client libraries is pretty simple:

Official image doesn’t have rbd client installed, so I will use another image. Update image name in to this one and wait until is restarted using a new image.

needs to able to provision storage and it needs admin key from Ceph to do that. To get the admin key from Ceph use this command:

Then add this key to Kubernetes secrets:

I will create a separate pool on Ceph cluster just for Kubernetes nodes to be able to map the volume to a node:

And client key as this Ceph cluster has cephx authentication enabled:

For more isolation between different namespaces we could create a separate pool for each namespace in Kubernetes cluster. To get the key:

And create a new secret in default namespace:

When both secrets are added we can define and create a new :

Then we need to create a volume claim using fast_rbd :

Now we can verify if everything is working as expected:

The last step is to create a test Pod using volume claim:

This container should use Ceph image which is dynamically provisioned when the user creates a new volume claim. Let me know if you have any questions in comments below.|||

