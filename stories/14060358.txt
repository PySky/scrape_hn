But recursion is a strange thing - it may seem ordinary to us, but many beginners struggle to understand it. How can something reference itself in its definition? How can a function exist before it does? What does it really mean to call oneself? Recursion seems like a very unnartural property to expect a language to have, which begs the question of whether it's some irreducible fundamental, or whether we can do we can do with recursion, without recursion.

So suppose we had some mysterious language that doesn't support recursion: there are no named functions - or at least, a function can't be reference from inside itself. Can we still write factorial functions?

"Wait!" you say. "We can just use an iterative factorial!"

Yes; you're very clever. Or we could or just about anything else. But let's set our sights on replicating specifically the recursive factorial, or at least a factorial that feels recursive without ever actually recursing.|||

