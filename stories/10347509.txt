Recompose is a React utility belt for function components and higher-order components. Think of it like lodash for React.

Recompose Base Fiddle - Easy way to dive in

Helpers like and provide a nicer way to express state updates:

Helpers like and encapsulate common React patterns into a simple functional interface:

No need to write a new class just to implement . Recompose helpers like and do this for you:

Recompose helpers integrate really nicely with external libraries like Relay, Redux, and RxJS

Many React libraries end up implementing the same utilities over and over again, like and . Recompose provides these utilities for you.

An idiomatic React application consists mostly of function components.

Most of the time when we talk about composition in React, we're talking about composition of components. For example, a component may be composed of many components, which are composed of many components.

Recompose focuses on another unit of composition: higher-order components (HoCs). HoCs are functions that accept a base component and return a new component with additional functionality. They can be used to abstract common tasks into reusable pieces.

Recompose provides a toolkit of helper functions for creating higher-order components.

All functions are available on the top-level export.

Recompose helpers are designed to be composable:

Technically, this also means you can use them as decorators (if that's your thing):

Since version recompose got support of ES2015 modules. To reduce size all you need is to use bundler with tree shaking support like webpack 2 or Rollup.

babel-lodash-plugin is not only limited to lodash. It can be used with as well.

This can be done by updating config in .

After that, you can do imports like below without actually including the entire library content.

If your company or project uses Recompose, feel free to add it to the official list of users by editing the wiki page.

Project is still in the early stages. Please file an issue or submit a PR if you have suggestions! Or ping me (Andrew Clark) on Twitter.

For support or usage questions like “how do I do X with Recompose” and “my code doesn't work”, please search and ask on StackOverflow with a Recompose tag first.

We ask you to do this because StackOverflow has a much better job at keeping popular questions visible. Unfortunately good answers get lost and outdated on GitHub.

Some questions take a long time to get an answer. If your question gets closed or you don't get a reply on StackOverflow for longer than a few days, we encourage you to post an issue linking to your question. We will close your issue but this will give people watching the repo an opportunity to see your question and reply to it on StackOverflow if they know the answer.

Please be considerate when doing this as this is not the primary purpose of the issue tracker.

On both websites, it is a good idea to structure your code and question in a way that is easy to read to entice people to answer it. For example, we encourage you to use syntax highlighting, indentation, and split text in paragraphs.

Please keep in mind that people spend their free time trying to help you. You can make it easier for them if you provide versions of the relevant libraries and a runnable small project reproducing your issue. You can put your code on JSBin or, for bigger projects, on GitHub. Make sure all the necessary dependencies are declared in so anyone can run and reproduce your issue.|||

recompose - A React utility belt for function components and higher-order components.