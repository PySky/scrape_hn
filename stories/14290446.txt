In our introductory post on referral marketing, we showed you how to give it a go without breaking your budget or committing large development efforts to initial experiments. If you’re new to referral marketing or not sure how well it would work for you, we strongly encourage you to read that post and run some experiments before you continue.

This time, we’d like to go deeper. We’d like to show you how to make the best use of API based integration when implementing and streamlining referral campaign management and execution.

Disclaimer: throughout this post, we will be using our own product, Voucherify, and its referral campaign features.

Let’s start at the first point where integration will bring benefits: the exchange of customer data.



As you may know from the previous post, Voucherify makes it easy to transfer customer data by hand using CSV file import/export. This is a good way to get started and experiment with referrals without much overhead.



This time, however, we’ll focus on what happens once you go beyond experiments and decide to scale. At this point, you’ll need to take the process beyond the manual workflow and that’s exactly where the API-first approach offered by Voucherify comes into its own.

Using the API, you can easily build synchronization scripts that will make sure the customer base stays consistent across Voucherify and your CRM. This is a very non-invasive route, you can keep your scripts out of the way of your CRM and will not need to customize it.



Still, you can get even better results by digging deeper into your CRM workflows. Working at this level, you can include Voucherify API calls wherever customer data is changed in the CRM and notify Voucherify of each update on the fly. This way, whatever happens in the CRM gets reflected in Voucherify automatically and without unnecessary lags.

In practice, this is as easy as making a REST call to our Customers API, such as this one:

The cool thing here is that you can use this for posting new customer data to Voucherify, as well as to update already existing records. All you have to do is to make sure that the same source_id is used for all calls regarding the same customer.

For a large number of popular programming environments, you won’t even need to put such a request together and send it by hand. Available Voucherify SDKs, currently including ones for Node.js, Java, Ruby, PHP, Python, .NET, Voucherify.js, Android, iOS (Swift), Unity (.NET), and Xamarin (.NET) will do this for you, providing you with convenient methods to work with.

Communication between Voucherify and your existing systems can just as easily be established both ways using webhooks. In this case, the API-first approach means that for every relevant customer-related event that occurs in Voucherify, you can get a detailed notification.



For example, when you set up your referral campaign to invoke an HTTP callout action to an endpoint you choose, you will get this kind of response:

This response contains demo data, but when you look at the structure, it’s clear that every bit of information you might need for analytics is there; which customer received what reward as part of which campaign and as a result of what order. The example response above describes the award received by a Referee. In case you decide to reward Referrers as well, you would also get a second event, describing the reward assigned to the Referrer. See the example.

Events like these can trigger your code, which then translates event information to updates in your CRM and thus makes sure customer data stays synchronized on both sides.



Once you close this integration loop, Voucherify becomes part of your environment and any campaign you choose to run will require no further work on the customer data transfers. This, of course, will be equally true for any type of campaign Voucherify supports, whether based on referrals or otherwise.|||

