Here is the breakdown of my general applications memory usage while using the developer hat:

- Photoshop: 1.5–2gb (a lot of my work involves converting PSD to HTML)

- Illustrator: 1–1.5gb (to convert vector to SVG)

- Chrome: 750mb-1.5gb (7 tabs)

- Visual Studio Code: 750mb-1.5gb (1 project, 7 editor tabs)

- Virtualbox: 1–1.5gb (1 vm)

- Slack: 700mb-1gb (10 teams)

- Limechat: 110mb (4 servers, each with an average of 5 channels)

If I would add this all up (although I know that is not exactly the way memory management works) it would add to 9gb so not even with a modern computer (which usually comes with 8gb) I would be comfortable and safe to use this stack.

Photoshop and Illustrator are heavy duty software and are expected to take around that much (or even more). Adobe developers could modularize it a bit since I don’t need that much bloat but then maybe that wouldn’t save that much.

Chrome although I think it should do a better job with inactive tabs and save some memory and out of focus data, I bet that Google developers take a close look at memory management and are doing the best they can. They’re also making a good job on V8.

Visual Studio Code, although it is just a text editor on steroids, it is the main application for me as a developer so I’m kind of happy with that. I know it could save some more but we’ll get there. 

Slack kind of pisses me! If you compare it with Limechat, it uses at least 7x more and for me, it doesn’t add that much. I’ve eventually found out Slack gateways to IRC and I’m using those in Limechat instead of the main Slack application.

So, why is Slack taking so much in comparison with Limechat and why could Visual Studio Code be better?

Both Slack and Code use Electron which is essentially a Chrome in a window plus Node.js where Limechat uses native technology. At this point, neither Slack nor Code could be considered MVP and as such shouldn’t the companies be stabilising the applications? It seems Microsoft guys are taking that into account (still with Electron though) but Slack keeps adding more stuff instead of making a simple chat application (it isn’t much more than that) that won’t make your computer fans spin off. Still not convinced that Electron is an issue? There, one more article about it.

And don’t get me started about website performance where it is pretty common to encounter a website that almost explodes your computer because it is fancy to have an intro or because it is cool to recreate the browsers scroll.

Would it be that hard to make applications like Slack use way less of your computer without much of an overhead? I don’t think so.|||

From the beginning of the history, developers have aimed to write the best code they could and make it the most performant they could to reach the “end”. We no longer have the old times physical…