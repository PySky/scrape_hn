sforce. So when I click a button, it is supposed to query on database and finally create a new record based on some criteria. I noticed queries could be written something like : Well I am not a professional Salesforce Developer but have been setting up a system. While exploring custom buttons , I found that I could write queries using. So when I click a button, it is supposed to query on database and finally create a new record based on some criteria. I noticed queries could be written something like :

I thought this would get converted into some hash. When Javascript executes, the query is actually fired at backend based on the hash passed from Frontend. But I was wrong. I found that the query gets actually called from the browser using a curl such as:

You can see the query in red. This curl request can easily be copied from the Chrome Inspection Console. The curl response was easy to decipher.

You can start by sforce.connection.init and then get a session id to execute other functions. But who cares as long as you write the code on a button and simply copy the curl scripts.

If you have restricted the access at object level field security, then the query might fail but I am not checking for it.

Few among us are already asking what is the threat in this? A sales guy can anyway access this data from the platform but who on earth gives query access via frontend?

Even if it is not a security risk, the point is salesforce developer architectures the data and templates in a certain manner so as to perform logical operations based on logic and identifiers. If powers such as direct querying and updating are available to a sales person, there can be dire consequences such as:

Now I am not sure if this vulnerability works across all versions/sandboxes/production environments or not. I tried on the sandbox and it worked. I find no reason it would not work on production because architecture remains same and the curl request for query is still sent the same way (I checked the get query curl request.).

Good luck !

 

 Please leave your thoughts in comments :)|||

salesforce hack, salesforce vulnerabilities, salesforce possible hacks, salesforce possible vulnerabilities,