'';f=x=>eval(x.join`+`)/* INPUT a FOR i=1 TO 2 i=0 INPUT n a=a-n PRINT a NEXT i '*/ Another solution with the comment hack! JavaScript computes the sum. It takes in an array containing numbers as input. Outputs as function . You can call the function like . QBasic computes the difference. Repeatedly asks for input. As soon as you enter a value, it outputs the difference of all the numbers you have entered 'til the time of hitting and again asks for input. Keeps on doing the same until the end of everything. How does it work? In QBasic (a language of structured BASIC family; it does not require line numbers), marks the beginning of a comment which goes till the end of the line. Whereas in JavaScript, it marks the start of a string. So, the whole first line is marked as a comment in QBasic but in JavaScript, the line is executed (and this line contains the JavaScript part that adds the numbers as well as a at the end which starts a comment in order to hide the rest of the QBasic code from JavaScript interpreter.) The code from second line to second-last line contains the QBasic code to compute the difference of all the input numbers (the code is very self-explanatory). The last line contains . causes the QBasic interpreter to interpret the following code as a comment, whereas in JavaScript, it does not have any effect as it is a part of a comment (which was started at the end of the first line). The following code ( ) causes JavaScript to end the comment which was started in the first line, but it is not executed in QBasic because QBasic thinks it's a part of a comment. '';f=x=>eval(x.join`+`);/* INPUT a FOR i=1 TO 2 i=0 INPUT n a=a-n PRINT a NEXT i '*/ console.log(f([12,5,7,2])); Go to this website. Copy paste the following code in their text-editor : 1 '';f=x=>eval(x.join`+`);/* 2 INPUT a 3 FOR i=1 TO 2 4 i=0 5 INPUT n 6 a=a-n 7 PRINT a 8 NEXT i 9 '*/ The reason why line numbers are required is that the website I mentioned only supports unstructured BASIC languages. And that website is the only decent online BASIC interpreter I could find. However, running the code present in the top of the post (the code without line numbers) should work fine in any good QBasic interpreter that supports structured BASIC and as a comment-starter (few do not, most do, though). This is my first polyglot post! I hope it's a good one! The QBasic part of the code does not require because the interpreter will never reach it! (It will forever be stuck in the infinite loop; always asking for more input.)|||

