William was in Lyon (France) for the famous MiXiT conference . He gave a short/random talk about remote work and how we work at TailorDev. This article is a (slightly) enhanced transcript of his presentation.

The good thing about reading a transcript is that you avoid our lovely French accents (when the talk is given in English) but also all the things that could happen before starting the presentation like the speaker‚Äôs laptop refusing to detect the projector . I was so shocked as it was the first time I did not check the room equipment before that I will remember this moment forever!

In this talk, I am going to describe what remote work is and how we work at TailorDev. We usually hear many things about working remotely and there are different terms that are worth explaining. That is what I am going to do in the first part.

The first term refers to the most well-known form of remote work, which does not mean it is the best actually. In a remote friendly setup, working remote is ‚Äúallowed‚Äù. I put quotes here because the verb is important: this way of working is not the norm. Usually, you are allowed to work from home once a week, or slightly more. In some cases, you do no have access to all resources, making your life out of the office quite complicated. When it comes to meetings, it is even worth.

Unfortunately, this form of remote work is common and that is why people are not all enthusiasts about working remotely. To be honest, it makes sense if you only had a remote work experience in such a context. Fortunately, some other companies actually care about their remote workers.

These companies are often called remote-first companies. Working remote becomes the norm, and being in the company‚Äôs office is no different than being at home or anywhere else. As StackOverflow employee Alyssa Mazzina wrote in a blog post, working remote is the default and everything is done to make it work.

There is another point to take into account, nicely highlighted by Paul Farnell: remote is a mindset, not a place. By adopting great tools and processes as I will show you in the second part of my talk, you can create a great environment for remote workers, which will benefit everyone.

An extreme form of remote work is called remote only. In this case, the company or organization does not have any offices. Just know that it exists

The last term I would like to introduce in the notion of distributed teams. It is often related to remote teams since remote work allows to hire people everywhere but the simplest definition of such teams is: teams that deal with different time zones. For example, Buffer has people at UTC -7 to UTC +10 and a lot of people between. That is a good example of a distributed team.

I already mentioned a few remote-first companies such as StackOverflow and Buffer. GitHub used to be a great example too, but they communicate less about this topic so I do not really know how well it works for them nowadays. Among all the companies working remotely, I would like to mention the following ones: Zapier, Litmus, GitLab and, of course, Automattic with 548 employees in 53 countries and speaking 76 different languages. My best example, ever üòç.

And here is TailorDev, the company I co-founded eighteen months ago. We are two employees. I live and work in Germany for almost seven months now, and my business partner lives and works in France. We do have an office in Clermont-Ferrand, but we do not use it a lot. We keep it for now as we host remote workers from other companies. That is why we are a remote-first company and not a remote-only company.

As opposed to all the companies previously mentioned, we are not a product-based company. We provide development, training and consulting services to research entities (public or private). I think it is easier to build a remote-first company when working on a product, but it works well for us so far.

To better understand how it is possible to build a remote-first company and how to create a great experience for remote workers, I chose to describe one of my typical days at work.

One of the nice advantages of working remote is that you can choose the working place that suits you. Working remote does not mean working from your bed or without pants in your living room. For example, I rarely work from home, I do not like that. It does not mean I cannot but I tend to avoid. I prefer working in a coworking space where I can meet people and have lunch and discussions with them. It is like colleagues except that we do not talk about work.

Having this flexibility is nice because you can also adapt your schedule to external factors, such as an appointment, a package from Amazon to receive, and so on. That is actually the case of my fictional day: I have to wait the plumber, hence I will join the office from home.

My way to join the coworking space put aside, going to the office means opening Slack for me. The first thing I do is writing ‚ÄúHello‚Äù in the main channel, meaning I am now at work, and it is part of my morning routine. Next, I will receive a iDoneThis digest by email, which gathers information of the previous day for every team member. It is basically a stand-up meeting, except that it is not a meeting and you are not necessarily on your feet. That is called asynchronous communication and it is an important concept! I will also indicate my schedule for the day, saying that I have to wait the plumber, that I work from home and that I will join the coworking space in the afternoon.

Then, I will loop over all the Slack messages and GitHub/GitLab issues to see if I have to provide information or do something. I will prepare my daily tasks, prioritize them and also set goals to myself for the day. Many remote workers set goals and there is a reason for that. Contrary to the popular belief, it has been proven that remote workers tend to work a lot more than employees on site. Hence, the need to set goals to know when to stop your work day.

As a computer scientist, I mainly do development stuff using GitHub or GitLab, depending on the projects. Slack is used for quick chats, such as questions. We backport most of the important information to more persistent storage (like GitHub issues or Monod documents). We also tend to automate many tedious tasks, most of them being triggered from within Slack. We use such a practice to enhance our communication: everyone in Slack knows that an action has been invoked. In a similar manner, we have various Slack integrations, e.g., to receive notifications from our CI/CD pipelines.

On a daily basis, I will probably use our shared KeePassX file where we store our secrets/credentials. When we will scale, we will likely use LastPass, which is quite popular among all the companies I mentioned earlier. We use Zeplin with designers. The latter push their designs from Sketch to Zeplin and we leverage Zeplin to create the HTML/CSS interfaces. We also use a lot of Gifs and screenshots. We have spent a certain amount of time to find the right Gif application as it helps to better communicate. Currently, we are happy with Gifox on MacOS. Last, we use Watson to track our time, and it should get a backend for teams soon as we really need it

Time to time, a client can ping me on Slack. We usually setup a call on Appear.in. Once the call has ended, I write a summary of the discussion in the right channel in Slack, and add/update issues on GitHub. Remote work requires discipline. At the very beginning, it was quite difficult to write a minute after each call, but now it feels almost natural.

Sometimes, we do pair-programming. We often use Appear.in with screen sharing enabled. When we want more, like sharing our keyboard, we rely on a combination of Appear.in and Teleconsole to share a SSH session, and therefore the keyboard. That is enough for now, but we are still looking for alternatives.

As a co-founder of a French company, I have some boring stuff to do almost every month. Luckily, Julien, my business partner, takes care of most of the admin tasks.

We use Wave Accounting. Thanks to Zapier, Wave integrates with Slack so that we know when a new invoice or quotation is emitted. We use ownCloud to store our documents (in France, there are a lot of papers‚Ä¶). Talking about bureaucracy, we have a great accountant who lives somewhere between Clermont-Ferrand and Lyon. We met him once, but we interact with him every single month. Two weeks ago, we did the first TailorDev‚Äôs annual accounts, remotely.

Last tool, HelloSign, which is the only tool we do not use yet at TailorDev. It seems to be the best application to sign, fill out, send, retrieve, and save documents paperlessly.

Say I have worked enough during this typical day. I am going to leave the office now. For me, leaving means saying ‚ÄúGood Bye‚Äù in Slack, just like I did at the beginning of my day.

I will then log all the tasks I have done in iDoneThis, and disconnect. It means closing Slack, but also doing something else like: running, shopping, or reading a book in a park. It is even more important to go out when you work from home. When I work from my coworking space, going back home if enough to do the switch between work and free time, like most traditional on-site employees actually. Each remote worker has to find his balance between professional and personal life.

Before ending this talk, I would like to highlight a few key points to build a remote-first company. In my opinion, it is easier to create a company like that than to transform an existing company into a remote-first one. Not saying it is impossible, but it will certainly require more energy.

Talking about that, I believe that if the founders of the company are not willing to make remote work the norm in the company, it will not work well. As the quote states, if the boss of your company does sport at lunch everyday, you know that you could do the same. However, if all the managers reply to emails when they are off, it is more complicated not to do the same‚Ä¶

There are two pillars to create a great remote work experience, the first one being trust. Time to time, I get this question about how to make sure people actually work. This is a fallacy. Instead, hire people you can trust, and then trust them! In the software development realm, it is not complicated to know if people are working or not anyway. And, if you think having everyone on-site changes something, you get it wrong. So, trust your collaborators.

The second pillar is communication. Having a chat system is required, but it is not enough as I, hopefully, explained today. You must invest in tools and care about processes. You have to over-communicate and to write everything down, which often implies adopting asynchronous communication. I talked to Alain from GitHub yesterday, and that is what he told me: asynchronous communication is a by-product of writing things down.

The problem with remote work is that you loose social interactions that you would have in an office. It can be counterbalanced by working in a coworking space like I do, but having something internally makes sense too. It is called a water cooler. In some companies, people have 1-to-1 video chats to talk about everything every week, others have a channel. Find something so that your people talk together.

I also put having a great documentation, because it is very important. To end this part, it is not because you create a digital company that the people should not meet in real life. Actually, it is the opposite and you must organize team building events and group retreats regularly.

Creating a great remote work experience allows you to think out of the box. You could work and hire people from everywhere, there is no limit. Such a work style also implies a great lifestyle thanks to its flexibility. It usually makes people very happy, empowered since you trust them, and therefore more productive. If you go for a distributed team, you will be able to handle disasters faster than in a traditional team too. I have also noted that remote-first companies tend to be more transparent and more open. I guess it is because most of the information are already in a shareable format.

Yet, remote work has drawbacks. The first one is related to the company‚Äôs culture. It does not mean it is harder to build a culture in a remote-first company than in a more traditional one. Instead, as a remote-first company, we understand how hard it is to create a company‚Äôs culture. You cannot naively hide behind the fact that everyone is in the same office and culture will magically happen, as highlighted by the quote on the slide. You have to pro-actively build your company‚Äôs culture.

I also tend to think that remote work is not for everyone, and I am OK with it, especially because as I said before, as a remote-first company you get access to a large pool of talents and people you could work with.

We would like to thank @themouette for the review of this article.|||

William was in Lyon (France) for the famous MiXiT conference. He gave a short/random talk about remote work and how we work at TailorDev. This article is a (slightly) enhanced transcript of his presentation.