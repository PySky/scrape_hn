Imagine the following situation: your job was to add some functionality to the application. Youâ€™ve worked on this for last couple days doing N commits. When the job is over you want to push your changes to the origin but soon after you spot that for the whole time youâ€™ve worked on master/develop branch instead of the feature branch. Sounds familiar to you? Donâ€™t worry, you can still move your changes!

Now, letâ€™s say that commit 2 and 3 are supposed to be on some feature branch. In order to do that, we need to divide the whole process into three steps. The first is to undo these two commits and put all modified files to the set of untracked files. You can achieve that using the following command:

Of course, the number after HEAD word depends on a number of commits to undo. The diagram presentsÂ the result of the above command:

Hereâ€™s the step two. All the changes have to be moved to the new branch. First, we need to mark them as tracked using the following command:

Now, you have all your changes on a separate branch, so you can push them to pass the code review (because you do it, right?). Hope, this will help you ðŸ˜‰|||

