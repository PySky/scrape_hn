Given a binary tree, print all nodes for each diagonal having negative slope . Assume that the left and right child of a node makes degree angle with the parent.

For example, consider below binary tree having three diagonals (marked in red).

 The diagonals traversal is



This problem can be easily solved with the help of Hashing. The idea is to create an empty map where each key in the map represents a diagonal in the binary tree and its value maintains all nodes present in the diagonal. Then we do a pre-order traversal of the tree and update the map. For each node, we recurse for its left subtree by increasing diagonal by 1 and recurse for right subtree with same diagonal.

The time complexity of above solution is and auxiliary space used by the program is .

We can also use Queue to solve this problem. The idea is similar to level order traversal but instead of storing nodes of a level, we enqueue nodes in a diagonal.

The time complexity of above solution is and auxiliary space used by the program is .



Exercise:

 Modify the solution to print diagonal elements for diagonals having positive slope .



Please use ideoneÂ orÂ C++ ShellÂ or any other online compiler link to post code in comments.

 Like us? Please spread the word and help us grow. Happy coding ðŸ™‚

|||

Given a binary tree, print all nodes for each diagonal having negative slope (). Assume that left &right child of a node makes 45 degree angle with parent.