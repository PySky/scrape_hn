We need diversity and polymorphism to secure future of the Web

The digital revolution is now part of our everyday life. Much of the digital change has happened at such a dazzling pace, especially over the past decade.

Technological innovations have been powered by ubiquitous connectivity and consumers have constantly increased their dependence on it. On one side we have the fast innovative and creative technological pace and on the other side we have contrasting slow pace of the legislative and regulatory process. Much of the standardization, legalization or any kind of regulation especially in the tech sector is always in inevitable risk of being out of date by the time it hits the statue book, or even so vague that it offers nothing new of any real value.

In many cases the digital world has delivered considerable benefits for consumers in terms of choice and plurality. Connectivity has unlocked other forms of creativity too. One of the key points was the role of the Web in this digital revolution. 



Over the years we have seen rise of multiple new technologies which now allow us to create interactive and diverse Web pages. In all these years the Web has become like one bacteria - It’s schematic but still complex. 



Diagram of Mycoplasma pneumoniae’s metabolic pathway reminds me of the Web today. 



I’m sure you can spot the complexity of this diagram. But still this diagram is detailed enough to trace a path from glucose to ethanol. We can draw a few analogies between the digital (Web) and organic (biological) worlds.

Let’s make an assumption that the components of the novel H1N1 virus, also known as swine flu, are similar as computers. 



If organism are like computers with IP addresses, each functional group of cells in the organism listens to the environment through its own active port. As port 25 maps specifically to SMTP services on a computer, port H1 maps specifically to the windpipe region on a human. Interestingly, the same port H1 maps to the intestinal tract on a bird. Thus, the same H1N1 virus will attack the respiratory system of a human and the gut of a bird. In contrast, H5 the variety of hemagglutinin protein found in H5N1, the deadly bird flu specifies the port for your inner lungs. As a result, H5N1 is much deadlier than H1N1 because it attacks your inner lung tissue, causing severe pneumonia.

In theory we could hack the virus (make a variation) and modify the virus sequence to make it deadlier. 



Wait… how does the Web relate to that? 



Well the situation is similar. We have many Web browsers which are based on rendering engines. Rendering engine is a component that draws text and images that the user can see on the screen.

Like many variants of flu, no vaccine can target all types of the virus. So if we have one killer virus we could wipe out most of the humanity, maybe one small group of people would survive it (because of ability to confer immunity).

With multiple rendering engines (variants) we can ensure that the web cannot be hurt by one “killer virus” in the form of only one rendering engine.



We still have different browsers but we can see that lots of browsers are adapting same rendering engines. Safari and Chrome are using WebKit and even Opera abandoned it’s own rendering engine to use WebKit. On the other hand Microsoft cleared legacy code of their Trident rendering engine and introduced EdgeHTML - rendering engine which is used in Microsoft Edge. Firefox is based on it’s own Gecko rendering engine. 



In the words of “killer virus” - one rendering engine or even one browser to rule them all. That would be disastrous. 



So does it matter to have diversity (of rendering engines) on the web? Yes. 



Mono-cultures are brittle, vulnerable, and difficult to change. This statement was already confirmed in the past when the Internet Explorer 6 was introduced. Lack of competition brought a lot of stagnation in that period. In some cases rendering engine monoculture or “killer virus” already exists on Apple mobile devices. You can download any browser on App Store but they all use the same WebKit rendering engine. This means that the innovation curve and vulnerabilities can be more easily exploited. 



If you would attempted to recreate the Web in some really clean, monoculture code written for specific rendering engine you would have something that would impress the heck out of your programming peers but no one would ever use it.

Web in the form of “one rendering engine to rule them all” would become boring and uncreative. 



The dream of a single rendering engine is the dream of someone who fails to understand the most fundamental thing about the Web. Web is polymorphism. It’s diverse, flexible and messy, but it’s beautiful just because of that.

The diversity sustains the Web. I have one pledge for the future, whether you are Web developer, hacker, creator or decision maker, please don’t support the creation of “the killer virus” and don’t let the Web become a vulnerable monoculture. Diversity is better than a monoculture. For everybody who believes in diversity, polymorphism might be the right thing. Polymorphism is the art of making one thing appear in many different facets and in many different ways. Only that way innovation can happen. 

|||

Nino Vranešič, elnino blog