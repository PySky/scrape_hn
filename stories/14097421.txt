Amazon ECS (EC2 Container Service) provides an excellent platform for deploying microservices as containers. The challenge however is that there is a significant learning curve for microservice developers to deploy their applications in an efficient manner. Specifically, they must learn to use CloudFormation to orchestrate the management of ECS, ECR, EC2, ELB, VPC, and IAM resources. Additionally, tools like CodeBuild and CodePipeline must be mastered to create a continuous delivery pipeline for their microservices.

To address these challenges, this tool was created to simplify the declaration and administration of the AWS resources necessary to support microservices. Similar to how the Serverless Framework improved the developer experience of Lambda and API Gateway, this tool makes it easier for developers to use ECS as a microservices platform.

The tool uses CloudFormation stacks to manage all resources it creates. Additionally, will not create any databases or other AWS resources to support itself. It will only create resources (via CloudFormation) necessary to run your microservices. This means at any point you can stop using and continue to manage the AWS resources that it created via AWS tools such as the CLI or the console.

Watch the 90 second demo below to see mu in action!

Install latest version to /usr/local/bin (or for additional options, see wiki):

Assuming your project already has a Dockerfile, you can initialize your mu.yml file with: . More details available in the quickstart.

Check out the examples to see snippets of configuration files that you can use in your own project:

Refer to the wiki for complete details on the configuration of and the cli usage:

Want to contribute to Mu? Awesome! Check out the contributing guidelines to get involved.|||

mu -  Î¼ - A tool for managing your microservices platform