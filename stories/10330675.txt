You might have read WebRTC in 2015 and why Apple will never join the party from our Developer Evangelist Chief, Christian, published on ProgrammableWeb a few weeks back. Christian and I decided to reach out to the WebRTC community, and really expand on this bold statement. Do the other experts agree or not? We reached out to 24 top WebRTC experts and influencers, to discuss the future of WebRTC in 2015. We asked them:

Here are the exclusive contributions from Roar Hagen, Tsahi Levent-Levi, Phil Edholm and 21 more top WebRTC names.

In a nutshell, here is a short breakdown of the general opinion among our experts: Here are the key things we learnt from this WebRTC expert roundup:

So let’s jump into the answers…

@tsahil Website Interoperability in WebRTC is not understood by many. People try to connect it to how interoperability works for VoIP, but there’s little value in it. Signaling was left out of WebRTC for a reason – it wasn’t lack of time, but rather a clear statement that the web works differently than VoIP.

What WebRTC brings isn’t the monolithic telecom world of standards, interconnect, federation and interoperability to the web – it brings the web into communications. You no longer care about all vendors who use WebRTC, or making sure their products/services interoperate – what you care about is a small number of browsers interoperating so that your service can run smoothly on top. That said, WebRTC is only a technology and different vendors and developers use it differently – some even federate with it. I wrote about it a while back, about how WebRTC is used everywhere.

@rhagen96 Website I think that browsers (or apps using technology built into the browser) will be the main focus for WebRTC in the future, with technologies like HTML5 making it easier for developers to build full WebRTC apps. I think there will always be a place for things like Matrix.org, but they never seem to be important. Big apps like WhatsApp and other communication apps never interoperate, so why would WebRTC? Users are used to just installing the others and having a range of apps in their command. There is a place for this type of effort, but I don’t think this is critical or especially needed. Consumer apps will be key for WebRTC since mass consumer apps drive demand and B2B copies/versions will exist when needed. A lot of enterprise users are starting to use consumer apps, the so-called prosumers, with businesses using apps like Skype to connect with each other internally. Therefore, I feel most companies still use Skype/Slack/Hipchat apart from big enterprise that have security worries, so why would they bother with building their own WebRTC tools.

@PEdholm Website Desktop will be browser, mobile will be native app for some time. The third supposes one is more important.

@disruptivedean Website Primarily the future will be browser-based, for general web-based use inside websites (eg for customer service), or for collaboration/conferencing on a client’s portal web page However, we may also see users have a couple of frequently-used desktop apps that could embed WebRTC, such as office/productivity/email tools, a corporate UC-type app, or maybe individual games. It’s worth noting that the term “call” may not be appropriate for most of these – that’s a very specific (traditional) model of user interaction that’s like a telephone, where one person initiates a call & interrupts the other I don’t think interoperability is important no. The majority of voice/video calls and similar conversations will be in standalone apps (mostly mobile, not desktop browser). There is no need to federate the communications features of most apps to each other – indeed, the best ones will not be functionally-similar enough to interoperate. It makes no sense to interoperate a WebRTC karaoke app with your corporate UC tool, nor to connect (or share identity space) between a recruiter’s video interview app and Tinder. That said, Matrix-type federation is useful for those instances where interop has been mutually-decided as being valuable – for example between two companies’ UC and collaboration apps, either if in partnership or post-merger “More important for B2B” to what or whom? In terms of creating impressive numbers of users for WebRTC, then sure it will be consumer uptake that adds the most zeros. But in terms of revenues, it is likely to be business-related, although often WebRTC calls/conferences/interactions will be a feature of a broader workflow app rather than its sole raison d’etre. It’s also important to note that B2C and M2M use-cases for WebRTC will be a part of the landscape.

@agouaillard Website It really depends on the use case, but for the vast majority, the future of WebRTC will be browser (on desktop). The only few use cases where the browser won’t do it would be for “extended” WebRTC case (think: additional codec) for specific applications like IoT, but I do not expect this to be a significant part of the market.

I definitely do not think interoperability is required to get mass adoption. The only people that have been looking for that are the telcos for interoperability between the physical network, and roaming. In the web world, you had solutions that enabled that (XMPP and Jabber), and they did not get that much adoption. Actually Matrix.org is based on those technologies. Today I cannot think of a website that will see sharing their hard-earned users with another application as a good thing. B2B vs. B2C? It depends on who you speak to. Startups will take anything that works and give them traction to show for. We saw many of them oscillating between both business models. For big vendors, the most impact full example will be Telenor. Immediate traction is not important and they need to align with existing solutions/customers and vision, so they will focus on either one. This focus will be based on existing positioning, and I do not think that the introduction of WebRTC will push any big player to significantly modify their aim. Often, the brand, the reputation, the marketing that has been invested has more value than the perceived advantage a new technology brings. Continuity first.

@Alan_Quayle Website Both browsers and apps with be the future. WebRTC is an open source project and the code is available to anyone. Many clients use the WebRTC code with their own customizations and optimizations to ensure performance and reliability. While browser based calling avoids the client headache with the limitations in experience, browser coverage (unless you use shims), and functionality (e.g. audio post-processing), in the near to medium term the future of WebRTC calling looks like both. But in the longer term, I’m not sure. I feel projects like Matrix.org are and are not important. There are many applications of voice that do not require interoperability. For example, being on a website and wanting to talk to an agent – it’s a closed system. But being able to use your preferred client and talk to all your friends without having to use their preferred client would save a significant hassle we face everyday. At the moment that hassle is experienced by only a few people, as it becomes much more common across the mass market of consumers, then the size of that perceived problem could change quickly. I think the B2B cases benefits the most from WebRTC. In the longer term, who knows. We have so many consumer calling options today that the benefit is insignificant. But with the explosion of clients and changes in consumer behaviour, I’m not prepared to write-off the consumer benefit in the longer term.

@oej Website I think the whole concept of “calling” will change, so these questions are kind of limited to a very small part of the WebRTC field. Thinking “telephony” will limit your mindset and put you in a very small corner. It’s going to be a crowded corner with all the old telephony companies, so you won’t be alone. But I don’t think that part is going to dominate WebRTC usage. Having said that, in order to answer these questions, I think you have to better define “WebRTC”. There’s a large confusion on the market; the Google toolkit, the Browser API and the IETF protocols. We already see the protocols being used in a large number of non-browser applications. We will indeed see a massive amount of usage of WebRTC in the browser area – quite a few of them will be about “calling”, but not all.

What’s important depends on your point of view. Important for whom? I don’t think the difference between “consumer” and “b2b” will be that big in this space. It’s going to be personal communication, driven by applications.

Desktop apps have been dying for some time in many application categories as users expect not to have to download, upload, maintain and the browser has clearly become more important than the underlying operating system, witnessed by Microsoft trying to declare a renewed relevance with Windows 10. However, the persistent nature of communications has nearly always called for an “always on” application, something the browser can’t fully execute today. However, I suspect this will change in the near future. Matrix.org is solving a problem that no one has. While I admire what they’ve done and the intelligence they’ve applied, I’m not sure you and I as consumers recognize this as a problem severe enough for us to change our behaviour.

Telecom has long been in a race to the bottom and the good news, the race is nearly over. Communications may well not be a stand alone business, any more than a telephone companies today relies on voice revenues to support their business. People are unfortunately talking less but seemingly communicating more. I suspect voice will make a comeback as we confront the non-real time or confront how ridiculously we wasted time in a 20 minute chat session versus having a 2 minute voice conversation. I suspect consumer use cases will define how B2B will function as that overall trend continues.

@RobertWelbourn LinkedIn WebRTC and browsers partly depends on the ubiquity of browser support for WebRTC, and we’re still waiting for Apple to show their hand. On the desktop folks are still used to using the browser to deal with web sites, rather than apps (in complete contrast with mobile, I should add). On the other hand, one can get over the inconsistency of browser support in an app and better control the UX.

Interoperability like Matrix.org? Er, what’s Matrix.org? Google’s…No. WebRTC wasn’t intended to build federations, although doubtless it can be used for that. Amazon didn’t need anything like Matrix.org to build RTC into the Kindle Fire. Amex didn’t need Matrix.org to build video calling into their iPad app. It’s completely irrelevant. Early adoption of WebRTC has been for B2C, mostly in contact center apps. Sure, it’s used for Google Hangouts and FB Messenger, but there are plenty of messaging apps out there, and we really need a way of integrating RTC into existing apps, or adding context to RTC.

@steely_glint Website WebRTC apps are often asymmetrical, so one end might be a user running an app on their smartphone, whilst the other might be a call center agent using Chrome on a Chromebook. The strength of the standard (especially the wire protocol) is that solutions developers can mix and match platforms to suit the use-case. That said, I’m not expecting to see many non-browser desktop WebRTC apps – although a few of the browser based apps may come wrapped in an installer. I think that the value of WebRTC calls is often in the context that is derived from embedding the call into a surrounding page. All the federation mechanisms I’ve seen reduce that context to a single caller identity – which isn’t rich enough for most usage. Matrix is interesting because at least the identity that is presented is not easily spoofed – unlike caller ID. However the way they achieve that is probably overkill for many apps.

I think that C2B is probably the most interesting space and where we will see $s made – Amazon Mayday is an example, but many, many verticals (especially SMEs selling high value professional services) would benefit from high quality video calls with their customers, especially if these calls are in the context of their shared goal. I’m thinking of live insurance reports, real estate walk-throughs etc. One place where we may see mass adoption is in IoT – Doorbells, baby cams, entry phones etc – The security and video quality on these devices is often lamentable – I’m of the view that WebRTC can help there (this was the subject of my talk at Kranky Geek).

@ajprokop Website When I think desktop, I think PC and web browser. In the not too distant future, I expect that every company’s web page will be enabled with WebRTC click-to-call functionality. In my mind, that is the promise of WebRTC — instantaneous communication without having to download a plug-in.

I see things very differently when it comes to mobility. While web browser click-to-call has a place on a mobile device, I see more enterprises exposing communication through custom apps. We are already downloading company branded apps. Adding WebRTC should be a no-brainer. Consumer to business communication can be easily accomplished without Matrix.org style connections. However, before WebRTC can truly be a replacement for the telephone, interoperability that does not currently exist in WebRTC is needed. While I understand why the developers of WebRTC did not define a signaling protocol, it has created a significant need for something to fill the gap. Whether or not Matrix.org is the ultimate solution has yet to be decided, but it’s a step in the right direction. In the long run, both are important, but I have no problem with perfecting B2B and B2C communications before WebRTC solves the problem of mass adoption. It must be solved, though, if WebRTC is going to be the next generation of collaboration.

@blairplez Website I believe the future of WebRTC will be in apps. It will be used for specific applications and use cases, rather than general calling. I also see WebRTC getting the most traction from consumer contact center-type applications, like Amazon MayDay. Companies will be able to easily put “contact me” buttons and tabs on their websites to enable one- or two-way video interactions with customers for sales and service.

@cjsinch Website I believe WebRTC is going to move more and more towards apps. For a couple of reasons:

I don’t think the question is mass adoption on consumer basis. WebRTC is a technology that is used by app developers. So mass adoption comes when apps like Facebook Messenger adopts WebRTC (which they have). I don’t think it’s a goal for WebRTC to be a household name. Think of it as jQuery for real time communication. A lot of people, like Tsahi says, are very confused about the whole thing in the developer world, but I totally agree with him that it was left out on purpose. However I can admit that I do miss the old days where you had one IM client with the big IM networks implemented. WebRTC for whom? For an individual app it might. Since the pricing on this kind of feature is racing to the bottom just like app prices, a volume business is of course interesting. It has it challenges. For an ISV, B2B is probably more interesting since you most likely are providing a value above cheap voice using voice and therefore enriching the value proposition and can charge. For WebRTC, I guess if Google would start collecting usage and prevent OTT providers from removing it, it could have a tremendous value for Google to also be able to monitor everyone’s voice calls as well.

@rhudaur Website I think the future of WebRTC will probably be in apps, but not necessarily desktop apps. I would think mobile apps are more likely. Browsers are too unpredictable as a platform, and it is too easy for plug-ins (e.g., AdBlock) to interfere with WebRTC performance. I don’t think interoperability is totally necessary, particularly not if WebRTC is built into the apps. Developers might opt for Matrix.org as a way to offload some of the code development / maintenance, but I don’t believe Matrix.org is needed to get mass adoption. What is needed is a killer app that utilizes WebRTC. Mass consumer adoption is always nice to prove out the technology, but business models in the consumer space are difficult to monetize. B2B is easier to monetize but doesn’t have quite the scale that the consumer market can offer. I tend to focus on products / offerings that are likely to make money, and the B2B use cases have more promise at this point.

@erinspice Website The future of desktop WebRTC calling will be browsers, definitely. We’ve had desktop voice and video since the 90s. That’s legacy stuff. Centrally-hosted software is the future. Users and developers alike don’t want to have to worry about the state of users’ devices. Moving all of that complexity into the domain of device vendors allows developers to focus on their software’s defining features and functionality instead of having to spend a lot of time on underlying technology that may not have anything to do with the innovative part of their endeavor.

Also, I don’t think interoperability is necessary. Let’s be honest, “mass adoption of consumer calling” does not depend on the underlying protocols or technology. Users don’t care about WebRTC, nor should they. Users have already adopted using the internet for voice and video calling and streaming media. Skype, Netflix, Google Hangouts, and MMO games with audio and video streaming were in popular, widespread use without WebRTC and without interoperability between different apps.

@Ian_TTV Website The future of desktop WebRTC calling? Simple answer is both. I also think embedded WebRTC (think television sets) might be important too. Think about what a desktop app (just as important a smartphone or tablet app) actually is and how it might evolve. For instance, I’m a big Chrome OS user and I download Web apps to use on my device. But they’re not really apps in the technical sense, more placeholders for a cloud service running somewhere and I access the service through the browser via the ‘app’. The important thing is that in Chrome OS the ‘app’ is a sort of metaphor that everyone understands and, crucially, its form enables a provider to register me into an application or a video calling community. People like and understand apps so I think service providers will keep them – real or virtual – almost as an interface. I have had conversations with Matrix.org and understand where they’re coming from and can see the logic, but as with the above, I’m not sure that people even want rampant service interoperability. There’s a lot to be said for having the apps and services separate and distinct with video and audio sessions being initiated within those but, as a user, drawing them together using other apps so that they’re manageable. It wouldn’t surprise me if that remains the outcome. Finally, mass adoption or B2C seems to me the most fruitful area.

@MelissaSwartz Website WebRTC calling will be in the browser for sure. I can see the possibility of “dedicated” apps providing more developed functionality but (as you are hinting at below) interoperability is key and I think that will occur in the browser environment

Clearly interoperability is a foundational requirement for widespread adoption. However, I’m not sure that consumers will understand the need for Matrix.org; they expect that capability to be imbedded in the cool sexy app that they want to use. Skype has proven the theory that mass consumer adoption can lead to adoption in the enterprise, but fundamentally the requirements for consumer use are different from B2B. Consumers do not have the same requirements for security, auditing and reporting that businesses are subject to.

@hcornflower For browsers, user retention is hard. Techniques like push notifications may change that but I think it will be desktop apps. For new apps, platforms like node-webkit, chromium-embedded or electron already provide WebRTC and combine this with the rapid development speed of browser apps. Legacy applications, even using the webrtc.org library, will struggle to keep up with this. Matrix.org’s selling point is federation. For WebRTC, I have not seen Matrix.org do any relevant work. The specification is hand waving and making wrong claims, like WebRTC 1.0 only allowing 1-1 conversations. That’s no answer to the ORTC question. And they were not the first party to demonstrate interoperable and federated WebRTC calls – we did that in October 2013 at RealtimeConf using XMPP. Obviously, claiming that XMPP failed (who cares about 900 million+ users using a uglified version at WhatsApp anyway) ruins the Matrix.org argument here. What might have failed is the idea of federation. But if that failed, why do we need Matrix.org? In the XMPP world, I have not seen much demand for interoperability. I suspect the driver will be enterprise communications, but there are few players left here since Cisco bought Jabber Inc. Microsoft Lync is still one of the main platforms here but Lync federation has not exactly taken off either. We do have WebRTC mass adoption of consumer calling in Facebook Messenger. But that mostly just proves that WebRTC is a sustaining technology rather than disruptive.

@alwaysoncarl Website This gets long and complicated. The first answer is who cares? If we are just using WebRTC for calling we have missed the boat on what the potential is for WebRTC. Secondly, it’s only the skin that matters as to apps. Look at AOL AIM, ahead of its time, it’s really an HTML based app. Finally, I met with a lot of PBX manufacturers in the past that had made soft clients – most of them had more than one based on their PBX and key system features. If we think of calls instead of interactions, we are limiting ourselves to a mindset that does not apply to the young. I like what Matrix has done, and unlike my friend Dean Bubley, I see value in being able to go across domains. But the general trend is with Dean. WhatsApp does want to use Skype and vice versa, so the compelling logic of interoperability has to be something more than crossing domains. I am concerned about emergency services and how out of date 911 is in comparison to what first responders have available. So from that standpoint, I want WebRTC to communicate beyond the domain. How that happens, I don’t really care. Oh, one more thing. HTML5 makes browsers (ultimately) interoperable. So the question should not be do we need it, but why do we block it?

I think matching WebRTC to existing methods of communication is the important goal. My daughters barely talk on a phone – if it’s not text, they don’t respond. I think we need to be as interactive in the rich media of human communication as possible. I would also like to see us enable cross media communication. I have been shocked for 2 decades now how we don’t mix and match media more. Siri can read my text and transcribe my voice, but it’s not part of the media path. Why is that?

@chadwallacehart Website Modern apps increasingly have both web and desktop versions. The web is great to maximize audience across devices and lower barriers for occasional visitors. These are either invited guests or first time and casual users who do not want to download an app for a given device. Native apps excel for providing platform specific enhancements for serious users. They complement the varying relationships we have with app providers and our preferences for what to load on our growing list of devices. Cross-platform development tools are making this easier than ever, so expect to see even more of this. I think the universal communications interoperability, like what the PSTN provides, is a thing of the past. We have a new interoperability today with the web on top of IP, and that provides far better means to interoperate at the human layer than PSTN ever has. The web provides plenty of mechanisms for coordinating with foreign parties without requiring universal call signalling. WebRTC provides the interop at the media layer, and that’s all that is needed. Universal interoperability often creates many problems, i.e. spammers, scammers, etc. Making it easier for telemarketers to call while you’re sleeping is not the way to get more consumers to make calls from the web. That’s not to say call signalling interoperability never provides value – it is critical in many use cases – it is just not universally needed for every use case, or even most. Use cases depends on how you define important and whether you are are providing a consumer or a B2B service. The bar is set very high on consumer services with so many no-cost services like Google Hangouts, Facebook Messenger, and soon Skype, coming to the web. Those that do emerge – if they do – will need to be very compelling to catch any attention. I think the B2B arena is more interesting because there are so many use cases and niches where WebRTC and novel communications models can apply. Breaking down the typical dial/ring/pick-up/hang-up call flow scenarios and embedding communications can create enormous opportunities to rethink how we communicate. Just like apps (such as Airbnb) have spawned whole new product categories that are rethinking how under-utilized resources are used, these new communications experiments will ultimately end up redefining the “calling” experience.

What’s the point for a desktop WebRTC app? WebRTC, as it’s name implies with the “web” part, is meant to operate on browsers. The real revolution will not be the ability to develop yet another desktop messenger / calling app. The real revolution relies on the ability of the users to make calls directly through websites. No plugins, no third party installed apps, just press the button and someone will answer, will help you, will provide support, details about a product, etc. How cool is that from the final user perspective? Users don’t know that yet but once they start using it they’ll feel it was just always there. Of course, hybrid systems that incorporate desktop, mobile apps as call answering tools for the agents (not for the final users), or forward calls to mobile or land lines are even more powerful, no doubt. But we still we want the final user to call directly from the website, that’s what is all about. With Matrix.org and interoperability, yes, I believe it is required. Though WebRTC still makes its baby steps. It’s good that the community tries to experiment with it or to empower it through various and numerous ways. Even though it has nothing to do with your question and Matrix.org, take a look at this very ambitious project. It’s ambitious, it will prove WebRTC as a story changing technology though I don’t believe it that the technology is mature enough and if you ask me we just can’t be sure about neither’s success as things are radically changing from day to day. That’s why no huge companies have emerged yet or have switched to 100% WebRTC. Once it happens we will know that WebRTC is a mature technology. So, yes I believe that interoperability is required to get mass adoption though it’s very soon to pick the one over the other project.

In my opinion B2C mass adoption is not required. Many WebRTC evangelists think and write articles supporting the opposite. But this has to do with the perspective of each one. In my opinion everything has to do with the balance of power on the ongoing OS vs. web browsers war. Web browsers through all these new technologies (notifications API, WebRTC, offline API, web audio API, etc.) are trying to become independent platforms adequate to stand alone. See the Chromebooks and the Firefox OS. “You only need a browser” is their motto and that’s what they are trying to do and that’s why they cooperate so closely during the last years. See the explosive rise of JavaScript during the last years. Why is it happening, who is supporting it? Google, of course, and Firefox are only two if its supporters. Javascript = good, as javascript = THE web programming language. Also think of the impressive steps forward the HTML did with version 5. In this war the one to attract the most and best developers will be the most likely to win. Let’s go back to WebRTC. See who’s evolving it and who’s against it. Google and FireFox are the strongest supporters of it. On the other hand Apple fights it and of course Microsoft is somewhere in the middle as it’s both a browser provider and an OS provider. Did you notice that, very recently, for the first time ever Microsoft released a free OS upgrade? Christian Heilmann, that recently jumped from the position Principal Developer Evangelist (HTML5/Open Web) at Mozilla Corporation to Senior Program Manager Developer Experience and Evangelism at Microsoft, is behind this move. I had the chance to listen to him on a conference this year. He agreed that having a number of different browsers (IE8, IE9, IE7, and so on) most of which are not “modern” is certainly no good for Microsoft and that’s why a free upgrade on the OS would result with just one modern browser for all of Microsoft users. I believe that with this move Microsoft has a chance to gain back an important role on the web evolution race. If we consider the amount of money that has been sacrificed from the company with this free upgrade I believe we can understand how great is the momentum for the web. So mass adoption has mainly to do with the OS vs. Browsers race and less with the way that the technology will be spread to the users.

@nimbleapeltd Website My view is that over the next 5 years or so we’ll see a dramatic shift from people using desktop applications over to using the browser. The technology within the browser has completely changed over the past 5 years; it’s such an exciting time to be a developer. The lines are really starting to blur in what is possible using native apps vs. using the browser, whether that be on the desktop or not. When it comes to WebRTC, the browser is the primary means of using WebRTC today and I don’t see that changing; especially as the applications people create using web technologies improve. Matrix.org offers some great opportunities to developers but is it required to get mass adoption? I don’t think so. Do the mass population using the internet and communication tools today demand interoperability? No. We have Messages and Facetime from Apple, we have hangouts from Google, WhatsApp, Snapchat, Facebook Messenger, Skype; the list could go on all day. Does my mum or my brother want all those communications services to talk to one another and work? No, they don’t care. You’ll find most people like having the separation, it usually makes them feel as though their data is more secure because there isn’t this interop between them. Let’s take a look at a scenario where I want to have a call with my doctor or maybe even technical support on a product, do I want all of that intertwined with my friends and family? No.

I wouldn’t say that mass adoption is more important than the B2B use cases but I would say consumer applications are more important than B2B itself. We’ve seen some awesome applications developed with the public in mind rather than anything to do with business and profit. The application Be My Eyes helps people who have problems with their sight, an able sighted person is able to help them via an app on their phone. These applications help humanity.

@ MarquisdeGeek Website Both browsers and desktop apps will be the future, but in the same proportions they do now. That is, most will use the browser because that’s were WebRTC originates and has the lowest barrier to entry. But the larger companies (or do I mean companies with larger budgets!?!) who can afford to take time to build specific apps, will incorporate WebRTC into their offerings. At this stage, I don’t think many would opt to build a desktop app for 3 OS’s when they could build a browser-based product, instead. If you extend the question to include non-desktop apps, I think there’ll be a larger swing towards the WebRTC-based app market in the future as the ‘one click’ mentality will probably prevail. Mass adoption will happen because of (or despite of!) the quality of the products that use it. There aren’t enough products out there to warrant the integration work necessary to use it, so developers will continue building in their silos. Even when that happens, there’s the next generation to worry about – proving that there is a consumer need to share a single identity between your grandmother, your doctor, and the pizza boy. So, only in the next, next generation, if there are 14 competing standards, will someone realize there needs to be one universal standard, and perhaps that’ll be Matrix.org. There’s probably more B2B use cases than just “calling”, so it’s more important to the industry that B2B use cases are found and solved so consultants, developers, and hanger-on’s can remain gainfully employed! From a consumer view, “important” means “it works and doesn’t leak my data” and I don’t think that’s within the remit of WebRTC.

@martin_steinman Website I don’t think it really matters if WebRTC is on browser or apps, if you look at how you create Chrome apps these days, it is kind of straightforward, so that, I think, is the way forward. And if we take the example of Slack. Slack acquired Screenhero and Screenhero were working on this whole WebRTC collaboration stuff themselves. I don’t really know exactly what they will come out with, but they acquired all that technology that they’re working on. Furthermore, the whole Windows story with Internet Explorer is a big problem, but I think that Internet Explorer, even the new one, is just not going to command the market share it used to. This has been a sliding slope, and some people measure this in terms of how many folks have it installed on their computer. But other people measure actual usage, and if you look at actual usage, then Chrome and the browsers that are WebRTC compliant are way ahead. So, IE still matters in certain corporate environments, but these are not the early adopters for cloud-based collaboration anyway.

For the longest time and even today, people would talk about unified communications, and the idea was that this would deliver this collaboration communications experience that include all these other things like chat and video streams that Matrix.org would offer. And my view is that, UC failed to deliver and it simply hasn’t happened. I think there are still many companies on the telephony side, either PBX providers or all these cloud telephony uCast providers, who talk about UC, and it is ludicrous, because the collaboration part has moved to the web, and all these are left standing alone un-unified. And therefore, if you look at the web, the application in my mind is different, because it’s not primarily replacing phones, it’s creating a collaboration experience integrated into an existing app. So you look at a project management tool, you look at a CRM tool, you look at almost any app you like, and I think that any of these apps will become communications-enabled. Communication and collaboration will no longer be an industry or even a standalone vertical, but a feature in another product. And to me, that is a huge departure from the telephony industry that obviously was a huge industry. So in that sense, you know, to maybe have to clarify this, as WebRTC to me is literally just the technology. It’s not something that is disrupting anything, it’s not creating a new segment or a new vertical or a new industry. It’s literally just the technology that allows anyone else who offers web based applications, to now integrate communications and collaboration into whatever they already use. In my view, mass adoption of consumer calling has already happened. It’s called a cell phone. At the end of the day, the consumer doesn’t give a crap whether that cell phone works across the cellular service or across a data channel, like WhatsApp or WeChat or you name it. From a consumer perspective, the device is a cell phone. And about the proliferation of 4G and 5G and whatever, consumers don’t give a crap what technology is behind that. I don’t believe that this consumer calling will find its way back into desktop apps or laptops, in a way of replacing or disrupting telephony consumer calling. I think communications will become a feature of an app that you use on a laptop.

What I see is a lot of these vendors off web apps, that are still pretty clueless about real-time, how you really do it. If you just create a simple WebRTC peer-to-peer thing, then it’s pretty simple. You could see this with Atlassian, when they came out with this initial, very simple peer-to-peer thing. But the minute you want to extend this into a real collaboration experience with a conference view, WebRTC becomes more complex, because now suddenly, the service needs a bridge. It needs to be hosted somewhere. You have to figure out how you deal with TURN relays and all this other stuff. And most of these companies that provide project management, CRM and all these other apps, are pretty clueless about how this works.

So there we have it. Insights from the top 24 names in WebRTC. We’d love to get your thoughts on their answers and the future of WebRTC. Share this piece on Twitter, Facebook, LinkedIn and Google+, and please join the conversation in the comments. If we have missed any top WebRTC names from the list, please let us know at social [at] sinch [dot] com. We’d love to keep this an up to date list. For additional reading, check out the top resources and examples from our contributing experts:|||

24 experts share their opinions about WebRTC in 2015 and what is next for communications. Read opinions from Tsahi Levent-Levi, Roar Hagen, and more.