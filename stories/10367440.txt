We believe that unit testing should behave like functions: whatever you call a test suite once or twice, the returned value have to remain exactly the same. Otherwise, the testing framework may be more bugged than the untested code itself.

That being said, sometimes a random order option can help finding better results somewhere, relying on luck. From a given order, the build status could be green. And then it could become red, from another order!

While this feature can be convenient, you would thus have a doubt about results… And it doesn’t really solve the source of the problem which is side effects!

To prevent them, our Spectus library can analyse the code to be tested inside sub-processes — one by expectation — to ensure a simple and complete isolation provided by UNIX-like systems supporting fork().

Here’s an example of such isolated test:

Please join the discussion and let us to hear your opinion. Thank you!|||

We believe that unit testing should behave like functions: whatever you call a test suite once or twice, the returned value have to remain exactly the same. Otherwise, the testing framework may be…