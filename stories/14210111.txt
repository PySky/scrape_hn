At OlinData we have been searching for new engineers to hire as our business is growing. Since a lot of our focus is on AWS at the moment, a part of the hiring process is to give applicants a tech assessment which gives them three hours to complete a number of tasks on AWS. As part of this they need some kind of access. I created a separate AWS account for this and hooked it up to consolidated billing on our main account. I was under the impression I did a smart thing by locking people down to their own sub-account.

Part of the deliverables of the assignment can be some kind of IaC (Infrastructure as Code) like for instance Terraform or Ansible - whatever they prefer.

Not all of our applicants come in with a ton of AWS experience and it's not necessarily the only thing that will get them hired (we also do non-AWS work). As a result much of the Terraform / CloudFormation / Ansible code we see is subpar at best, which is exactly what we want to test with this assessment.

One of our applicants posted a Terraform repo on April 8th on a public GitHub repository in order to hand in his assignment, but the repo had AWS credentials in it. An obvious no-no, it was caught by one of our engineers doing the reviewing. At that moment I should have immediately checked if they were compromised (ie. used to create resources or other things) and disabled them, but instead I did not do anything (read: it was during the weekend and I had one other assessment that day and a job interview all while trying to enjoy my weekend with my family). Some more applicants took the assessment and on April 14th at 11pm after logging into the AWS Console and doing some work I noticed the following situation:|||

