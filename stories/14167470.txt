Since basically everything I assumed in this article was false, I am not going to waste your time and will link all of the updates first. I wrote a follow up article to explore in depth main differences between npm, yarn, and pnpm.

To set the story, I was impressed by a package manager called pnpm, which competes with Yarn and NPM itself. It is a cool project, but for reasons other than I initially assumed. I’ll leave my original article in the end, just to show how confused and naive my initial post was.

Please do check out the post by author of pnpm, that promoted this conversation:

The real difference appears to be that Yarn copies files from cache and pnpm does not: https://www.kochan.io/nodejs/why-should-we-use-pnpm.html.

Update 2: Pnpm creates hardlinks, not symlinks as I originally thought. From ln man page:

Update 3: Zoltan K author of pnpm provided more context (in the comments) on Yarn vs pnpm differences.

Update 4: Some more feedback from Yarn and NPM team on Twitter, including this link from Sebastian:

You can get to Twitter feed bellow:

Update 5: NPM also creates cache … ( I feel dumber and dumber the more this story unfolds).

Last week I came across a yet another NPM clone, called pnpm, but unlike other clones (cough Yarn) this one is actually interesting!

What so interesting about it? One word — SYMLINKS (Correction HARDLINKS).

In few more words, instead of having to re-download libraries over and over and over (and over and over, I wonder if I made my point…) again every time you run in a new folder, pnpm will download that version of the library once in some global context and will create a hardlink to this library when you run the command.

So your folder will look something like this:

This way you get the benefits of only having to download the library once AND being able to freely pick what libraries/versions to use on per project basis.

Now that is really cool!

If this sounds interesting to you, please check out this post by the author explaining his take on how pnpm compare to yarn and npm.|||

Since basically everything I assumed in this article was false, I am not going to waste your time and will link all of the updates first. I wrote a follow up article to explore in depth main…