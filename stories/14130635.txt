Restpect is a small Clojure library that provides a set of functions to write succint and readable integration tests over RESTful APIs.

Add the following to your project :

The namespace provides wrappers around the clj-http request functions with sane defaults for JSON API requests (coerce request and response as JSON, don't throw exceptions on 4xx and 5xx responses, etc.).

All these functions have the following signature:

The is passed to clj-http as the for , , and , and as the for , and .

is a map of overrides passed to the clj-http call.

The first argument (usually a clj-http response map, although it can be any value), will be compared against the given spec with the following criteria:

This assertion is equivalent to the following:

As seen in the example, is opinionated in the sense that it makes it simple to test for values and conditions on specific fields of the reponses rather than doing an exact comparison of the payloads.

also provides a set of wrappers around with the names of the different HTTP response status codes: , , , , etc.

These helpers implicitly validate the value of the given response map, and can optionally take a second argument that will be compared against the response body.

Using status shorthands, the example from the previous section becomes:

Restpect also provides a custom test reporter that adds request and response information to failure messages (provided by ) and does some formatting:

The report multimethod can be found in and can be used with plugins that allow to override the test reporter, like eftest and lein-test-refresh:

If you already work with a custom reporter and just want to add some request/reponse data to its output, consider adding a defmethod for , for example:|||

restpect - Succint and readable integration tests over RESTful APIs