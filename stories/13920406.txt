Node.js 7.6 has shipped with official support for / enabled by default and better performance on low-memory devices.

/ support in Node 7.6 comes from updating V8, Chromiumâ€™s JavaScript engine, to version 5.5. This means / is not considered experimental anymore and can be used without specifying the flag, which can be used to enable almost-completed features that the V8 team does not consider stable yet.

The main benefit of / is avoiding callback hell, which ensues from nesting a sequence of asynchronous operation through their respective callbacks.

This is how, for example, you could handle a sequence of two asynchronous operations using callbacks:

The use of / allows to streamline that code and make it appear as if it were a sequence of synchronous operations:

Another approach to solving callback hell is using Promises, a feature that has been long available in JavaScript. With Promises, the above example would become:

Still, using Promises can become cumbersome in more complex situations.

V8 5.5 also introduces several improvements to heap size and zone usage that reduce its memory footprint up to 35% on low-memory devices compared to V8 5.3.

Other notable changes in Node 7.6 are:

In addition to V8 5.5, Node 7.6 also includes other upgraded dependencies, such as cross-platform async I/O library libuv 1.11, and zlib 1.2.11.|||

Node.js 7.6 has shipped with official support for async/await enabled by default  and better performance on low-memory devices.