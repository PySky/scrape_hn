TL;DR: Tutorial on building a “Hello World” tvOS application for Apple TV using Javascript and Apple’s Markup language.

Apple recently announced the new AppleTV will be launching with an operating system called tvOS, and it will include an app store! This will will allow developers to build tvOS apps using Javascript, TVML (Apple’s templating language), and Swift.

The best part? You don’t need to know Swift in order to build an app for the tvOS.

Using Javascript to handle the application logic and Apple’s very own TVML templating language for UI will let you build robust front-end applications in no time.

I sat down this weekend to build a simple application and was able to be up and running within an hour. This is huge because it didn’t require any Swift knowledge to get running, most of the application logic was in Javascript.

In this tutorial, we are going to build a simple “Hello World” TVML app. You will learn how to setup a Xcode project, use Apple’s TVML templates, TVJS, TVMLKit, and build an app for the Apple TV!

tvOS is Apple’s new operating system for the Apple TV, which will now allow developers to build applications and games for it. tvOS includes an app store making it easy for end users to download your app or game. There is a great write up about it here.

tvOS is built upon iOS and uses a lot of the same frameworks. You can build TVML apps, which are applications that use TVML, TVJS, and TVMLKit. You can build custom apps if you have experience with iOS development too. TVML apps leverage Javascript and the templating language Apple offers where custom apps are like a blank canvas.

TVML, which stands for “Television Markup Language”, was created by Apple and it’s a form of XML. This is what creates the User interface for your application. Apple defines TVML as:

“Every page in a client-server app is built on a TVML template. TVML templates define what elements can be used and in what order. Each template is designed to display information in a specific way. For example, the loadingTemplate shows a spinner and a quick description of what is happening, while the ratingTemplate shows the rating for a product. You create a new TVML file that contains a single template for each page in a client-server app. Each template page occupies the entire TV screen. Each template page uses compound and simple elements. Compound elements contain other elements, while simple elements are single lines of TVML. Elements contain the information and images that are displayed on the screen.”

Apple also includes predefined templates that you can use for your application. I have included a list of them below with links to the templates and a brief description from Apple.

– Display important information, such as a message telling the user to perform an action before continuing. – Display information about groups of like products. – Display information about one product that is made up of several distinct pieces. – Display a significant amount of important information, such as a Terms of Service page – Use this template to create pages that do not conform to a layout defined by another template. – Use this template to gather information from the user. – Display a list of items; for example, a list of the user’s favorite movies. – Display a spinner and description of why the spinner is being displayed – Display options to the user; for example, the main page for a movie with options to play the movie, see extra content, and jump to specific scenes. – Display a list of selectable items across the top of the screen. – Display a single, full-screen image. Users can navigate left or right on the remote to select another image. Activating an up action on the remote will shrink the image and allow a description to be displayed. – Display a list of automatically scrolling, static images on the left that are associated with a selected image category on the right. – Display detailed information about a product bundle; for example, a page that describes a television series, including information about the actors, ratings, and series episodes. – Display detailed information about a product; for example, a page that describes a movie, including information about the actors, ratings, and like movies. – Display a text field that takes user input in order to search for a specific item. – Display a row of images with descriptions associated with each image; for example, displaying a set of screenshots to promote a movie. – Display groups of products; for example, displaying different genres of movies.

Apple offers a sample app that shows all of its templates, you can check it out here. Running this sample app will let you navigate through the templates in the Xcode Simulator.

Here are the steps you need in order to run the sample project:

TVJS is a framework of JavaScript APIs for creating client-server apps using TVMLKit. Apple defines TVJS as:

TVMLKit is a framework that provides the ability to incorporate JavaScript and TVML files to create client-server apps.

Client-server apps using JavaScript and TVML are different from traditional apps. The purpose of the project you create in Xcode is to access a main JavaScript file and present pages created from TVML files on the screen.

For example, you open your application on tvOS and the TVMLKit calls to the Javascript file. The Javascript file then responds with a TVML template to load on your screen. If the user does an interaction with the TVML file, then calls the Javascript file again and decides what to do next.

Please note that each app on the Apple TV is limited to a maximum of 200MB. Due to this limit, you must use an asset server to host content files and data. ie: videos, images, etc. Read more about it here and here.

Now that you have a basic understanding of tvOS, TVML, and TVJS let’s start building!

If you haven’t done so, make sure you are using Xcode 7.1 or later. As of this writing Xcode 7.1 Beta was available here.

Start by creating a new project in Xcode and using the tvOS “Single View Application” template.

Once you click “Next”, fill out the options for your project. You do not need to have “Use Core Data” checked. Upon completing that page, save your project to your desktop.

Delete the files “ViewController.swift” and “Main.storyboard”. When prompted, click “Move files to trash”. You won’t be using these files since we are build a simple TVML application.

Open the “Info.plist” file and remove the entry line “Main storyboard file base name”. Now, add `App Transport Security Settings` then add a child to it called `Allow Arbitrary Loads` and set it to `YES`. Remember to save the file. The `Allow Arbitrary Loads` row allows you to load the local client files without forcing HTTPS.

Now open the file called “AppDelegate.swift” and make the following changes:

Now, add the following code to your AppDelegate Class, below var window: UIWindow?:

Your AppDelegrate.swift file should look something like this:

Create a folder in your app directory called “client” with a sub folder called “js”. The “js” folder is where your Javascript files live.

Within the “js” folder, create a file called application.js and add the following code:

[Note: I use Sublime Text as my text editor for when I’m not coding in Swift]

Once you complete the previous steps, set up your local server. We previously touched based about it, but here are the steps:

Build the application and voala! You have just created your first tvOS app!

So far you have created a simple alert that says “Hello World” in this tutorial. You’ve managed to create a barebones Xcode project, added Javascript, TVML and set up a simple server.. congrats! Great job, you just built a tvOS application for the Apple TV! You can download the project on Github here. This is a great foundation for building more robust applications for the Apple TV.

Now go out and build your own custom tvOS app! Here are some links to additional resources to help you on your tvOS journey:|||

Learn how to Build a tvOS Application for Apple TV with this simple tutorial.