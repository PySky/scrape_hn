First and foremost, vim-t requires the installation of t.rb which is a Ruby gem. Assuming you have Ruby installed, you can install t.rb like so,

Secondly, vim-t assumes you have compiled vim with Ruby support. Many vim installations come with Ruby support already enabled. You can check your installation with the following command,

If you see then you are good to go. If not, you can check your operating system's requirements for installing vim with Ruby support. If you are an Ubuntu user you may not have Ruby support out of the box, but you can easily install a version of vim that does,

The plugin follows the Pathogen/Vundle format. If you're a Vundle user you can simply add the plugin to your plugin list. If you are not familiar with Vundle, I recommend you check it out here.

If you use Pathogen, you can simply clone the repository in your bundle folder.

By default, vim-t does not provide any mappings. You can add any mapping you wish to your file. The mapping I recommend is:

This mapping will make your display the task list.

Another useful mapping is:

This mapping makes prompt for a new task description.

Using vim-t is easy. You can use the command to create a new task. You can also use the command to display a list of all your tasks.

Within the tasks list you can navigate lines of tasks, and if you press on a task the task will be finished and removed from the tasks list. If you modify a task in the task list and press on the task, the edited task will be saved.

For more info on vim-t, see Vim's help page for vim-t. You can do this via the command:

The t.rb gem creates a file in the current working directory to store task information. If you don't want your tasks in source control you should add the file to your file.|||

vim-t - Task management from Vim