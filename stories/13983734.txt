Rust PostgreSQL foreign data wrapper for interfacing with Google Cloud Bigtable, as well as other API compatible databases (HBase should work with some effort).

While logic is contained in , it leverages callbacks.

You can get up and running quickly with PG + Rust setup using .

This will setup staticly linked Rust 1.16 and PG 9.6 in an Ubuntu Xenial image, and get you in, where you can run and start playing.

You can use gen.py to generate some test data. Modify to adjust for the number of generated records, also modify the key in the generated output as this needs be a that exists in your Bigtable, running outputs , which can be fed into PG.

One Bigtable row per PG rowis returned, limit is done on the BT side, rows are returned as and can be further manipulated using Postgres json functions and operators. is evaluted on the PG side so be sure to grab what you need from BT.

takes a array of rows as defined in core BT lib:

As you are passing in one object which gets inserted using one request, counter always shows one row inserted, the real number of rows can be accessed using clause.|||

google-bigtable-postgres-fdw - Google Bigtable Postgres FDW in Rust