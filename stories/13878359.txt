Bootstrap is the most popular HTML, CSS, and JavaScript framework for web front-end development. It’s great for developing responsive, mobile-first web sites. The Bootstrap website is available at http://getbootstrap.com/. The Bootstrap framework can be used together with modern JavaScript web & mobile frameworks like Angular. In the following you’ll learn how to use the Bootstrap framework in your Angular project. Furthermore we’ll take a look at the Ng-Bootstrap project which delivers Angular Bootstrap components which can be used out of the box.

First, let’s start with generating a new Angular project. The easiest way to do so, is to use the Angular Command Line Interface (CLI) to generate a new project. The Angular CLI project can be found at https://cli.angular.io/. First you need to make sure that Angular CLI is installed on your system. As Angular CLI comes as an NPM package the installation can be done by using the following command:

You’ll see the following result in the browser:

Now that the Angular project is ready and running we can continue and adding Bootstrap to the project. There are different ways of adding the library to your project. Let’s take a look at the different options:

The JavaScript parts of Bootstrap are depending on jQuery. So we need the jQuery JavaScript library file too.

All those files can be directly added from a CDN (Content Delivery Network) to your project. The CDN links for Bootstrap can be found at http://getbootstrap.com/getting-started/ and the link to jQuery can be found at https://code.jquery.com/.

Now we’re ready to make use of Bootstrap in one of our component templates. Let’s try it out by opening file src/app/app.component.html and insert the following HTML template code:

The result in the browser now looks like the following:

You can also change to another Bootstrap theme, e.g. from Bootswatch (https://bootswatch.com/). On the Website just select a theme and click on the “Download” button. The corresponding bootstrap.min.css file opens in another Browser window, so that you can copy the URL.

Go back to index.html and replace the string which is assigned to the href attribute of the <link> element with this new URL:

Now the browser output changes to the colors defined by the new theme:

This installs Bootstrap and jQuery into the node_modules folder within the project directory and makes sure that both dependencies are added to the package.json file as well.

Ng-Bootstrap is available as a NPM package, so the installation can be done by using the following command in the project directory:

Next, we need to add this module to the imports array of the @NgModule decorator. If you want to import NgbModule in your root module (e.g. AppModule) you need to call the forRoot() factory method, as you can see in the following:

If you want to import NgbModule in other modules (child modules of your root application module) you need to add it without calling the forRoot() method:

Having imported NgbModule in your Angular application you can now make use of the Ng-Bootstrap components in your templates. The following components are available:

The result can be seen in the following:|||

