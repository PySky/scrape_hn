Reading/writing files involves passing memory buffers (blocks) to the operating system and asking it to either fill it with on-disk data or dump buffer contents into the file.There are three principal variables involved in the process:goes through a large number of combinations of these parameters and finds one that delivers the highest throughput rate.Have a look at Fundamentals of Fast Bulk IO for all the technical details.As it turns out a winning combination varies greatly with the type of the physical device, its connection to the host as well as the composition of the file stack. What works well for SSD drives often doesn't work for HDD or virtual disks and vice versa.Here's an example. Values inare the maximum read speeds for respective devices:

By default the benchmark is set up as follows:A combination of these three parameters is a, so a single benchmark comprises 180 read tests and 120 write tests - 12 sizes x 5 counts x (2 or 3) modes - to the grand total ofper benchmark.Duration of each test is, which is usually sufficient to get an accurate speed estimate on an idle machine. This is a soft limit, meaning that a test may actually take a bit longer to complete.There's also a 64MB memory cap on all tests. Tests with total buffer space exceeding this limit are skipped. This brings down the number of tests to 285 and aboutof total run time.When testingvolumes Windows file cache is flushed before every test by clearing the system Standby List When testingvolumes local file buffering is disabled.All tests are run against a large test file that is created at the root of test location before the first test and removed after all tests are completed.Default file size is 2GB, but a smaller file may be used with volumes with low write speeds.and- test file is created by filling it with random data.- test file is created by setting its valid data length to the desired size. This is a very fast way to create a large file, but it causes some SSD to show faster read rates, because they keep track of which parts of a file were actually written to.|||

Cold-cache Sequential IO Benchmark