In this guide, we hope to give you your first introduction to LaTeX. The guide does not require you to have any prior knowledge of LaTeX, but by the time you are finished, you will have written your first LaTeX document, and hopefully will have a good knowledge of some of the basic functions provided by LaTeX.

LaTeX (pronounced LAY-tek or LAH-tek) is a tool used to create professional-looking documents. It is based on the WYSIWYM (what you see is what you mean) idea, meaning you only have focus on the contents of your document and the computer will take care of the formatting. Instead of spacing out text on a page to control formatting, as with Microsoft Word or LibreOffice Writer, users can enter plain text and let LaTeX take care of the rest.

LaTeX is used all over the world for scientific documents, books, as well as many other forms of publishing. Not only can it create beautiful typesetted documents, but it allows users to very quickly tackle the more complicated parts of typesetting, such as inputting mathematics, creating tables of contents, referencing and creating bibliographies, and having a consistent layout across all sections. Due to the huge number of open source packages available (more on this later), the possibilities with LaTeX are endless. These packages allow users to do even more with LaTeX, such as add footnotes, draw schematics, create tables etc.

One of the most important reasons people use LaTeX is that it separates the content of the document from the style. This means that once you have written the content of your document, we can change its appearance with ease. Similarly, you can create one style of document which can be used to standardise the appearance of many different documents. This allows scientific journals to create templates for submissions. These templates have a pre-made layout meaning that only the content needs to be added. In fact there are hundreds of templates available for everything from CVs to slideshows.

The first step is to create a new LaTeX project. You can do this on your own computer by creating a new file, or else you can start a new project in ShareLaTeX. Let's start with the simplest working example:

You can see that LaTeX has already taken care of the first piece of formatting for you, by indenting the first line of the paragraph. Let's have a close look at what each part of our code does.

Open an example in ShareLaTeX

The first line of code declares the type of document, known as the class. The class controls the overall appearance of the document. Different types of documents will require different classes i.e. a CV/resume will require a different class than a scientific paper. In this case, the class is , the simplest and most common LaTeX class. Other types of documents you may be working on may require different classes such as book or report.

After this, you write the content of our document, enclosed inside the and tags. This is known as the body of the document. You can start writing here and make changes to the text if you wish. To see the result of these changes in the PDF you have to compile the document. To do this in ShareLaTeX, simply hit Recompile.

If you are using a basic text editor such as gedit, emacs, vim, sublime, notepad etc., you will have to compile the document manually. To do this, simply run in your computers terminal/command line. See here for more information on how to do this.

If you are using a dedicated LaTeX editor such as TeXmaker or TeXworks, simply hit the Recompile button. Consult the programs documentation if you are unsure of where this is.

Now that you have learnt how to add content to our document, the next step is to give it a title. To do this, we must talk briefly about the preamble.

In the previous example the text was entered after the command. Everything in your file before this point is called the preamble. In the preamble you define the type of document you are writing, the language you are writing in, the packages you would like to use (more on this later) and several other elements. For instance, a normal document preamble would look like this:

Below a detailed description of each line:

To add a title, author and date to our document, you must add three lines to the preamble (NOT the main body of the document). These lines are

With these lines added, your preamble should look something like this

Now that you have given your document a title, author and date, you can print this information on the document with the command. This should be included in the body of the document at the place you want the title to be printed.

Open an example in ShareLaTeX

As with any code you are writing, it can often be useful to include comments. Comments are pieces of text you can include in the document which will not be printed, and will not affect the document in any way. They are useful for organizing your work, taking notes, or commenting out lines/sections when debugging. To make a comment in LaTeX, simply write a symbol at the beginning of the line as shown below:

Open an example in ShareLaTeX

We will now look at some simple text formatting commands.

An example of each of these in action is shown below:

Another very useful command is the command. What the command actually does with its argument depends on the context - inside normal text the emphasized text is italicized, but this behaviour is reversed if used inside an italicized text- see example below:

Moreover, some packages, e.g. Beamer, change the behaviour of command.

Open an example in ShareLaTeX

We will now look at how to add images to a LaTeX document. On ShareLaTeX, you will first have to upload the images.

Below is a example on how to include a picture.

Open an example in ShareLaTeX

Latex can not manage images by itself, so you will need to use a package. Packages can be used to change the default look of your LaTeX document, or to allow more functionalities. In this case, you need to include an image in our document, so you should use the package. This package gives new commands, and . To use the package, include the following line in you preamble:

The command tells LaTeX that the images are kept in a folder named images under the current directory.

The command is the one that actually included the image in the document. Here universe is the name of the file containing the image without the extension, then universe.PNG becomes universe. The file name of the image should not contain white spaces nor multiple dots.

Note: The file extension is allowed to be included, but it's a good idea to omit it. If the file extension is omitted it will prompt LaTeX to search for all the supported formats. For more details see the section about generating high resolution and low resolution images.

Images can be captioned, labelled and referenced by means of the environment as shown below:

Open an example in ShareLaTeX

There are three important commands in the example:

When placing images in a LaTeX document, we should always put them inside a environment or similar so that LaTeX will position the image in a way that fits in with the rest of your text.

Note: If you are using captions and references on your own computer, you will have to compile the document twice for the references to work. ShareLaTeX will do this for you automatically.'

Lists are very simple to create in LaTeX. You can create lists using different list environments. Environments are sections of our document that you want to present in a different way to the rest of the document. They start with a command and end with an command.

There are two main different types of lists, ordered lists and unordered lists. Each will use a different environment.

Unordered lists are produced by the environment. Each entry must be preceded by the control sequence as shown below.

By default the individual entries are indicated with a black dot, so-called bullet. The text in the entries may be of any length.

Open an example in ShareLaTeX

Ordered list have the same syntax inside a different environment. We make ordered lists using the environment:

As with unordered lists, each entry must be preceded by the control sequence , which will automatically generate the number labelling the item. The enumerate labels consists of sequential numbers starting at one.

Open an example in ShareLaTeX

One of the main advantages of LaTeX is the ease at which mathematical expressions can be written. LaTeX allows two writing modes for mathematical expressions: the inline mode and the display mode. The first one is used to write formulas that are part of a text. The second one is used to write expressions that are not part of a text or paragraph, and are therefore put on separate lines. Let's see an example of the inline mode:

To put your equations in inline mode use one of these delimiters: , or . They all work and the choice is a matter of taste.

The displayed mode has two versions: numbered and unnumbered.

To print your equations in display mode use one of these delimiters: , , or

Important Note: environment is provided by an external package, consult the amsmath article.

Open an example in ShareLaTeX

Many math mode commands require the package, so be sure to include it when writing math. An example is shown below of some basic math mode commands.

Open an example in ShareLaTeX

The possibilities with math in LaTeX are endless and it is impossible to list them all here. Be sure to check out our other articles on

We will now look at how to write abstracts, as well as how to format a LaTeX document into different chapters, sections and paragraphs.

In scientific documents it's a common practice to include a brief overview of the main subject of the paper. In LaTeX there's the environment for this. The environment will put the text in a special format at the top of your document.

Open an example in ShareLaTeX

Open an example in ShareLaTeX

When writing the contents of your document, if you need to start a new paragraph you must hit the "Enter" key twice (to insert a double blank line). Notice that LaTeX automatically indents paragraphs.

To start a new line without actually starting a new paragraph insert a break line point, this can be done by (a double backslash as in the example) or the command

You can find more information in the Paragraphs and new lines article.

Commands to organize a document vary depending on the document type, the simplest form of organization is the sectioning, available in all formats.

Open an example in ShareLaTeX

The command marks the beginning of a new section, inside the braces is set the title. Section numbering is automatic and can be disabled by including a in the section command as . We can also have s, and indeed s. The basic levels of depth are listed below:

Note that and are only available in report and book document classes.

For a more complete discussion about the document structure see the article about sections and chapters.

Below you can see the simplest working example of a table

The environment is the default LaTeX method to create tables. You must specify a parameter to this environment, in this case {c c c} . This tells LaTeX that there will be three columns and that the text inside each one of them must be centred. You can also use to align the text to the right and for left alignment. The alignment symbol is used to specify the breaks in the table entries. There must always be one less alignment symbol in each line than the number of columns. To go to the next line of your table, we use the new line command . We wrap the entire table inside the environment so that it will appear in the center of the page.

Open an example in ShareLaTeX

The tabular environment is more flexible, you can put separator lines in between each column.

You can add borders using the horizontal line command and the vertical line parameter .

Below you can see a second example.

Open an example in ShareLaTeX

You can caption and reference tables in much the same way as images. The only difference is that instead of the environment, you use the environment.

Open an example in ShareLaTeX

Note: If you are using captions and references on your own computer, you will have to compile the document twice for the references to work. ShareLaTeX will do this for you automatically.'

To create the table of contents is straightforward, the command does all the work for you:

Sections, subsections and chapters are automatically included in the table of contents. To manually add entries, for example when you want an unnumbered section, use the command as shown in the example.

Open an example in ShareLaTeX

You can download your finished PDF from the left hand menu as above by clicking PDF. There is also the quicker option of clicking the Download PDF button on your PDF viewer as shown below.|||

A comprehensive LaTeX guide with easy to understand examples and how-tos.