In this tutorial we will run a fresh instance of face[box], and manually teach it who The Beatles are.

To get a fresh face[box] container running, head over to your Machine Box Account page click on the facebox tab, copy the code and paste it into a terminal.

The code looks something like this:

After a few moments, a fresh face[box] container will be running.

We have prepared a collection of photographs of The Beatles which we will use to teach face[box]:

Unzip the file to a place that is easy for you to find later when we come to teach face[box] who these guys are.

The images are structured like this:

Each folder is the name of the Beatle, and the files are images containing a single example face of each Beatles member.

The Interactive console provides complete and up-to-date documentation for face[box], and is already running on localhost:8080. You can also use it to interact without writing a single line of code.

Click on the Live demo button, or go to http://localhost:8080/demo

Although we haven’t done any teaching, let’s ask face[box] to see what it can do with the sample Beatles picture.

In the URL box, paste the link to the Beatles sample picture and click the Check image for faces button.

Notice that it indeed founds lots of faces, but doesn’t know who they are.

Head back to the main page in the Interactive console and select Teach faces from the sub-menu on the right.

In the /facebox/teach endpoint section, click the POST the file tab, and expand the Try it now section.

This is where we will teach face[box] who Paul McCartney is.

All being well, you should see the output:

Repeat the above steps for the file being sure to have the name the same ( ) and the ID different ( ).

Let’s see if our teaching has had any effect so far. Head back to the Live demo and in the URL box, paste the link to the Beatles same sample picture and click the Check image for faces button.

Hover over Paul’s face and notice that face[box] has indeed learned him:

For completeness, teach face[box] the rest of the teaching data set in the same way you did for Paul, until you have used all the images.

face[box] is stateless, which means that if you turn it off and restart it, you’ll lose all your teaching.

Luckily, we can download and upload the state as we wish through the API.

In the Interactive console for face[box], click on the Managing state item in the sub-menu.

Find the Do it now section, and click on the Download state file button.

A file will be downloaded to your computer.

This file contains the learning that face[box] has done.

In the terminal where you started face[box], press to terminate the process. This will stop face[box].

Restart it (you can usually just press the up arrow key to repeat the last command) in the same way you did before, and go back to the Interactive console.

Use the Live demo again and notice that this face[box] instance does not know who The Beatles are. In order to teach it, we are going to use the file we downloaded from the other instance.

Click Managing state item in the sub-menu, and look for the Uploading state section.

Select the POST the file tab and expand the Try it now section.

Use the form to select the file you downloaded earlier, and click POST.

Assuming it is successful, you need to wait for a short period while the teaching is configured internally. The amount of time it takes depends on the size and complexity of the file, but will probably have to only wait about five seconds with this small file.

Now head back to the Live demo and notice that this fresh face[box] instance has learned who The Beatles are.

If you were to spin up 1,000 instances of face[box], it would be pretty tiresome to have to go into the console for each one and upload the state. Since we care equally about dev and ops experience, we thought about that.

If the environment variable is set with an absolute URL, face[box] will download the file when it starts up.

Use the main page in the Interactive console to submit the Beatles URL so you can see the actual JSON output returned from the API.

You will see that the field contains the name of the file that most closely matched the face.

Navigate around the Interactive console and drop down the various cURL sections to see how you can use the face[box] API in the command line, without using the consoles.

Using the language of your choice, build something awesome with face[box], and then let us know about it on Twitter.|||

Now you can add state of the art machine learning features to your applications. Production ready Docker containers that you can run, deploy, and scale.