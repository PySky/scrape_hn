Hi Pythonistas, a new week, a new 'bite' of Python coding!

After last week's article on generators we will get you to practice a bit more with them.

Inspired by David Beazley's Generator Tricks for Systems Programmers we ask you to turn the following unix pipeline into Python code using generators. To get a bunch of .py files you can use our challenges repo you cloned. Or use a project of your own.

Note that in our experience one subprocess is not necessarily one generator, for example 'sort|uniq|sort' can be easily combined into one, as well as 'grep|sed'. See our template if you need guidance.

Not familiar yet with Unix pipeline? It's pretty well explained here.

See our INSTALL doc which should contain everything you need to get up and running (any issue, please open a GH Issue).

We got some feedback that Forks don't lead to activity on your Github profile. One of our followers was so nice to update our INSTALL (via PR (Pull Request)). Maybe you want to use the workaround under III. if the credit thing is an issue for you. See issue #2 for more details.

We made a new 'community' branch. Another way to get credit is to submit your code via a new PR. We do not merge anything on our master or solutions branches, but if you ping us this way we add your solution to our new community branch (as filename 'topic-GHuser.py') and feature it in our review if it taught us something cool.

See this page for all code challenges so far, if you have an interesting one you'd like to see featured contact us, open a GH Issue.

And last but not least: there is no best solution, only learning more/ better Python. We're looking forward reviewing our and your solutions end of this week. Good luck and have fun!

Keep Calm and Code in Python!|||

A new week, a new 'bite' of Python coding! After last week's article on generators we will get you to practice a bit more with them in our new challenge. Good luck and have fun.