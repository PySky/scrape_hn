In this paper http://www.mimuw.edu.pl/~szymtor/papers/atom-turing.pdf we studied Turing Machines which have limited access to data. This is formalized as being invariant under automorphisms of a relational structure; for instance, in the O(n log n) lower bound for sorting, you would say that the machine can processes and store rational numbers, but its transitions should be invariant under automorphisms of (Q,<), i.e. monotone bijections. The formal definition is more complicated, in order to specify precisely what kind of data structures can the machine store in its memory (it should be "finite"

 in some sense, but we allow to store more complicated structures than only tuples of data values, such as unordered tuples).

In the paper we proved some lower bounds for other Turing machines with "restricted data access". In particular, we showed that:

• A deterministic Turing machine which can handle vectors (say over the two-element field), but can only use vector addition and equality tests, cannot determine in polynomial time whether a given list of vectors is linearly dependent (formally, the machines transitions should be invariant under automorphisms of the vector space). This is opposed to nondeterministic machines, which can simply guess a combination of the vectors which adds up to 0. Observe that Gaussian elimination runs in polynomial time, but has access to the coordinates of the vectors; in particular, its transitions are not invariant under automorphisms of the vector space.

• In a suitably defined model, Turing Machines which can compare natural numbers only with respect to equality (not even <) cannot be determinized. Here, we consider the relational structure (N,=) and machines which are invariant under its automorphisms. There is a construction (similar to the Cai-Furer-Immerman construction from Finite Model Theory) which shows that in fact, in this model P≠NP. Allowing the machines to compare the numbers using < gives them sufficient power to determinize.|||

