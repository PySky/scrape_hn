Gem to add authentication to your application using JWT, with expirable, renewable and customizable tokens!

Add this line to your application's Gemfile:

Or install it yourself as:

The first step is to define a parent controller from which all other controllers will have to extend to have only-authenticated routes. So, let's do that in our :

Second and last step, we have to define the routes to achieve authentication and a controller to handle them.

Returning no value or false won't create the authentication token.

Validations in every request? Override to get it verified as the following:

This method will be called before creating the token and in every request to compare if the returned values are the same. If values mismatch, the token won't be valid anymore. If values are the same, expiration validations will be checked.

If it is desired to update this value when renewing the token, override: .

Invalidating all tokens for an entity? Override as the following:

This method is the one executed when we want to invalidate sessions for the authenticated entity. An option to achieve that can be to override the value that will be then compared in every request with method, so that initial stored value mismatch with the new different value.

This works only if has been overridden.

Some other useful configurations

Want to modify tokens TTL or maximum useful days? Set an initializer:

Or, even easier, run in your root folder.

This project is maintained by Alejandro Bezdjian along with Michel Agopian and it was written by Wolox.

wor-authentication is available under the MIT license.|||

wor-authentication - Gem to add authentication to your application using JWT, with expirable, renewable and customizable tokens!