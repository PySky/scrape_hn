LogDNA's collector agent which streams log files to your LogDNA account. LogDNA is a hosted, cloud logging service.

Check out the official LogDNA site on how to get started from a released version of LogDNA CLI and agent.

Follow these quick instructions to run the LogDNA agent from source

git clone https://github.com/logdna/logdna-agent.git logdna-agent npm install sudo node index.js --help sudo node index.js -k YOUR LOGDNA INGESTION KEY On Linux, this will generate a config file: /etc/logdna.conf On Windows, this will generate a config file: C:\ProgramData\logdna\logdna.conf On Linux, /var/log is monitored/added by default (recursively), optionally specify more folders On Windows, C:\ProgramData\logs is monitored/added by default (recursively), optionally specify more folders sudo node index.js -d -d sudo node index.js -d sudo node index.js -d sudo node index.js -d sudo node index.js -d sudo node index.js -d sudo node index.js -e sudo node index.js -f sudo node index.js

Normally a config file is automatically generated (e.g. when you set a key using ), but you can create your own config file on Linux and on Windows:

On Windows, you can use Windows paths, just make sure to use as a separator:

The LogDNA agent supports reading from the Application log on Windows. To stream these events, you'll need to add an additional property to your configuration file:

Then in a C# application you can do:

And you'll see your event log messages appear on the LogDNA webapp.

You can find a more detailed write-up here, courtesy of our friends at Microsoft.

The LogDNA agent authenticates using your LogDNA Ingestion Key and opens a secure web socket to LogDNA's ingestion servers. It then 'tails' for new log files added to your specific logging directories, watching for file changes. Those changes are sent to to LogDNA via the secure web socket.

Set up Kubernetes logging with 2 commands with the LogDNA agent! We extract pertinent Kubernetes metadata: pod name, container name, container id, namespace, etc:

This automatically installs a logdna-agent pod into each node in your cluster and ships stdout/stderr from all containers, both application logs and node logs. Note: By default, the agent pod will collect logs from all namespaces on each node, including . View your logs at https://app.logdna.com

If you don't have a LogDNA account, you can create one on https://logdna.com or if you're on macOS w/Homebrew installed:

We created this integration mainly based on customer feedback and that logging with Kubernetes should not be this painful.

Our paid plans start at $1.25/GB per month, pay for what you use / no fixed data buckets / all paid plans include all features.

Contributions are always welcome. See the contributing guide to learn how you can help.|||

logdna-agent - LogDNA's collector agent which streams log files to your LogDNA account. Works with Linux, Windows, and macOS servers & Kubernetes clusters