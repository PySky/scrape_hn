Generics provides you with the ability to create classes and methods that are independent of contained types. One of the cool advantage of generics is performance and easy way to provide type safety. Generics solves the problem of writing many classes or method with same features for different types, with generics you can create just one class or method that serves different types.

The purpose was to iterate all elements of a collection and get the summation of the

All the grocery in which the amount will be iterated and summed are added to a grocery list of type

In this case we will be using all the elements in the collection because Foreach statement uses IEnumerable interface for iteration of items of a collection and as such it works with every object implementing the IEnumerable interface.

The downside of IterateGrocery method, it implements only the Grocery objects. To implements other object means writing of more method that will be specific to there object types, and this is one issue that generic method solves.

Implementing generic method with constraints will solve the problem of implementing methods that works only with a specific objects type. Generic method with constraint makes it easy to implements method that works with any type that implements the interface.Â  Constraints are basically used by generic class to invoke methods from a generic type and can also be used by methods. You can instantiate a constraints by using the where clause.

Because the interface will be used only for retrieving elements, it defines only the read-only properties.

The Glocery class will implement the interface IGrocery.

method can now be invoked by using the following syntax.

The main idea behind the use of generic method with constraint is to make our code cleaner, compact and simpler, you don't have to write a method for every object you want to use, with generic method with constraints you can write one method that works with any type, all the type has to do is to inherit the interface.|||

