If you are in the business of developing software, you likely have an emotional reaction when you hear the word Architect. For some, it inspires awe — the Architect is someone that knows things you don’t know, that can design a system from nothing for others to build. For others, the word evokes antipathy — the Ivory Tower Architect doesn’t know what happens on the ground, and she designs solutions that don’t make sense for the day-to-day realities faced by the people doing the work. She just gets in the way. I argue that, regardless of your feelings, the metaphor of software architect has outlived its usefulness. It does more harm than good as it relates to the practice of creating software. We don’t need to redefine what an architect is. We need a new metaphor entirely.

What if, instead of architect, your senior engineers aspired to be a master gardeners, instead? Software is, after all, grown, not built. Things that are built can be fully specified in advance. Things that are built are difficult to unbuild. Things that are built reach a point where they are “done”. Software practitioners know that these are not the attributes of any software they have helped to create.

Things that are grown have a life of their own. Things that are grown are in a state of evolving or of dying — stasis is not possible. You can nurture things that are grown, but you never know how any one plant is going to develop. Does this sound more like software that you have built?

If so, I argue that we should aspire to be Master Gardeners, rather than Architects. An Architect is separate from the building. He specifies the design but doesn’t lift a hammer when it comes time to build. In fact, it may have been years since he last held a hammer. A Master Gardener is a practitioner and a teacher. She enables other gardeners through education and making suggestions. Hers is not a governance role. She steps in to prevent someone from killing the plant. Otherwise, her role is to help her fellow gardeners in making the plant thrive.

How would this thinking change the way you approach your role? What if you were a Master Gardener rather than an Architect?

I’ll close with a quote from Fred Brooks, one of the great philosophers of our craft.

From No Silver Bullet — Essence and Accident in Software Engineering, by Fred Brooks. (1986).|||

If you are in the business of developing software, you likely have an emotional reaction when you hear the word Architect. For some, it inspires awe — the Architect is someone that knows things you…