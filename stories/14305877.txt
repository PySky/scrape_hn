The SOFA protocol lets you quickly develop financial applications. It is a JSON protocol that provides standard message and attachment structures, simple UI controls, and commands to interact with the Ethereum network.

SOFA apps are chat bots (with dynamically generated buttons, menus, etc) but they can also have web views for more complex interactions.

For example, see Creating a Token App.

SOFA messages are plain text JSON payloads, with a special prefix that identifies the message type. The prefix takes the form:

SOFA::Message is the general-use schema that provides all common messaging functionality. All top-level keys are optional. The structure is as follows:

Example: Question with prefilled common responses, and ability for typed text responses that the bot will attempt to parse and understand:

Example: Message that presents a large nested menu of controls, including actions that trigger webview mode of app:

Example: Message that adds visible UI controls but has no text message:

Message sent by client in which the user has tapped a button whose value is “timetable”:

If an Init message has not been sent, or needs to be re-sent, a bot may send an InitRequest message, which should trigger the client to send an Init message containing the requested information.

When a client speaks to a SOFA app for the first time, the first message should be of type Init, which provides context for the bot about who it is speaking to.

Notification of an Ethereum transaction. Only trustworthy when coming from a trusted source. Will often be sent multiple times, each time the status changes.

Request money from message recipient. This message contains all information required to execute payment if approved by recipient. Value is always denominated in Wei and hex encoded.

SOFA clients that are intended to accept communications publicly (such as a chatbot app) should provide a JSON manifest publicly available via HTTP GET request. This manifest is used by browsers to decide how to present your SOFA app to the user.|||

A protocol to quickly develop apps for an open financial system.