► Write Clean & Beautiful Python: https://dbader.org/pytricks-book



Python adds an implicit return None statement to the end of any function. Therefore, if a function doesn't specify a return value it returns None by default.



This means you can replace return None statements with bare return statements or even leave them out completely and still get the same behavior in your programs.



In this video tutorial I show you the rundown of how implicit return statements work in Python and how you can use them to make your code cleaner and more Pythonic.



I also cover the potential downsides of using this feature and how it can make your code *harder* to read in some cases.



On the one hand, you could argue that omitting an explicit return None statement makes the code more concise and therefore easier to read and understand. Subjectively you might also say it makes the code "prettier."



On the other hand, it might surprise some programmers that Python behaves this way. When it comes to writing clean and maintainable code, surprising behavior is rarely a good sign.



Watch the video for the full discussion.



Also see the following resources for improving your Python skills:



- Python Tricks Email Series: https://dbader.org/python-tricks

- Python Tricks: The Book: https://dbader.org/pytricks-book



* * *



► Subscribe to this channel: https://dbader.org/youtube/

► Weekly Tips for Python Developers: https://dbader.org/newsletter

► Python Articles & Tutorials: https://dbader.org/newsletter|||

► Write Clean & Beautiful Python: https://dbader.org/pytricks-book Python adds an implicit return None statement to the end of any function. Therefore, if a ...