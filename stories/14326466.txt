Most companies do not have the resources for real-time customer service 24/7, and that’s okay. Waiting around for an agent doesn’t have to be a problem, as long as there is a cohesive channel integration plan. Unfortunately the losses associated with a fragmented user experience are often overlooked.

When thinking about the pitfalls of conventional customer service, you’ve most likely had at least one first-hand experience that went something like this: you open a Livechat and the chat doesn’t turn out to be “live” at all. You still have to wait for an agent, and once you do connect with an agent you find out your issue cannot actually be resolved via chat and you have to call that 1-800 number anyway. You have to repeat all of your information, and unfortunately, that’s fragmentation at it’s finest.

By the time you get through to a human, you are way beyond annoyed and agitated. So when the new representative asks for all of your information and you have to repeat your issue, the agent is already treading on thin ice.

That’s not fair to you, or to the customer service representative. Excessive wait times and a fragmented user experience will reflect negatively upon the company and product, regardless of the issue outcome. Not to mention, those “excessive wait times,” from the perspective of users who are living in an instant and on-demand world, are by default extremely difficult to beat.

Once you as a customer move past the stage of extreme annoyance or even anger, you can almost laugh at the irony of this experience being so fragmented. Because you know that all the agents are most likely sitting a few feet away from each other at a centralized support center.

I work for a company that has defined mobile customer service and prides itself on perfecting the benefits associated with mobile messaging. We believe messaging is the best way forward for customer support.

But we're not going to tell you that all companies should solely offer messaging as their support platform. It’s not that black and white: different products and different customers demand different types of support.

Rather, messaging should be the thread that weaves your support structure together.

The goal is to first direct customers towards in-app messaging so that user data can be automatically collected (through an equipped SDK), thus eliminating much of the inefficient process of manually asking for information. Agents can get straight to the heart of the issue without having to waste time asking customers personal information.

At that point, agents have a much better chance of reaching a resolution from the first time they respond. Even if it takes them a few minutes to research the answer after they have received a question, they can do that research before starting the conversation back up.

And from the user perspective, after users have sent a message, that message just blends into the background. Now, they don’t have to think about that issue until they receive a notification with an answer (hopefully the only one they’ll need!)

The idea of the message blending into the background is important to independently highlight as well, because it means that having the resources for ‘live’ functionality isn’t necessary. If users can leave the message thread and go on with their day, as opposed to waiting on the phone or in a web chat browser, the happier they’ll be. And that happiness will be optimized when the response comes and doesn’t ask for any repetitive or unnecessary information.

If all customers would be content with one mobile platform, that of course would be ideal. But the fact of the matter is that despite the convenience of in-app messaging, there may still be a need for calling functionality. There is a right and wrong way to integrate the two, as shown below.

Being able to collect data from the customer through an inbound message inquiry, and then offering a call-back option, is an optimal way to combine the ease and benefits of messaging with calling (when necessary). This is where cross-channel customer service needs to be: it needs to be connected, and there needs to be seamless escalation options. At that point, all customer service agents will have access to the same information, wait time will be decreased, and customer satisfaction will soar.

Now, let’s take it one step further. It should come as no surprise that companies will start to integrate AI and machine learning into their support platforms. At that point, these technologies will aid the agents, suggesting answers and allowing for that seamless escalation. Customers will be able to schedule a ‘call back’ with the AI technology right within the message thread, and the agents will already be equipped with the information they need for that first contact resolution. Here’s a peek at how Helpshift is already doing it:

The CRM world is so close to that customer service utopia, and that utopia will translate into optimized retention and business growth for the companies that choose to jump on board. But at the end of the day, it starts with mobile messaging as the heart of the support experience.|||

Waiting around for an agent doesn’t have to be a problem, as long as there is a cohesive channel integration plan.