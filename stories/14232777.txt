Also available --> Utility to fix Nikon NEF images corrupted by Nikon software

ExifTool is a platform-independent Perl library plus a command-line application for reading, writing and editing meta information in a wide variety of files. ExifTool supports many different metadata formats including EXIF, GPS, IPTC, XMP, JFIF, GeoTIFF, ICC Profile, Photoshop IRB, FlashPix, AFCP and ID3, as well as the maker notes of many digital cameras by Canon, Casio, DJI, FLIR, FujiFilm, GE, HP, JVC/Victor, Kodak, Leaf, Minolta/Konica-Minolta, Motorola, Nikon, Nintendo, Olympus/Epson, Panasonic/Leica, Pentax/Asahi, Phase One, Reconyx, Ricoh, Samsung, Sanyo, Sigma/Foveon and Sony.

ExifTool is also available as a stand-alone Windows executable and a Macintosh OS X package: (Note that these versions contain the executable only, and do not include the HTML documentation or other files of the full distribution above.)

The stand-alone Windows executable does not require Perl. Just download and un-zip the archive then double-click on " " to read the application documentation, drag-and-drop files and folders to view meta information, or rename to " " for command-line use. Runs on all versions of Windows.

The OS X package installs the ExifTool command-line application and libraries in /usr/local/bin. After installing, type " " in a Terminal window to run exiftool and read the application documentation.

Read the installation instructions for help installing ExifTool on Windows, Mac OS X and Unix systems.

ExifTool can Read, Write and/or Create files in the following formats. Also listed are the support levels for EXIF, IPTC, XMP, ICC_Profile and other metadata types for each file format.

ExifTool can Read, Write and/or Create the following types of meta information in JPEG images:

Requires Perl 5.004 or later. No other libraries or software required, but some optional Perl modules may be added to enable certain ExifTool features (for details, see the DEPENDENCIES section of the README file included in the full distribution).

Windows users: A stand-alone Windows executable version of ExifTool is available which doesn't require Perl. You can also use the pure Perl version if you already have Perl installed. (You can get a good, free Perl interpreter from activeperl.com.)

Everyone else (Mac, Unix, etc): Don't worry, you already have Perl installed.

The exiftool application provides a convenient command-line interface for the Image::ExifTool Perl package (both included in the full distribution). Once you have downloaded and extracted the distribution, you can immediately run exiftool (without building or installing) by typing " " (or " " in Windows), where is the exiftool directory and is the name of an image file, including directory name. Read the installation instructions or the README file included in the full distribution for help installing ExifTool.

Many command-line options are available to allow you to access a wide range of features. Run exiftool with no arguments for a complete list of available options with examples.

The Perl application (" ") is run by typing " ". Alternately, you may be able to rename it to " " and type " ", but this requires that the proper Windows associations have been made for the the " " extension.

The stand-alone version (" ") should be renamed to " " to allow it to be run by typing " " at the command line.

If the exiftool executable (" " or " ") is not in the current directory or your system PATH, then its directory must be specified on the command line (eg. by typing " " or " ").

Note that when typing commands in the "cmd.exe" shell, you should use double quotes instead of single quotes as shown in some examples.

Double-click on " " to read the application documentation, or drag-and-drop files and folders to run exiftool on the selected files.

Simple options may be added inside brackets in the name of the stand-alone executable. (But note that the characters may not be used because they are invalid in Windows file names.) In this way, the behaviour of the drag-and-drop application can be customized. For example:

Hint: Options may also be added to the "Target" property of a Windows shortcut for the executable. Using a shortcut has 3 advantages over adding options in the file name: 1) different shortcuts may be created without requiring multiple copies of the executable, 2) characters which are invalid in file names may be used, and 3) the shortcuts can be given more meaningful (and convenient) file names.

As well, it may be useful to increase the window and buffer sizes to display more information: Right-click on the window's title bar then select "Properties" from the menu and change the window layout settings.

The Verbose ( ) and HtmlDump ( ) options print additional information that can be very useful for debugging or when decoding new tags.

A tag name is a "handle" that is used to refer to a specific piece of meta information. Tag names are entered on the command line with a leading ' ', in the order you want them displayed. Case is not significant. The tag name may be prefixed by a group name (separated by a colon) to identify a specific information type or location. A special tag name of " " may be used to represent all tags, or all tags in a specified group. For example:

A complete list of ExifTool Tag Names accompanies this documentation. As well, current lists of available tag names and writable tag names may be obtained using the exiftool and options. But perhaps the easiest way to determine a tag name is to use the option to print the tag names instead of descriptions for all information in a file. It may also be helpful to use the option to display the group names, and the or option to print the numerical tag ID's for reference.

Shortcut tags represent one or more other tags, and are used like any other tag when reading, writing or copying information.

ExifTool defines a few shortcut tags in the Image::ExifTool::Shortcuts module, and allows users to define their own shortcuts in a configuration file called " " in their home directory or exiftool application directory. Here is a simple example that defines two shortcuts:

In this example, MyShortcut is a shortcut for the CreateDate, ExposureTime and Aperture tags, and MyAlias is a shortcut for FocalLengthIn35mmFormat.

The current shortcuts may be listed with the option.

The file may also be used to define new tags. For more information about the configuration file, see the sample configuration file included with the ExifTool distribution.

Windows tip: You may have difficulty generating a filename beginning with a ' ' in the Windows GUI, but it can be done with the " " command at the cmd.exe prompt.

ExifTool classifies tags into groups in five different families. These groups are:

The exiftool output can be organized based on these groups using the or option. See the GetGroup function in the ExifTool library for a description of the group families.

When writing information, ExifTool preserves the original file by adding " " to the file name. Be sure to keep a copy of the original, or thoroughly validate the new file before erasing the original. (Read here for some ramblings on the subject of writing meta information.)

Tag values are written rather than being extracted if any tag name ends with a ' ' symbol (or if the or options are used). The ' ' may be prefixed by ' ', ' ' or ' ' to add a value, remove a value or set a value from file. The following table outlines the different write syntaxes:

Quotes are required around VALUE if it contains spaces or other special characters, and around the whole argument if the ' ' syntax is used (to prevent shell redirection).

A special feature allows the print conversion to be disabled on a per-tag basis by suffixing any tag name (including ' ') with the ' ' character. This has the same effect as the option, but for a single tag. See the -n option in the application documentation for more details.

Note: Changes to PDF files are reversible because the original metadata is never actually deleted from these files. See the PDF Tags documentation for details.

ExifTool prioritizes the following types of meta information when writing:

Many tag names are valid for more than one of these groups. If a group name is not specified when writing information, then the information is added only to the highest priority group for which the tag name is valid (however, the information is updated in all groups where the tag already existed). The priority of the groups is given by the list above. Specifically, this means that new information is added preferentially to the EXIF group, or to the IPTC group if no corresponding EXIF tag exists, or finally to the XMP group.

Alternatively, information may be written to a specific group only, bypassing these priorities, by providing a group name for the tag. The "Writing Meta Information" section above gave the syntax rules for exiftool command-line arguments to do this. Any family 0, 1 or 2 group name may be used when writing information, although not all groups are writable.

A special ExifTool option allows copying tags from one file to another. The command-line syntax for doing this is " ". Any tags specified after this option on the command line are extracted from source file and written to the destination file. If no tags are specified, then all writable tags are copied. This option is very simple, yet very powerful. Depending on the formats of the source and destination files, some of tags read may not be valid in the destination file, in which case they aren't written.

This option may also be used to transfer information between different tags within a single image or between different images. See the -tagsFromFile option in the application documentation for more details.

Some ExifTool options ( , , and copying arguments like ) have the ability to execute Perl code from within command-line arguments. This may be a security problem if ExifTool is executed from another application that blindly passes untrusted file names on the command line (since they may be interpreted as ExifTool options if they begin with a dash). To be secure, the calling application must ensure that input file names do not start with a dash (U+002D) or a Unicode minus sign (U+2212). The easiest way to accomplish this is to prefix input file names with a known directory name, eg.) .

Have you ever forgotten to set the date/time on your digital camera before taking a bunch of pictures? ExifTool has a time shift feature that makes it easy to apply a batch fix to the timestamps of the images (eg. change the "Date Picture Taken" reported by Windows Explorer). Say for example that your camera clock was reset to 2000:01:01 00:00:00 when you put in a new battery at 2005:11:03 10:48:00. Then all of the pictures you took subsequently have timestamps that are wrong by 5 years, 10 months, 2 days, 10 hours and 48 minutes. To fix this, put all of the images in the same directory (" ") and run exiftool:

The example above changes only the DateTimeOriginal tag, but any writable date or time tag can be shifted, and multiple tags may be written with a single command line. Commonly, in JPEG images, the DateTimeOriginal, CreateDate and ModifyDate values must all be changed. For convenience, a shortcut tag called AllDates has been defined to represent these three tags. So, for example, if you forgot to set your camera clock back 1 hour at the end of daylight savings time in the fall, you can fix the images with:

See Image::ExifTool::Shift.pl (download in PDF format) for details about the syntax of the time shift string.

Note: Not all date/time information is covered by the AllDates shortcut. Specifically, the filesystem date/time tags are not included, and this command will reset FileModifyDate to the current date/time as it should when the file is modified, unless either the option is used, or FileModifyDate is set to something else. To shift FileModifyDate along with the other tags, add to the command above.

By writing a new value to the FileName and/or Directory tags, files can be renamed and/or moved to different directories. This can be a very powerful tool in combination with the (date format) option for organizing images by date/time. For example, the following command renames all images in directory " " according to the individual file's creation date in the form " ".

Or a new directory can be specified by setting the value of the Directory tag. For example, the following command moves all images originally in directory " " into a directory hierarchy organized by year/month/day:

Read here for more details about this powerful feature.

There is a significant overhead in loading ExifTool, so performance may be greatly improved by taking advantage of ExifTool's batch processing capabilities (the ability to process multiple files or entire directories with a single command) to reduce the number of executed commands when performing complex operations or processing multiple files.† [One exiftool user documented a 60x speed increase by processing a large number of files with a single command instead of running exiftool separately on each file.] Also, the option may be used to perform multiple independent operations with a single invocation of exiftool, and together with the option provides a method for calling applications to avoid this startup overhead.

It has also been observed that the loading time of ExifTool for Windows increases significantly when Windows Defender is active. Disabling Windows Defender may speed things up significantly.

The processing speed of ExifTool can be improved when extracting information by reducing the amount of work that it must do. Decrease the number of extracted tags by specifying them individually ( ) or by group ( ), and disable the composite tags ( ) and the print conversions ( ) if these features aren't required. Note that the exclude options ( or ) are not very efficient, and may have a negative impact on performance if a large number of tags are excluded individually.

The option can significantly increase speed when extracting information from JPEG images which are piped across a slow network connection. However, with this option any information in a JPEG trailer is not extracted. For more substantial speed benefits, may be used to also avoid extracting MakerNote information if this is not required.

When writing, avoid copying tags (with ) or using the or option because these will add the extra step of extracting tags from the file. Without these the write operation is accomplished with a single pass of each file.

The " " script provides a command-line interface to the Image::ExifTool Perl library module which is part of the ExifTool distribution. The Image::ExifTool module can be used in any Perl script to provide easy access to meta information. Here is an example of a very simple script that uses Image::ExifTool to print out all recognized meta information in a file:

Note that some tag values may be returned as SCALAR references indicating binary data. The simple script above does not handle this case.

See the Image::ExifTool Documentation for more details.

Below are some free utilities which take advantage of the ExifTool engine:

There is still much unknown information in the maker notes for many camera models. (To see this information, run exiftool with the option.) In this area, ExifTool is very much a collaborative effort, and development relies heavily on the input from camera owners to help decode new meta information. If you manage to figure out what any of it means, send me an e-mail (phil at owl.phy.queensu.ca) and I'll add your new discoveries to ExifTool. Many thanks to all who have helped so far...

Thanks to everyone who has sent in bug reports, comments, or suggestions, and special thanks to the following people for their valuable input and/or additions to the code:

This is free software; you can redistribute it and/or modify it under the same terms as Perl itself.

ExifTool is free, but due to popular request I am providing a way for those who feel the need to send me some money. It is really not necessary, but thank you very much if you decide to make a contribution:

If you have any comments, suggestions or questions, please post to the ExifTool Forum so other people may benefit from your experiences. (I check the forum at least as often as my email.) Otherwise, if you must contact me directly, my e-mail address is on the first line of the README file in the full distribution. Thanks.   - Phil Harvey|||

A command-line application and Perl library for
  reading and writing EXIF, GPS, IPTC, XMP, makernotes and other meta information
  in image, audio and video files.  For Windows, Mac OS X, and Unix systems.