Mmake is a small program which wraps to provide additional functionality, such as user-friendly help output, remote includes, and eventually more. It otherwise acts as a pass-through to standard make.

Next add the following alias to your profile:

Make's primary function is not to serve as a "task runner", however it's often used for that scenario due to its ubiquitous nature, and if you're already using it, why not! Make is however lacking a built-in mechanism for displaying help information.

Mmake provides a command to display all target comments in short form:

The command is also supported to display long form:

The verbose flag can be used to display long form for all targets:

The default behaviour of Make is of course preserved:

Includes may specify a URL for inclusion, which are automatically downloaded to /usr/local/include and become available to Make. Note that make resolves includes to this directory by default, so the Makefile will still work for regular users.

Includes are resolved recursively. For example you may have a standard set of includes for your team to run tests, lint, and deploy:

This can be a lot to remember, so you could also provide a file which includes the others:

Or perhaps one per dev environment such as Node or Golang:

If you're worried about arbitrary code execution, then simply fork a project and maintain control over it.

If you're looking to find or share makefiles check out the Wiki, and feel free to add a category if it is missing.|||

mmake - Modern Make