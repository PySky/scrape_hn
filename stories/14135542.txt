Django Scheduler relies on jQuery and Bootstrap to provide its user interface. If you don't need help with adding these to your Django project, you can skip the next step where we will show you how to add them to your Django project.

Specify the path to the components root (you need to use an absolute path):

Add the following Bower dependencies for scheduler:

This setting determines which day of the week your calendar begins on if your locale doesn't already set it. Default is 0, which is Sunday.

This setting controls the behavior of . If set, all calendar modifications will redirect here (unless there is a set in the request.)

This setting controls the behavior of . If True, then occurences that have been cancelled will be displayed with a css class of canceled, otherwise they won't appear at all.

This setting controls the callable used to determine if a user has permission to edit an event or occurrence. The callable must take the object (event) and the user and return a boolean.

If ob is None, then the function is checking for permission to add new events

This setting controls the callable used to determine if a user has permission to add, update or delete an events in specific calendar. The callable must take the object (calendar) and the user and return a boolean.

This setting controls the callable that gets all events for calendar display. The callable must take the request and the calendar and return a of events. Modifying this setting allows you to pull events from multiple calendars or to filter events based on permissions

This setting allows for custom base classes to be used on specific models. Useful for adding fields, managers, or other elements.

Extend all the models using a list:

Extend specific models using a dict, where the key is the model class name:

This settings allows to set the upper and lower limit in calendars navigation. Value is in seconds.|||

django-scheduler - A calendaring app for Django.