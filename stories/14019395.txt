Hashing is a method of determining the equivalence of two chunks of data. A cryptographic hash function generates a unique string for any set of data. Examples of these data could be files, strings, streams, and any other items that can be represented in binary format.

You've probably seen a hash string on the downloads page of some of your favorite tools, packages, or libraries. For example, Kali Linux has one for each of its releases. But why is that?

This is to ensure that the original file on their server is the same as the one that you've downloaded. For example, the SHA-256 hash of the Kali ISO is below.

If you download the file, you should hash your local copy. If the resulting hash is equivalent to the one found on their website, you can rest assured that the file has not been tampered with during the download and that you have the same, correct file.

Excellent question. Let's get technical! I'm assuming you have Python 2 installed, by the way.

1- Let's import the library we need.

2- Now let's choose our hashing algorithm. For more information on their differences, check this out.

3- We're basically set up, now we'll go ahead test the function on a string.

Awesome, there's a SHA-256 hash of the string "Hello World!". Now we'll prove that the hash is different for similar data.

It's totally different.



 4- Now that we know that our function works, let's try it on a file

There we go. You've got some pretty good knowledge of hashing now. So, go. Go on! Secure the integrity of your data and hash all the things!



 

 Also, follow me on Twitter and Github, please.|||

What is hashing and how can you do it?