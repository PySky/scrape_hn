A tool for converting C to Go.

The goals of this project are:

The program processes a single C file and outputs the translated code in Go. Let's use an included example, prime.c:

main ( ) ... lots of system types in Go removed for brevity. () { fmt. ( ) fmt. ( , &n) n == { fmt. ( ) } { c = ; c <= n - ; c += { n % c == { } } c != n { fmt. ( ) } { fmt. ( ) } } }

This is the process:

The C code is preprocessed with clang. This generates a larger file ( ), but removes all the platform specific directives and macros. is parsed with the clang AST and dumps it in a colourful text format that looks like this. Apart from just parsing the C and dumping an AST, the AST contains all of the resolved information that a compiler would need (such as data types). This means that the code must compile successfully under clang for the AST to also be usable. Since we have all the types in the AST it's just a matter of traversing the tree is a semi-intelligent way and producing Go. Easy, right!?

By default only unit tests are run with . You can also include the integration tests:

Integration tests in the form of complete C programs that can be found in the tests directory.

Contributing is done with pull requests. There is no help that is too small! :)

If you're looking for where to start I can suggest finding a simple C program (like the other examples) that do not successfully translate into Go.

Or, if you don't want to do that you can submit it as an issue so that it can be picked up by someone else.|||

c2go - ⚖️ A tool for converting C to Go.