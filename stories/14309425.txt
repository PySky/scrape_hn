Techniques you can leverage to take your visualization interfaces from good to great

Data visualization interfaces are everywhere, but visualization experiences that facilitate fluid conversation between you and the data are the truly great ones. They’re the ones that let you form your assumptions, then ask questions and find the answers to test them. Why does the data look the way it does? What happens if I exclude some specific subset of it?

Today I’m going to dive into five techniques you can use to make your data visualization interfaces more interactive. I’ll provide a brief overview of each technique and an example of its usage.

Filtering is one of the most useful and flexible techniques we have at our disposal. It’s the mechanism that most other techniques are built off of, as you’ll see later on.

Filtering is powerful in its simplicity: it’s simply the act of taking one data set, then by some method filtering it down to a subset of that data. You can imagine how this could be powerful, as you can slice and dice the data any way you want. This is great when you know how you want to filter the data, when you have a specific question you want to ask of it.

Sometimes, especially with unfamiliar datasets, we don’t have a specific question we want an answer to. This is where filtering starts to become less helpful, since raw filtering requires we know the question we want to pose in the first place. Sometimes we need to give our users a nudge, to help them get on the right track and find a meaningful way to filter the data.

The chart below is configured to come with a filter already loaded. Go ahead and remove it, or add a new one.

Search is another very general technique, and can be useful when the user is exploring a dataset completely foreign to them. I think of it as filtering without the how, allowing you to filter through the data without making you specify what you want to filter on.

We’ve found text search to be particularly useful when viewing row-level data, such as in a table. By embedding a search field right within the table, users can drill into the data right where the data is presented, and get a general idea of their dataset.

You may not know much about our example dataset below, but you can try searching for a state you know below to begin exploring.

Drilldowns build on top of filtering, but have more structure in place to guide the user into creating useful filters. When people think of “digging into” the data, they’re probably thinking of drilldowns. A common use case is allowing a user to click on a pie slice, then “drill into” that slice.

When you drill into the data, two things happen:

Clicking on a region below will update the chart to display states in that region.

Cross filtering is another technique that builds on top of filtering, but like drilldowns, is more guided in the user interactions. Cross filtering is the practice of visually filtering the data on one chart (possibly with a scrubber), and seeing the results of your filtering on other charts.

Square has a library for building crossfiltering into your D3 charts, which they have a great example of here.

These techniques are specifically useful for timeseries data: data that is visualized over time.

This one’s pretty simple, because mechanically it’s the same as filtering. However, because we know we’re filtering by date, we can make the UI more specialized for this use case. One way many people do this is by using a datepicker and allowing the user to select a date range. This doesn’t feel like filtering, but mechanically it’s the same thing.

Go ahead and change the date range below, to see how it changes the data rendered.

Sometimes, you want to be able to see the data at different granularities, especially with date filtering. If your data is aggregated by week, and you’re viewing one week of data, one data point is usually not going to be very useful. However, seeing the data aggregated by day could be.

Try switching out “Month” for “Week” or “Day” to see what the data looks like when presented in different granularities.

I’ve seen many data visualization interfaces: some of them great, some of them good, and a lot of them leaving something to be desired. What fascinates me is the difference between good and great, which I’ve found usually boils down to the interactivity.

Visualizations that let you get some high-level insight at a glance can be very useful, but the experiences that let you actually slice, dice, and dig into the data are the great ones. Good visualization interfaces are like conversations: a two-way street of discussion, of judgments and questions, and finding clarity.|||

Techniques you can leverage to take your visualization interfaces from good to great