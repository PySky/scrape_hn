Honeybadger was born from our frustration when our favorite error tracker stopped caring.

There are many error tracking apps on the market today, but in 2008 there were few choices; Hoptoad (later renamed to “Airbrake” due to a legal dispute) was the first of its kind, and our favorite.

We loved Hoptoad because it notified us of bugs in our Ruby on Rails apps before our clients could complain; it was truly revolutionary. It also had a fun name, was easy to use, and was built by people we admired: Thoughbot—they were Ruby developers, just like us!

Our lives as Rails developers were great, and we used Hoptoad daily to keep our applications error-free.

Hoptoad was eventually renamed to Airbrake, and in 2011 sold to a competitor. The new owner did not seem to care about Airbrake like Thoughtbot did. They raised the prices while their infrastructure suffered, and our error notifications became unreliable.

The final straw was in 2012 when Ben and Starr (who worked together at a Seattle startup) had an error in their Ruby on Rails application.

They got an email about it, but when they clicked through to the UI, there were no details. Ben emailed Airbrake’s customer support and said, “we had this error in our application, but there is no detail about it in your UI... can you tell me what’s going on?” They basically responded, “yup, we see you reported an error to us, but the detailed information isn’t available.”

Ben was exasperated at having what he said repeated back to him verbatim. He turned to Starr and said, “we should just build our own exception monitoring app.”

Meanwhile, Josh (who owned a freelance business and had worked with Ben and Starr in the past) was having similar issues. It irked him every time he’d get an email, click through to the UI, and see a loading indicator—one which spun incessantly, never loading anything. When he heard Ben and Starr had started on a replacement, he wanted in.

Our app — code name “Honeybadger” — was born.

Over the summer of 2012 we worked tirelessly on nights and weekends to build it. Once we started, it was all we talked about, and more than anything we wanted to share it with other developers like us.

We felt that developers deserved better service than what we had received, and we felt that we could provide it to them. We bet that there were others who were frustrated, and that they would pay for a better alternative. In October, we won that bet: we launched Honeybadger with paying customers on day one.

From the very beginning, our mission has been to make developer’s lives better, and we’ve had a blast fulfilling that mission.

It’s also why we operate the business like we do. Because we are 100% self-funded (bootstrapped with our own savings and sweat equity), we answer to no one but you, our customer.

As a result, Honeybadger is built for the hacker. From our deeply powerful error search engine to our no-nonsense, speedy (and not-a-single-page-app™) UI, we’ve built the features that you asked for.

We’re also in this for the long-haul, with no runway, burn rate, or any of the concerns of our competitor’s and their VC-overlords. We’re lean, profitable, and feeding our growing families with this business.

If you’re a customer, thank you for this. We couldn’t have done it without you. If you’re not a customer yet, please consider giving us a try. We built Honeybadger just for you.

PS: If you ever have any questions or want to say hi, drop us a line at support@honeybadger.io—we’d love to meet you!|||

Honeybadger provides exception and uptime monitoring to keep your web apps error-free.