Kong is a scalable, open source API Layer (also known as an API Gateway, or API Middleware). Kong was originally built at Mashape to secure, manage and extend over 15,000 Microservices for its API Marketplace, which generates billions of requests per month.

Backed by the battle-tested NGINX with a focus on high performance, Kong was made available as an open-source platform in 2015. Under active development, Kong is now used in production at hundreds of organizations from startups, to large enterprises and government departments including: The New York Times, Expedia, Healthcare.gov, The Guardian, Cond√® Nast and The University of Auckland.

For more info about plugins, you can check out the Plugin Gallery.

If you're building for web, mobile or IoT (Internet of Things) you will likely end up needing common functionality on top of your actual software. Kong can help by acting as a gateway for HTTP requests while providing logging, authentication, rate-limiting and more through plugins.

We've load tested Kong and Cassandra on AWS; you can see our benchmark report here.

Kong comes in many shapes. While this repository contains its core's source code, other repos are also under active development:

Here is a list of third-party tools maintained by the community:

You can find a detailed Roadmap of Kong on the Wiki.

If you are planning on developing on Kong, you'll need a development installation. The branch holds the latest unreleased source code.

You can read more about writing your own plugins in the Plugin Development Guide, or browse an online version of Kong's source code documentation in the Public Lua API Reference.

You can use a Vagrant box running Kong and Postgres that you can find at Mashape/kong-vagrant.

Kong mostly is an OpenResty application made of Lua source files, but also requires some additional third-party dependencies. We recommend installing those by following the source install instructions at https://getkong.org/install/source/.

Instead of following the second step (Install Kong), clone this repository and install the latest Lua sources instead of the currently released ones:

Check out the development section of the default configuration file for properties to tweak in order to ease the development process for Kong.

Modifying the and directives will allow Kong to find your custom plugin's source code wherever it might be in your system.

Kong relies on three test suites using the busted testing library:

The first can simply be run after installing busted and running:

However, the integration and plugins tests will spawn a Kong instance and perform their tests against it. As so, consult/edit the configuration file to make your test instance point to your Postgres/Cassandra servers, depending on your needs.

You can run the integration tests (assuming both Postgres and Cassandra are running and configured according to ) with:

And the plugins tests with:

Finally, all suites can be run at once by simply using:

Consult the run_tests.sh script for a more advanced example usage of the tests suites and the Makefile.

Finally, a very useful tool in Lua development (as with many other dynamic languages) is performing static linting of your code. You can use luacheck (installed with ) for this:

When developing, you can use the for doing the following operations:

Learn more about Kong Priority Support, Products, HA, Demo, Training, API Certifications and Professional Services.|||

kong - :monkey: The API Gateway & Microservice APIs Management Layer, built on NGINX