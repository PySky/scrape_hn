A tool to build and manage Discourse theme customizations.

 Generate files that you can upload or paste into the Discourse admin interface, allowing you to use your existing workflow and source control.

You can use valletta from within a node script

or from the command line

By default valletta will look for the first matching config file called , if any, in the current directory, nearest ancestor, or user's home directory. The config file should export an options object that will be used to generate the discourse theme file.

Here is an example file:

Compiles source files into a JSON theme file that can be imported into a Discourse forum. Accepts an options object. Returns a promise that is resolved with the path to the generated theme file.

The name of the generated theme. Defaults to .

If the theme should be enabled. This should be a Boolean value Defaults to .

The source directory to search for theme files in.

 Defaults to the current directory.

The directory to write the generated theme file to. If the directory doesn't exist it will be created automatically.

 Defaults to the current directory.

An object containing key / pair values for theme files. The value can either be a string, where the value is the path to the theme file, relative to the option.

 Alternatively, the value can be a Promise that will return the contents of the theme file.

Possible keys for this option are:

Generates a JSON theme file. By default it will use files in the current directory and output JSON in the current directory. If a file is found, then it's options will be used instead.

Generates a blank theme file for each of the possible file options listed here. Files are generated in the current working directory.|||

valletta - Tool to build and manage Discourse theme customizations