At Bloom, we’ve built a large plant database from a number of sources. We store about two dozen fields for each plant: height, width, type of plant, lighting and moisture needs, etc.

We rely on these fields to pick the best plant, so data cleanup has been a big challenge. Since we have so many plants and so few people, we used machine learning to fill in some gaps.

In this example, we’ll consider ‘plant type’. This is a plant categorization: annual, perennial, shrub, conifer, etc. It’s a great field to search on, but it was missing for about 1/3 of our plants, leaving out a lot of great results.

A few earlier attempts at classification weren’t especially successful. We attempted to ignore the entire ‘plant type’ field and try classification with features alone- ultimately, the ‘plant type’ is based on the features, right? We’re previously used K-Means to standardize our soil moisture data.

Using classification algorithms like K-Means (and a few others) gave less than convincing results. Some clusters were solid, but others contained thousands of plants, including combinations that were simply wrong.

We decided to do plant classification based on the name alone. A name should accurately describe a plant, and it’s probably the feature a human would use if asked to do the task. We’re combining common and scientific names.

We constructed a matrix of words and plants.

We ran this through a fully-connected neural network with Tensorflow.

The network consistently classified plants by name. As with any machine learning, some review is needed and there are a few mistakes. But it has proved a massive time saver.|||

At Bloom, we’ve built a large plant database from a number of sources. We store about two dozen fields for each plant: height, width, type of plant, lighting and moisture needs, etc. We rely on these…