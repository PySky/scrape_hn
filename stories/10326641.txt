Fetch and run in one line:

When invoked without options, pythonize uses Continuum's Anaconda to install Python 2.7, conda, pip, and [100+ popular Python packages] (http://docs.continuum.io/anaconda/pkg-docs):

pythonize performs unattended download, installation, and configuration for the Anaconda Python distribution and its environment / package manager conda: In one command line, you get a ready-to-use Python preloaded with the libraries you want.

By default, pythonize does this:

Anaconda Python gives you 100+ popular Python packages beyond the Python standard library — but if you want a leaner installation (10x smaller) including only Python and conda, you can install Miniconda instead by using the option.

More than making Python set-up ridiculously easy, pythonize also facilitates a novel approach to deploying Python applications on Linux and OS X systems: With the option, pythonize completely abstracts Python version and library dependencies from the wrapped application's users.

That means you can code for the Python environment you want. You don't need to grind out kludges for ancient Pythons, add code-clutter for [Python 2/3 compatability] (http://python-future.org/quickstart.html#next-steps), design complex egg / wheel spec files, or leap down the bottomless rabbit hole of freezing or cross-compiling your Python code: Your application just works — even if your users don't have Python installed at all.

To see a Python application wrapped with pythonize in action, use this pseudo–one-liner to fetch and run the demo:

When invoked with the option, pythonize alters its behavior as follows:

To make wrapping arbitrary Python programs with pythonize as easy as possible, this repo contains an directory with the files you'll need, already in the recommended layout.

Just follow these steps to get going:

That's it — you're done. Your Python app is now pythonized.

Users will run your application the same way they did before, but as an implementation detail, the main executable is now a shell wrapper around your Python program.

The shell wrapper checks that the current execution environment satisfies your expressed dependencies and, if it doesn't, invokes pythonize to fetch the required Python version and/or libraries before running your Python app — and the end user doesn't have to do a damned thing.

To read the full user documentation for pythonize, consult its manual page:

To discover implementation details (including how this can be imported as a shell library and used by other utilities in an OOP-like style), browse the source: it's extensively commented for that purpose.

pythonize has been tremendously useful to me. I've used it as part of bootstrapping cloud and local boxen when golden images were unavailable or nonexistent. I've employed it to package Python apps for sharing with other engineers at work and to run Python admin scripts in wild-west server environments where sane configuration management remains a pipe dream.

I made pythonize mainly to scratch my own itch — and now I'm sharing it, on the off chance some other people may be itchy, too.

There's been more interest in this project than I expected (I wasn't really expecting any, so I was extremely pleasantly surprised to see pythonize listed in the Python Weekly Newsletter).

Because of that, I'm working on a 1.0 release (I consider the current version a beta).

The standout feature of the 1.0 release will be Windows support.

Currently, I plan to implement Windows support via a Windows PowerShell program pythonize.ps1 that I'll add to this repo. I have a strong *nix bias but no Windows antipathy: I just genuinely prefer Linux. However, now that I've been studying the PowerShell documentation in depth, I find it to be a surprisingly amazing control language, and I'm excited about porting the Bash version to it.

When complete, Windows users will be able to use a command similar to this as a quickstart from a PowerShell console (provided they already have Git for Windows):

Depending on other time commitments, I may have this built within a couple of weeks.|||

pythonize - download, install, and configure Python in one line