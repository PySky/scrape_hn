Did you know that you could right click on any line of Javascript code in Google Chrome Developer Tools, and select “Never Pause Here” to undo breakpoints at runtime? This is different from disabling a breakpoint. This actually forces code NOT to stop on a particular line.

It seems counterintuitive, but there are a couple of reasons this is really useful for those debugging sessions.

TL;DR Right click in the area where you’d normally set breakpoints, select “never pause here” and you can prevent the debugger from stopping on exceptions or statements.

Many Javascript programmers already know that you can use the keyword in your code and it will stop execution on that line.

But check out the code above. If you want to continue to the line that prints “blastoff”, you need to resume execution with F8 a hundred times to continue past the block! Right click the line and “never pause here” will come to your rescue.

I usually like to leave exception breakpoints “on” when debugging my scripts.

But imagine you’re deep into debugging some code, and you keep hitting JS errors before you get back to the place you’re interested in. This can be annoying and ruin your train of thought.

Why not just fix the error?

Consider this real life example: Your marketing team forces you to include some [crappy] analytics code that occasionally errors out. You can either remove the code in dev mode, or work around it with “never debug here”.

I really want to debug the code in but I’m constantly interrupted by . Use “Never Pause Here” and you’re done!|||

Did you know that you could right click on any line of Javascript code in Google Chrome Developer Tools, and select “Never Pause Here” to undo breakpoints at runtime? This is different from disabling…