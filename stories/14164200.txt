I do lots of monitoring on my site (I’d rather watch logs than Netflix) which I’ll talk about in separate posts, but today I want to talk about SSH. I’m going to cover how I log, how I get those longs into Splunk, and what kinds of searches and alerts I have set up.

First off, I’m running Ubuntu 16.04, and SSH natively logs to . So the first thing I do is go to Settings –> Data Inputs –> Add Data within Splunk, and then add to the inputs. That basically makes it so that Splunk monitors every log file coming under that directory, which is most logs on an Ubuntu system.

The next thing to figure out is what we want to know about incoming SSH attempts. It’s a common problem within security that people just start making metrics without thinking about their questions first. My questions were:

The first question requires us to look for invalid user entries in the logs. The second requires us to extract that user out of the log. And the third question requires us to get geolocation from the connecting IP address.

So within Splunk, there are a few tools that help us do this.

To find invalid users you simply search for entries like that in the logs, and the string happens to be, literally, “invalid user”. You get some junk in those results which you can clean up with a couple of NOT statements, leaving you with the following search.

This gives you results like the following:

This is decent, but we can do better. You can see that we have invalid users here in each entry—in this case admin, but the power of Splunk is taking fields inside of raw log files and turning those into actual fields you can manipulate and play with.

For that, we need to do some field extraction. To do that, click on the “>” in any individual search result, click the Event Actions pulldown, and select Extract Fields.

First we’re going to extract the invalid user, and we do that by picking the Regular Expression option, selecting the word “admin” in the log, and saving it as . Now we have that as a field, which looks like this in search.

Now to figure out who’s launching these attacks against us, we’re we need to convert that IP address we see into a location. Splunk does this automatically now with a built-in function called . But first we need to extract that IP into a variable of its own.

So we go through the process above and select the IP address this time, and save it as . So now we have two different variables stored: , and

Then we add the following to our search query: , which looks like this.

Which then gives us these interesting new options to the left of the results.

We now have “City” and “Country” as options, and further down we have “Region” as well. So Splunk has automatically translated all those IPs into locations.

Now that we have all these fields extracted, let’s add them to the search output. Just click the “All Fields” button to the left, and select the ones we’ve created. Results now look like this:

That’s coming along nicely. We can now see the country, the city, and the username they tried to log in with!

Now that we have the components in place, we can start having fun with what Splunk does for us automatically. The fields to the left area all clickable.

And when you do click on them, they expand out into a statistical view.

And then finally, graphing the results by clicking “Top values” in one of those boxes.

Bottom line here is that it’s possible to do all kinds of fun stuff with default SSH logs, a free Splunk installation, and just a few minutes.|||

I do lots of monitoring on my site (I'd rather watch logs than Netflix) which I'll talk about in separate posts, but today I want to talk about SSH. I'm go