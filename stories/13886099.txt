PHP is one of the most popular scripting languages on the web today. According to W3Techs, PHP is used by over 82% of all the websites who use a server-side programming language. This means for every 8 out of 10 websites you visit, they are most likely utilizing PHP in some form or another. And of course, it plays a very vital role as it pertains to the WordPress ecosystem, as the entire CMS is built on PHP.

A dilemma we are facing today is that many businesses, developers, and hosts have fallen behind when it comes to supporting the latest PHP versions. Some of the statistics below might even shock you. Today we want to discuss some of the reasons why it is so important that everyone use the latest PHP versions, not only for security reasons, but also for better performance and support.

As with any piece of software, PHP has a release life cycle in which has has to adhere to in order to keep pushing things forward and making improvements.  Each major release of PHP is typically fully supported for two years after its release. During that time, bugs and security issues are fixed and patched on a regular basis.

As of right now, anyone running on a version of PHP below 5.6 no longer has security support and are exposed to un-patched security vulnerabilities. And guess what? According to the official WordPress Stats page, as of writing this, over 50% of WordPress users are still on PHP 5.4 or lower. This is not only bad from a security perspective, but also because there is still a large portion of WordPress sites that aren’t taking advantage of the additional performance enhancements with PHP 7.

The main reason for the lack of faster adoption for new versions most likely comes down a few different factors:

However, with all that being said, it is still not an excuse to run on PHP versions that are out of date, not supported, and actually could be slowing your WordPress site down. The good news is that there is some progress being made.  Jordi Boggiano, co-founder of Private Packagist, puts together a report each year on PHP usage statistics. And as you can see below, there is some movement forward. This is of course just a sample subset of Composer installs, but still interesting to see the changes.

Check out some of the reasons below why you should think about updating if you haven’t already.

One of the most important reasons to update PHP is to ensure you are running on a version that is fully supported and patched regularly for security vulnerabilities. PHP 5.4 has not been patched since 2015. And PHP 5.5 has not been patched since 2016. It is important to note though, that some operating system vendors still update older versions of PHP if they included it.

According to CVE Details, 2016 was actually a record year for PHP security vulnerabilities, with over 100 issues reported. These included DoS, code execution, overflow, memory corruption, XSS, directory traversal, bypass, and gain information types.

Even PHP themselves give some feedback about staying current:

With the release of PHP 7 came huge performance gains! So big in fact, that it should be priority over a lot of the small optimizations you might playing around with on your WordPress site. The following benchmarks demonstrate significant performance improvements with PHP 7 over its previous iterations. PHP 7 allows the system to execute twice as many requests per second in comparison with the PHP 5.6, at almost have the latency.

We also ran our own performance benchmarks last year with PHP 5.6 vs PHP 7 vs HHVM. And similarly to the benchmarks above we saw that PHP 7 could excecute almost three times as many transactions per second as compared to PHP 5.6.

Christian Vigh also published a PHP performance comparison in which he found that PHP 5.2 was 400% slower than PHP 7.

Support is another reason why you want to use the latest and supported PHP versions. Many times, developers of plugins and themes can only extend support back for older versions so far. A lof this is due to time constraints and not having time to test compatibility. Things will eventually break when you run on old versions, and you can see this happening first hand in the WordPress forums. Here is a common error, which is typically caused by an older PHP version and how it treats a certain function:

You can do a search in the WordPress forums for “unexpected T_Function” and it returns over 2,000 threads, many with results from within the last couple days. Here are just a couple recent ones, all due to running old versions of PHP:

Many of these threads are being opened due to the fact that they are running on outdated versions of PHP. However, the same could also be said for threads being open due to PHP 7 compatibility issues. Which shows that the WordPress development community is still trying to catch up with newer versions of PHP.

Most WordPress developers would prefer to only work on newer versions of PHP if they could, simply due to the fact that there have been so many new features added between PHP 5.2 and PHP 7.1. A few changes with PHP 7 and 7.1 include:

It’s no fun to support old versions of anything. Unfortunately a lot of developers are stuck having to support a wide range of versions.

It took a while, but the official WordPress.org requirements now recommend a host running PHP version 7 or greater.

Yoast just recently published a great article called “Whipping Your Host Into Shape.” In the article Joost de Valk goes into detail about how the real issue is that hosting providers aren’t adopting this faster, and even if they are, they aren’t encouraging users to upgrade. And Yoast is going to do something about it. As of Yoast SEO 4.5 they are going to start showing a notice on the WordPress dashboard for sites running on PHP 5.2.  This notice will be big, ugly, and non-dismissible.

PHP 7 is the future (and boy is it nice and fast). 😀 -- Joost de Valk via @yoast @kinsta

If we could give Yoast a high five, we totally would! Kinsta has supported the latest stable versions of PHP 7, and 7.1 ever since their stable releases. In fact, every fresh WordPress install here at Kinsta defaults to PHP 7. And PHP 5.6 is the minimum version we allow in our environment. We do not and will never host WordPress sites that are running on an unsupported version of PHP. We encourage people to move to 7 or higher for the best performance.

If your WordPress host is dragging their heels to release newer versions of PHP, we highly recommend you search for a new host. Feel free to contact us to see how we can help.

Perhaps you don’t know what version of PHP your WordPress site is currently on. Check out these different ways below to find out.

One of the easiest ways to check to see which version of PHP you are running is to use a tool like Pingdom or Google Chrome Devtools. The first HTTP request header will typically show you the version.

This relies on the host not modifying the X-Powered-By header value. If they do, you might not see your PHP version, in which case you would need to use the second option below. Or you can always reach out to your host and ask.

You can also check your PHP version by uploading a file via FTP to your server.

Create a blank file called phpinfo.php. In the file, paste the following contents:

Upload the file to the root of your WordPress site.

Then browse to the location of your file, domain.com/phpinfo.php. You should then see a read out of your current PHP version.

Ready to update? Great, but one of the very first things you should do is test your site to ensure compatibility. You could test your WordPress site locally or better yet, utilize a staging environment, as this will more closely resemble a live production site. It’s better to be safe than sorry!

If you are a Kinsta customer you can easily create a staging environment with a single click. Change the PHP version from the dashboard and start testing away.

And remember, if you are upgrading from an old version of PHP, ensure you are also upgrading your WordPress installation as well. A new version of PHP with a 2 year old version of WordPress probably won’t end well. Once you have tested your site and are ready to update PHP, here are some resources to get you up and going fast.

If you are a Kinsta customer, you can easily change the version of PHP by clicking into your site, going to “Tools,” and selecting a different PHP Engine. We have PHP 5.6, PHP 7, and PHP 7.1 available. As well as HHVM. If you are running a larger site, you might want to ask us about the performance benefits of HHVM.

If your host uses cPanel they most likely already have an option available to you to change your version of PHP. Simply login to cPanel and under the “Software” category click on “Select PHP Version.”

You can then select the PHP versions available to you that your host supports.

If you manage your own server, we recommend checking out the official PHP installation documentation as instructions will vary per operating system. You will want look at the changes with functions, classes, wrappers, extensions, modules, etc. Here are a few links to migration guides:

Now is the time to think about upgrading to PHP 7 or higher if you haven’t already. Not only because you want to be running on supported software, but you are guaranteed performance benefits!  If your current WordPress host doesn’t support PHP 7 yet, we strongly encourage you to seek out new hosting. And likewise with themes and plugins. If the developer has yet to release a patch, it might be time to find an alternative.

Have you recently migrated to PHP 7? We would love to hear your thoughts below. Was it an easy transition? Or perhaps you are still stuck waiting on a 3rd party.|||

Supported PHP versions (especially PHP 7 and higher) offer security enhancements, performance benefits, and all around better developer features.