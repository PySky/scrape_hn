There are a handful of common mistakes that candidates frequently make in JavaScript interviews. Most mistakes are forgivable, but a few could easily cost you the job. One of the leading reasons candidates get rejected is poor soft skills.

Here are some tips that can help prepare you to leave a great impression.

What you actually say in an interview may contribute as little as 7% to the hiring manager’s decision to hire you. Skills can be learned. Knowledge can be Googled. But no software manager wants to hire somebody who isn’t confident to make changes and push their code to production for millions of people to see.

You’ve heard the expression “dress for the job you want”?

I think most people get confused by that. Don’t dress for your boss’s boss’s job. Dress for the job you’re applying for. As a JavaScript developer, chances are you make as much or more than the office suits, anyway. JavaScript developers don’t go to work looking like they just stepped off a fashion show runway.

Most JavaScript developers pretty much wear jeans and t-shirts, accented with appropriate personal style touches. Be you and feel free to dress it up a little bit, but keep it casual. Dressing too fancy will project a lack of confidence, a lack of experience, and over-compensation.

By the same token, do dress appropriately for work. Don’t show up looking like you’re on vacation.

Nothing says “I have no idea what I’m talking about” like failing to make eye contact with your interviewer. Don’t stare at them like a crazy person, either. Do remember that you’re addressing somebody and staring off in some other direction the whole time sends messages you don’t want to send. Be confident. Talk to the person you’re talking to, not to the wall or the floor, or your hands.

Confident people who are excited about a job are happy to be in the interview. This is your chance to land a great job. Are you smiling about it? Are you showing the interviewer that you’re excited and happy to be there? Can they tell by looking at you that you appreciate the opportunity?

Failing to smile can sink your chances.

First-time developers typically need about 1300 hours of practice to land an entry-level job (at least 300 coding real applications, not just Code.org or FreeCodeCamp exercises). Most code bootcamps fall a little short of this, and most university curriculum doesn’t focus enough on web technology to get you a job as a JavaScript developer. It’s up to you. Put in a little extra work.

Experienced developers need to have ready answers to common interview questions. Do learn computer science, but not while you’re cramming for interview prep. Skip the algorithm lottery study. It’s called a lottery for a reason. What are the chances you’ll study the right algorithms? Besides, the best interviewers will also skip the lottery and instead ask you to demonstrate your ability to code and come up with solutions to common problems you’ll actually encounter on the real job.

Even if you have a lot of experience, it’s easy to fall behind on tech. Brush up on state-of-the-art JavaScript. Research the tech used on the job you’re interviewing for. If you don’t know it yet, and you really want to impress, crank out a side-project using that tech stack.

If you don’t have any time for side projects, you may struggle to keep up. A career in software development is a commitment to life-long learning, and most employers simply don’t provide enough time for learning and side-projects on the job.

Interviewers have a lot of questions about you that they are unlikely to ask you directly. Those questions are aimed at revealing your soft skills. The challenge for you is that those questions are never directly asked, because that would influence your answer and defeat the purpose of asking.

Here are the secret questions interviewers are really asking:

And here are the sneaky, innocent-sounding questions they use to ask those questions:

Real question: How well do you communicate with people?

Question they actually ask: “Tell me about yourself.” Also, every question in the interview is testing this.

Details: Do you have a personal brand? Do you have a life mission? What do you stand for? What are you passionate about? Do you have a personal elevator pitch? Do you have a unique, interesting story that you can tell in 15 seconds or so, which sums up something that is core and uniquely identifying to you?

Avoid cliches. Be different. Be bold. Every single person who comes in as a “passionate, hard worker, excited about JavaScript”. This is your chance to set yourself apart. Don’t blow it.

For all questions in the interview, keep your answers clear and concise. Don’t ramble. Stay on-topic. If you’ve been talking for more than a minute, pause and give the interviewer a chance to redirect, follow-up, or get a word in. If they don’t jump in, take that as permission to continue. Complete your thought, or fill in a little more detail.

Real question: Do you know your limitations?

Question they actually ask: Any stumper question.

Details: Arrogant people who are hard to work with are often unable to admit their limitations. Nobody wants to work with an arrogant jerk, so to smoke them out, we look for the telltale signs. Likewise, inability to admit you don’t know something is a sure sign that you’re not confident that you know enough to do the job. Confidence is key.

Almost all interviewers will try to stump you with a question you don’t know the answer to. What they want to see is a quick “I don’t know.”

The biggest mistake I see people make is to try to answer a question they don’t know the answer to. They will struggle and stumble for agonizing, uncomfortable minutes. That creates a really bad impression and interview experience for both of you.

Never try to guess or stumble through an answer you’re unsure of. If you don’t know the answer, say “I don’t know.” It’s healthy. Employers want to hear you say “I don’t know” at least once in an interview.

Admitting you don’t know something is the first step to learning it, and some interviewers will teach it to you right there on the spot, so you’ll do better next time. That’s an amazing opportunity, because it gives you a chance to prove that you’re a coachable, quick learner.

Another bonus: People feel good about themselves when they give something back, so if your interviewer has a chance to teach you something new, they’ll subconsciously feel better about the interview experience.

Saying “I don’t know” can help you land the job!

Real question: How well do you deal with challenges?

Question they actually ask: “Tell me about a problem you encountered in the past, and how you solved it.”

Details: For this question, we’re looking for your ability to identify and articulate the problem, diagnose the root cause, and come up with a good solution. Challenges can be technical, or human. This question is very common, so give it some thought before you go into the interview. Keep your explanation short and simple. Don’t ramble. Focus on clarity. Communicate problem, root cause analysis, and solution as clearly as you can. For practice, try writing each of those three points out using less than 140 characters, each, and memorize those talking points. Be prepared to offer more detail if the interviewer asks follow-up questions.

Real question: How excited are you about this company?

Questions they actually ask: “Why do you want to work here?” or “Tell me what you know about us.”

Details: If you’re not excited to work for the company, don’t waste your time with the interview. Find something you really are excited about and jump on that opportunity, instead. It’s much harder to do something you don’t want to do than it is to be true to yourself and pave your own trail.

If you really want the job, you should do a little research. Learn about the company, what they do, and why you might enjoy the job. Do you like the tech? The people? The challenge? What motivates you that they seem to be offering?

Get excited about the opportunity, and be sure to project that excitement. Smile. Get animated. Show some passion for the work. Whatever you do, don’t project a flat, bland personality or demeanor while answering this question, and don’t try to fake excitement, either.

Your time is valuable. Don’t waste it on a company you can’t get excited about.

Question they actually ask: “Why did you leave your last job?”

Details: The way you answer this question can get you immediately rejected, so you’ll want a really good (read: short) answer to it before you go into the interview. Employers know that sometimes a company or a particular person at a company can be a bad fit. Sometimes the company just isn’t the right place for your next career step.

Other hidden questions are “do you have the emotional intelligence to put the past in the past and move on? And the good judgement not to drag out the dirty laundry for a potential new employer to see?”

The last thing you want to do is dwell on the problem or dive into too much detail. It can send a strong signal, “this candidate struggles to get past challenges and focus on the present.”

Even if you were wronged, do you have the presence of mind to focus on what’s in front of you right now?

If there was a problem, “it wasn’t a good fit” can be answer enough. If it was office politics, we’ve all experienced that. “Office politics”, “growing pains”, etc… that’s all fine. If pressed for details, feel free to press back gently. Redirect. Talk about how excited you are about this company. Make it about what’s right with this fit, rather than what was wrong with the last one.

People are going to ask their curious questions, but if you go into too much detail or start bad-mouthing your previous employer, the current manager might start to think, “are they going to be talking like this about me at their next job?”

And then it’s all over.

Some interviewers are going to throw you some curve balls. You go into a meeting thinking you’re just going to have a nice chat, and suddenly you’re tossed head-first into a live-coding challenge. If you can keep your cool in a stressful situation, that’s a great opportunity to impress.

Marcus Lemonis threw a major curve ball at his candidates in an early episode of “The Partner” to see who could roll with it, recover well, and land on their feet in a stressful situation. Look at surprises as an opportunity to shine.

It ain’t over till it’s over. Your ability to handle rejection gracefully could leave a lasting impression, open doors for future opportunities, and lead to an extended networking relationship. Maybe they didn’t hire you, but maybe they know a job that you’re a better match for, and they’re willing to make an enthusiastic introduction.

I like to say that the most important skill in software development is empathy. How will you know what to build if you don’t have empathy for your users? How will you give the care and attention to quality required?How will you problem solve effectively when conflicts inevitably surface on your team?

This is one trait that I always look for in candidates. Are you able to consider the feelings of others? Do you demonstrate empathy in your answers about dealing with challenges on the team? Do you have empathy for the needs of the interviewers? Do you respect their personal boundaries, and respect their protocols so that they’ll feel comfortable during the interview?

Empathy is the ultimate soft skill. Practice it as diligently as you practice your coding. You’re going to need it.

Looking to make a career move? Step up your JavaScript game.

Learn JavaScript with Eric Elliott. If you’re not a member, you’re missing out!|||

There are a handful of common mistakes that candidates frequently make in JavaScript interviews. Most mistakes are forgivable, but a few could easily cost you the job. One of the leading reasons…