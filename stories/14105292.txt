Bootstrap and package your project with Angular 4 and Electron (Typescript + SASS)

With this sample, you can :

Install dependencies with your favorite dependencies manager (npm or yarn) :

If you want to generate Angular components with Angular-cli , you MUST install in npm global context.

 Please follow Angular-cli documentation if you had installed a previous version of .

Voila! You can use your Angular + Electron app in a local development environment with hot reload !

The application code is managed by . In this sample, the app runs with a simple Electron window and "Developer Tools" is open.

 The Angular component contains an example of Electron and NodeJS native lib import. See Use NodeJS Native libraries charpter if you want to import other native libraries in your project.

 You can desactivate "Developer Tools" by commenting in .

Your built files are in the /dist folder.

Your application is optimised. Only the files of /dist folder are included in the executable.

Actually Angular-Cli doesn't seem to be able to import nodeJS native libs or electron libs at compile time (Webpack error). If you need to use NodeJS native libraries like 'fs' or 'os', you MUST add it manually in the file in root folder :

Maybe you want to execute the application in the browser ? You can do it with .

 Note that you can't use Electron or NodeJS native libraries in this case. Please check to watch how conditional import of electron/Native libraries is done.

You can find end-to-end tests in /e2e folder.

Before executing e2e scripts, you may need to update drivers libraries :

You can now execute tests with the command lines below :|||

angular-electron - Ultra-fast bootstrapping with Angular 4 and Electron (Typescript + SASS + Hot Reload) :speedboat: