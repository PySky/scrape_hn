snuck.me is an open-source web service for querying an arbitrary site’s SSL certificate. A user can compare the results of this query with the certificate that her browser is reporting to help determine if there is a man in the middle:

snuck.me works by embedding a public key directly into the website’s source:

When the user wants to check a certificate, she generates a JSON payload to send to the snuck.me server. This payload contains the URL corresponding to the certificate that the user wants to retrieve, and a random 20 character password:

All of this is done in the browser, i.e. on the user’s machine. The payload is encrypted using snuck.me’s public key:

This payload is then sent to the remote snuck.me server for processing:

snuck.me decrypts the payload using its (secret) private key. It queries the requested URL for certificate information, then uses the user provided password to encrypt the certificate using AES-256. This payload is sent back in the body of the HTTP response to the client.

The client simply decrypts the results with the password it provided to snuck.me and displays the results:

You can set up your own server very easily. Here’s a template for a application:

You’ll obviously want to copy the source from snuck.me and change to point to your server’s route:

Then serve the snuck.me html from some route!

This technique works because the man in the middle cannot modify your query. It is encrypted with snuck.me’s public key, and only snuck.me can decrypt it. Since the man in the middle cannot know the password you provided in your query, it cannot return bogus results to you by encrypting a spoofed response.

If the man in the middle knows about snuck.me, he could modify snuck.me’s source. If you want to protect against this attack, you’ll need to verify the source out of band. One way to do this is to visit snuck.me from a known good location and hash the source. You can then hash the source of snuck.me in the at-risk setting and compare hashes.

Of course, all bets are off if the man in the middle is also a man in your device. You should give up any expectations of privacy in this case.

We’ll wrap this post up with an example where we inspect Google’s certificate with snuck.me using Firefox 51.0.1:

Compare the SHA1 Fingerprints of the results! If there’s a mismatch, you’ve probably got a man in the middle.

Please email me (snuckme at lospi dot net) with any bugs!|||

The Blog of Josh Lospinoso