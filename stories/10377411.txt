Micro C library for handling HTTP requests on low resource systems. Please note that ureq is still in heavy development and new features are continuously added. Despite this, it behaves very well in stability tests and current user-end interface won't be probably changed.

ureq is a middleware that sits between any kind of tcp server and the core of your application. Use it to dispatch urls to functions, like this: . It supports basic http functionality and can be used anywhere system resources are low (it was built for embedded systems, e.g. ESP8266) or where sophisticated http features aren't needed. And yes, it understands RESTful.

As said before, is used for dispatching. Let's add a couple of urls then:

How does it work? When there's a request for an url ( , , ), with corresponding method ( , , , , ), ureq calls the corresponding function ( , , ..., ). What's method? It calls a function connected to the url, no matter which type of method was used.

But wait, how should such function look like? The only requirement is that it has to return a string that will be sent to a client. For example:

You want to parse GET parameters or do something with POST data? No problem, just define your function with a pointer to :

Keep in mind that adding struct argument to the function's definition is not obligatory.

We connected some urls to functions, what's next?

We have to create a structure that holds all the data and initialize it. And we have to do it per every request. Simply put such line in your program:

in that case is everything you got from the client.

Now let the magic happen. Put such loop in your code:

and do all the sending job inside it ( is our sending function in that case, remember to replace it with one used by your server backend, is the response generated by ureq, and is its length.

If you wish, do something else with now. When you're ready, call

To perform a cleanup. See for basic server-less request parser. See for basic unix http server.

This part of needs to be improved, please treat it as an early draft.

To take precise control of server's response, modify HttpRequest struct's fields inside page connected to framework via . Reading the interface file and the type-definitions file may provide many useful information.

Let's take a look at struct, which is initialized in every struct:

Except , these parameters can be set from your page functions. Some examples:

With the help of Reddit and Hacker News users, was benchmarked on the .

For more data, go to: http://ureq.solusipse.net.

See the LICENSE file for license rights and limitations (MIT).|||

ureq - Micro C library for handling HTTP requests on low resource systems.