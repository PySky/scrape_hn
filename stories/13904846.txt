I process meeting requests all day, especially on Fridays (when I typically hold a few phone briefings and meet with volunteers at a local college). You’d think someone would have figured out how to improve this process in the time since my corporate career ended around 2001.

Back then, I sat through countless meetings every day…all day long. You can feel sorry for me now. My “other” full-time job at the time was adjusting my schedule. It was often difficult to know who was actually available and in the office, even if Outlook gave me a few clues. No one had invented a sensor for tracking the boss.

These days, a few apps help somewhat, but they live on their own outside of my normal routines — a.k.a., using Gmail and Google Cal. I can chat all day on Slack, but meetings are not really part of that ritual. I still have to manually add meetings and manage them in my Google Calendar. I know I could use X.ai, but that uses email — yet another app.

In a recent demo, a Google rep explained to me how Hangouts Chat could change that, and it made me think of many other novel ways a bot could all but remove the tedium of managing a daily schedule. The @meet bot from Hangouts is nothing special. You tag the bot and name a day and time, and the bot sifts through everyone’s schedule and finds an open slot, then books the meeting.

What impressed me about it wasn’t the actual feature set (which includes an option to hold a meeting right now and creates a Hangouts link) but the possibility for what could come next.

The bot uses some basic machine learning. In the demo, the rep showed how the bot can see who is in the chat and make sure everyone is on the invite list. It can scan the schedules for everyone involved because the chat tool runs in G Suite, the office version of Gmail and Google Calendar. It’s a bit like having an assistant who does the meeting invites.

But I want it to go much further. I’d like to activate the bot before the discussion starts, tagging @meet so that it watches what we say and then jumps in and suggests a meeting time when we start talking about needing to meet. It could constantly look for the words meeting and meet in every Hangouts Chat channel. That might be helpful, but the bot could then use more machine learning to parse the conversation even further. How about noting that one of the participants is actually a contractor and never attends any meetings? Skip that person on the next one. Or the bot could split us into two different meeting groups when it sees that some of us are in marketing and some are in sales.

It could also look at conference rooms. In the office with the college volunteers, we use a tool called Ad Astra to book conference rooms. It’s old tech. I’d like the @meet bot to look at who is chatting and find an open room that’s closest to everyone involved. Maybe it can learn that we normally book rooms with larger windows, or that the exec who attends these meetings prefers the space next to the coffee machines. It’s not that hard. When the exec types “I prefer to meet in the space next to the coffee machines,” keeping track of that is not a Herculean challenge for a bot.

And all of this is something that would occur in the background. We’d never have to think about meeting requests at all. We’d have a bot that manages meetings, arranges them, notifies us about them, adjusts them — we’d simply have to show up.

Hopefully, Google will make this happen soon.|||

I process meeting requests all day, especially on Fridays (when I typically hold a few phone briefings and meet with volunteers at a local college). You’d think someone would have figured out how to improve this process in the time since my corporate career ended around 2001.