Please check out ‚Äúpart 1‚Äù of this series, where we discussed what metrics are and why they matter in the success of a product!

Metrics matter. Your product‚Äôs success is dependent on and defined by metrics. Metrics are a lens into your product‚Äôs health and performance. Defining your metrics, therefore, should be as intrinsic to your product development process as defining requirements.

In fact, metrics are one of the most frequently asked product manager interview questions:

Developing metrics from scratch can be incredibly daunting, precisely because there is so much at stake. Unless you work in an industry where standard metrics are widely accepted (such as in gaming, e-commerce, or retail), metrics are anything but trivial.

Many product managers start bottom-up: monitoring and collecting the near-infinite number of data points they can get a hold of. However, an obvious truth quickly begins to surface‚Ä¶

Just because you can track everything doesn‚Äôt mean you should. Some data are more valuable than others because they give you a unique insight into your product‚Äôs health. Conversely, there is a lot of subpar data that can cloud your judgement.

Let‚Äôs step back. Think about your product as a box:

You can start to instrument this box and collect all available data, but this can become an aimless approach characterized by constant trial-and-error.

In order to build a product your users value, you first need to determine the inputs and outputs of this box. Your inputs are anything your users come to you with: their problems and their resources. Your outputs are the circumstances resulting from the use of your product. These become your goals.

But this is not a black box. Most products require the user take actions within the product to extract value and achieve their goals.

Quantifying and measuring these actions gives you insights into how (and how many) users are getting value from your product. When you track these actions over time, they become your metrics.

Once you start to collect data for your metrics, you can then put them to work towards evaluating your product. The results of your evaluations can inform any number of adjustments in your goals, actions, or even metrics themselves.

You can start to see that this very simple model can be applied in any number of ways:

For each step, here‚Äôs a bit more detail on how to do this.

The GAME framework is a 4-step process that can define metrics for any feature or product. For the remainder of the post, I will refer to a hypothetical ‚Äúproduct‚Äù but feel free to substitute in ‚Äúfeature‚Äù whenever a ‚Äúproduct‚Äù is discussed.

This is obvious, but you should always start by defining your goals for your product. Your goals are critical to ensuring that you maintain a purpose-oriented strategic mindset. They also serve as tangible markers for revisiting and validating directional correctness throughout the metrics development process. Placing goal-setting as your first step forces you to be top-down, which is critical for developing metrics. A bottom-up approach is suboptimal because it relies on intuition and can often lead to analysis paralysis.

To define your goals, ask yourself the following questions:

Note that for many of the best products, user and business goals align. These goals are often two sides of the same coin.

Once you have this set, you are ready to get in on the action.

The next step is to define your user actions, or more precisely, all the actions you want your users to take within your product. This should start as a qualitative list. Don‚Äôt worry about the numbers or whether they are trackable yet.

Here are some example questions you may ask yourself using the common ARM metrics framework. Pick the set of questions that align with your goals:

You can also use metrics frameworks like AARRR to flush out the actions. The key to doing this well is to be comprehensive but not exhaustive: have the broadest coverage, but don‚Äôt bother differentiating the minutiae. For example, if your acquisition user action is ‚Äúnewsletter signup,‚Äù don‚Äôt worry (yet) about listing each newsletter sign-up interface.

You are now ready to turn each desired user action (qualitative) into a measurable, trackable value (quantitative). Note that if you haven‚Äôt already done so, bring engineering and data teams in at this stage to vet your metrics and provide technical guidance on the feasibility of collecting/storing the desired data.

Here are some major decisions for how to count each action:

For most, this is the hardest step in the framework. Some of your decisions are informed by strong intuition, while others are informed by technical constraints or further data analysis. Often you won‚Äôt know for certain whether a metric is working until some iterations.

At this stage, you can also begin to weed out vanity metrics. Tweak the metrics that can be ‚Äúgamed,‚Äù i.e. artificially inflate or deflate through clever design/engineering or malicious user intent. For example, inflating page views by using pagination or slide shows.

The best way to ensure your metrics are providing you the correct insights into your product is to test and iterate. You simply will not know how a metric behaves until you start collecting data.

The most import evaluation you need to make is the functional usefulness of the metric. You can check for usefulness by monitoring the metric for any false-positives or false-negatives. For example, if the metric drops, does it signal a real problem in the product? Conversely, if an issue surfaces, is the metric helping you flag this issue? Of course, you would also expect the metric to flag true-positives and true-negatives.

Different behavior with your metrics may inform iterations in each of your GAME steps:

Ask yourself these honest questions and remember that you are looking for your metrics to measure the vital signs that give you an actionable indication of health and performance.

Disclaimer: I have no insider information from Facebook. This section is pure speculation. üòá

The Facebook Newsfeed comes up as one of the most common interview questions, particularly because it has the right mix of ubiquity, complexity, and opaqueness.|||

Metrics matter. Your product‚Äôs success is dependent on and defined by metrics. Metrics are a lens into your product‚Äôs health and performance. Defining your metrics, therefore, should be as intrinsic..