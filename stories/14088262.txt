This is a work-in-progress implementation of Facebook's GraphQL in .NET.

This project uses a lexer/parser originally written by Marek Magdziak and released with a MIT license. Thank you Marek!

You can install the latest version via NuGet.

There is a sample web api project hosting the GraphiQL interface. and from the root of the repository, then run the web project from Visual Studio.

Define your schema with a top level query object then execute that query.

A more full-featured example including all classes required can be found here.

{ ; ; ; ; ; { ( [] ) { Run(); } () { Console.WriteLine( ); = { Query = () }; = ().ExecuteAsync( _ => { _.Schema = schema; _.Query = @ ; }).ConfigureAwait( ); = (indent: ).Write(result); Console.WriteLine(json); } } { { ; ; } { ; ; } } : < > { () { Field(x => x.Id).Description( ); Field(x => x.Name, nullable: ).Description( The name of the Droid. ); } } : { () { Field<DroidType>( , resolve: context => { Id = , Name = } ); } } }|||

graphql-dotnet - GraphQL for .NET