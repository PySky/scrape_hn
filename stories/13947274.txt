To understand the answer to this question, it’s important that you learn a bit of history. Lets talk about the traditional approach to system management. Prior to Google’s creation of the SRE position, System Administrators ran company operations.

System Administrators worked on the “operations” side of things, whereas engineers worked on the “development” side of things.

According to the SRE Book, this approach caused division and conflict between developers and sysadmins. Because the two had different backgrounds, skills, and incentives, it meant that they had different vocabulary and thought about reliability very differently. Developers wanted new features to get out to users as quickly as possible whereas the operations team members (sysadmins) wanted to avoid breaking anything. Google saw the concerns with this approach and created the idea of “Site Reliability Engineering.”

According to the creator of the position at Google, Ben Treynor defines SRE in this interview as:

Let me offer a concrete example on how SRE makes the “new way” even better.

A few months ago, I had the opportunity to visit a data center just like the one you see pictured here. I toured several large warehouse sized rooms filled with thousands of machines. The magnitude of this space is remarkable.

Now let’s say that one of the servers in the data center went down and needed to be replaced. With the “old way,” a new server would be configured manually by a system administrator. What this means is that the sysadmin would manually make sure the new machine has the proper operating system, software, tags, etc. Now imagine that 1,000 servers need to be replaced. See where I am going with this? It would take forever, or the company would need a lot of sysadmins to do the labor.

Now consider the “new way” as described in this bullet point that I took from Dropbox’s Site Reliability Engineer Job posting:

In this example, an SRE would be responsible for writing the software that automates the server configuration process. Cool right? This example really helped me to understand what an SRE truly is:

According to Tammy Butow, SRE Manager at Dropbox,

By eliminating human interaction through automation, SREs make systems more reliable. So essentially, an SRE’s job is to automate themselves out of a job.

The reason I found this to be really cool is the same reason I decided to study math. Math allows you to utilize functions and rules to compute large scale problems. One of my favorite lessons from when I was teaching is based on this problem:

“You own a landscaping business and one of your specialties is outdoor brick staircase. How many bricks would you need to bring if a customer ordered a 10-high stairwell? How many bricks would a customer need for a 20-high stairwell? How many bricks would a customer need for a 38-high stairwell?”

My students quickly realized that counting the bricks was an okay strategy for the smaller staircases. But as I increased the height all the way to a 100-high stairwell, they were forced to find another way. They realized that math can be used as a tool to calculate large scale problems, avoiding a brute force approach (In my Algebra 1 courses, I would get students to discover they could use the equation n(n+1)/2 for the staircase problem.)

Just as math is a tool for solving large scale problems, in the world of computers, code is a tool for managing large scale systems. It is a tool that allows for automating tasks through software and eliminating the need for manual human labor. Site Reliability Engineers are behind this work, they manage and automate these systems using their systems knowledge and their code, making the system more reliable with every bit.|||

An explanation of Site Reliability Engineering as told by a Junior SRE at Dropbox. Krishelle offers career changers several questions to test if SRE is the right role and resources to get started.