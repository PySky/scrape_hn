Ever wondered why people are happy to pay twice, five times and even ten times more for the same product? It’s a known fact that Drupal sites are about ten times more expensive than WordPress sites. So, even if it takes 5 times longer to build it with Drupal, Drupal developers get to bank a lot more in the end. Let’s see why this happens and how you can get a piece of the action.

Have you ever heard any of these?

So, the thinking goes that if a platform means quality, requires jedi skills and delivers superior results, it’s worth the extra money.

Let’s look at some facts and see if these theories hold water.

Remember the “secret ingredient soup” in Kung Fu Panda? Mr. Ping (Pu’s father) has always made a big deal of it, adding unquantifiable value to his noodle soup. What’s the secret ingredient in Drupal which justifies these premiums?

Drupal has nodes. WordPress has posts. Both use taxonomy to organize content. Drupal’s taxonomy has fields, which could be very nice in WordPress too.

Both use fields to extend the basic content, besides a title and body. Both have a GUI, which lets administrators manage content. Some would say that WordPress GUI is far more convenient than Drupal’s GUI. Both have template systems, which allows to display content on the front-end. Both use filters and hooks to extend the core functionality. Drupal’s extensions are called modules. In WordPress, they’re called plugins. Both run PHP and support several kinds of databases. Both run on different web servers and have excellent caching plugins.

At the end of the movie, Mr. Ping reveals the secret. There is no secret ingredient. It’s just good soup. Same thing with Drupal, WordPress and most other content management systems. There are no big difference between Drupal and WordPress. They’re very similar, with only minor differences.

Large clients are not stupid. When they write a spec for their $40K project and specify Drupal, we can suppose they do it for a good reason. So, if the systems are really so similar, what else could be going on here?

A website is part of the company’s marketing strategy. Often, it’s the epicenter of that strategy. A company website is like the star, in the middle of a planetary system. All other activities revolve around it. The conversion happens in the website and everything else drives the traffic.

When a marketing manager writes a spec for a site, it’s the result of a carefully planned marketing campaign. Building the site costs money, but it’s insignificant compared to developing the company’s product, providing support and advertising.

The last thing a marketing manager needs is for his carefully planned campaign to go sideways due to implementation issues. The cost of not executing your marketing plan far outweighs the cost of building a site.

So, when you see a project with a budget of $40K, with a schedule of 6 weeks, remember that part of this money goes towards development and part of it goes towards assurance. Assurance that whatever happens, whatever difficulties may arise, this project will complete on time and according to the spec.

I think that this is the main reason why Drupal appears as a requirement in so many large and lucrative projects. Let’s think together about how Drupal got that reputation.

The great thing about this process is that it’s guaranteed. Since the developer uses modules like Lego and has the flexibility of building his own functionality, things converge.

When you think about it, this process above is pretty close to what you’re doing with WordPress, right? So, why does Drupal get a ‘platformish’ reputation? Because developers build with it more and use prefabricated sites less. Building something means you control the outcome. It also means, your client gets what they want. Always.

The question is, how do you build sites efficiently enough, to make money in the process. Don’t just look at the modules. See how they get connected together.

Drupal developers have a saying – “there’s a module for that”.

If you want to complete large and complex projects on time and keep some money as profit, you need to be efficient. Efficiency means you use what’s available and build with it. You connect working modules together and add your unique logic, so that the result is exactly what you need.

I took a random sample of 10 sites from the Drupal.org case studies section and checked what they use:

The original list included over 80 modules. I removed all modules that appeared once, leaving us this list of popular Drupal modules:

Pre-Drupal 7, you’d see a module called CCK, appearing in all sites. CCK defines custom content types and fields. Now that it’s in Drupal core, so it isn’t listed as a module anymore.

To appreciate what Drupal developers are getting from these modules, see what they say:

“Views – We use this powerful tool to display slideshows, products, news pages, FAQ and team profile pages. We have the freedom to pick out specific content, mold it and display it in a very easy way without coding.” “Panels – Paired with Views, this module gives us massive power to do even greater things. We can output multiple views on the same page and even add our custom content. Our home page, product overview and media page are based on Panels and Views.” “The calendar was created using a combination of the Views and Date modules, with custom development around each. The calendar is browsable and searchable, and users can submit their own events to the calendar as well.” “Ubercart is our most important and valued module. Within the Ubercart suite, we are using Payment, Product attributes, Reports, Shipping Quotes, Cart Links, Google Analytics for Ubercart, Stock, Flat Rate and Paypal.” “The Panels module was used in order to allow PEER 1 Hosting to supply different layouts for different sections of the site. Previous to this site, PEER 1 Hosting was forced to manipulate template files for every change, which then would need to be pushed to production by an IT team. Ultimately they wanted an easier way to manage the layout, without the need to modify any sort of code. The Panels module supplied the site with a very simple way of modifying layouts and content within the layout thus giving people with non-technical backgrounds the ability to manage the site. Essentially, Appnovation gave PEER 1 Hosting the basics of Panels, without inundating them with all the great features of the module, which they did not really need.” “Rules – Much of our modules rely on this key module, which allows us to set rules for events and actions in Ubercart, Ubercart Global Quote and Ubercart Discount Coupons. We are able to tweak events such as customer/admin checkout notifications and order update events.” “Views – Just as with CCK, no site can be built without the versatile Views module. The PEER 1 Hosting site had over 15 Views to be incorporated. Views were used throughout the site to show things like related content, slideshows, and videos. Default Views were set up to allow PEER 1 Hosting to pick and choose various Views within the Panels interface to fill out content on certain pages.”

Are we seeing a pattern here?

Drupal developers build sites using the Drupal core and modules. The glue, which connects these modules together comes as three plugins:

Views loads content from the database and displays it. Panels builds flexible layouts. Rules controls what can happen on the site.

Most developers can write PHP and code everything from scratch. Given enough time, many will manage fine without a CMS. But the idea is to deliver projects on time and profitably. Reinventing the wheel is not the best way to achieve this.

Yes. Certainly. All it takes is entering the right state of mind and using the right tools.

One way to build a site is to pick a theme that’s closest to what the client needs and tweak it. Does it work? Sure, but there’s a little gotcha. Themes were originally intended to design sites. To dress the content, not to create it. You can change a dress 10 times and it’s still the same lady.

Complex themes, which define their own custom content types, render it in very unique (and sometimes wonderful) ways and implement a complete workflow. They both solve a problem and create a new one. You get something that’s 90% of your spec in no time and for little money. However, often, the last 10% is like going through a brick wall. It takes ages to reverse engineer complex logic and get it to do exactly what you need.

So, you call the client, who’s eagerly waiting for his completed project, and you start to negotiate features. It’s going to work! The client will have no choice but to accept these compromises. Life’s full of them. However, the cost is dear. You are effectively training your client that WordPress sites are cheap, complete quickly but don’t do exactly what’s needed. Close, but not exactly.

Remember the marketing manager from the beginning of this article? The last thing he needs is having his marketing strategy bent and shifted, due to what’s possible to implement in a theme and what isn’t. I know that marketing manager. I’m him. Trust me. The saving we get when we order a prefabricated site is nothing compared to the costs in lost opportunity, because we cannot execute our strategy as we had planned. Been there, done that, not doing it again.

So, if you take just one thing from this story, I hope it will be the understanding that a company website is not a negotiation. There are no cosmetic things and there’s no 80/20 rule. Not when you’re building the site. Analyze what needs doing and what it takes to build it as requested, on time and with quality. Then, bid accordingly. Teach your clients they can trust you with whatever they throw at you, and throw they will.

Next, come the tools.

Wanting to do something doesn’t mean you actually can. You’ve learned to develop, code and style. You’ve learned the WordPress API inside and out. Without these skills, you can’t talk about building great websites. In addition to these, Drupal developers also use a handful of key modules to boost their efficiency. They use CCK, Views, Panels and Rules.

Yes, you can build great sites without any of these modules. However, making money with a handcrafted site will be very difficult. You’ll miss deadlines and/or spend more on a project than you get paid.

Similar modules exist for WordPress too. The big difference is, in WordPress they’re called plugins 🙂

Armed with a solid understanding of what big clients need, the right attitude for the job and the right tools, you can get $10K, $40K and $100K WordPress projects too. Changing client perception will take work, but it’s certainly doable. Remember, these big clients care about one thing, and one thing only – getting the job done. How you do it is really up to you.

I hope it doesn’t come across that I think that WordPress themes are a bad thing. Of course they’re not. WordPress themes are great. The availability of quality themes has been a major contributor to the success of WordPress as a platform . What I am saying here is that often, to get big project delivered, they are not the complete answer.

Turn-key designs have made it possible for WordPress to become the predominant CMS on the web. They lowered the entry point for 95% of sites and helped WordPress democratize publishing.

Only thing is, one size doesn’t fit all. It fits most. To get those big projects, you need to use other tools.|||

