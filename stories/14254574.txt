__TL; DR__ The purpose of this campaign is to gather financial resources so we can buy a Mac mini and make all the needed adjustements on the macOS port of pgModeler so it can run smoothly and as free as possible from bugs that happen only in that platform. As a retribution, donors will receive an access key capable of download all packages for all supported platforms (eBook not included) for a limited period depending upon on the amount donated. Details in the donation form at the end of this page. 

 __How everything started...__ Since the beginning, still during the project's conception, my intention was to deliver a quality open source product. So back in 2012, when pgModeler gained the world, its user base started to grow faster than I could imagine and many feature requests and bug reports flooded the project's issues page at Github. I was really happy with that feedback since there was some interest in my work. All that activity around the project was really new to me so in order to give users a quick response I was needing to upgrade my workstation in some point in that year. Prior to 2012, specifically between 2006 and 2009 pgModeler (called __pgsqlDBM__ in that days) was developed in an old frankeinstein desktop which I honestely don't recall its hardware configuration but I'm pretty sure that it was not suitable for software development. The work in that machine was painful since its sluggish performance was difficulting the creative process due to the slow compile time and some other issues. Thus, still in 2009, I decided to buy a budget Dell Inspiron 1545. Well, that was a great improvement and made me work hard to release the first pgModeler three years later. For the years to come until 2012, pgModeler was distributed __free of charge__ in pre-compiled binaries only for Linux 32 & 64 bits and Windows 32 bits. But that situation doesn't took too long because still in same year some Mac OS X users started to mail me asking for a port of pgModeler to their beloved OS. I have accepted the challenge and I was willing to give them the deserved support but I needed to face the reality of many open source projects: __the lack of financial support__. Despite the fact that I was alone in this project and not a single penny was request I was planning to buy myself a dedicated Mac machine but here in Brazil due to the abusive taxes and the constant economics crisis buying such equipment is for few! So I had to improvise by taking borrowed some friend's Mac machines or even using virtual machines to run a Mac OS X so I could barely do my work on that system. After some months, in February 2013, the first port of pgModeler was released for Mac OS X and I need to say that was a real disaster... _as I was expecting!_ No dedicated machine nor enough time to work on that OS led me to a big frustration as well the interested users. So many negative feedbacks that I almost dropped the Mac OS X port. Instead of giving up, I decided that was time to get a proper machine but again due to the abscence of financial support I needed to charge for the binaries later in 2013. But that wasn't plain simple as that, first I tried several contacts with some Enterprises to patron the project but no answer was given, unfortunately. Thus, after many complaints, little by little, the users understood the reasons why I needed to distribute paid versions of the project. Obviously its essence was not left behind: be a quality open source software. This way, with the help from donations, purchases and, of course, my paycheck from my "real" job I did my first real investment to the project: buy a Dell XPS L502x notebook. That was a great leap in the performance and I could respond more quickly to users' requests. With the help of that machine pgModeler could be released in Windows 64 bits because, until then, the framework I've used to build it was only distributed in 32 bits and I had to compile it from scratch on the 64 bits environment! But, the main problem still persisted, the lack of a decent Mac OS X environment... I could run the OS with a better performance in a virtual machine and make use of the machines from my friends but that was not the ideal scenario. I've used that great XPS notebook until last month (March, 2017) when I needed to replace it by a Dell XPS 8900 desktop after a hardware fault! Well, that new machine is really marvelous and I can compile all five releases (Linux 32/64, Windows 32/64 and macOS) in few hours instead of half a day as was done with the prior computer. But the macOS issues were still there... and I still couldn't afford such expensive machine like Mac. Thanks to all the good people who believed in pgModeler's pontential and helped it with some money that new XPS desktop was bought using last year's donations and purchases. I really would like to acquire a Mac machine too but I would need at least __twice the money__ to get one. That's why I have created this campaign with a straight goal: to reunite resources more quickly so we can have a good machine and give pgModeler a decent performance on macOS. 

 __Is the macOS version that bad?__ Short answer: __YES__! Long answer? There's so many problems in macOS port that's is really hard to start talking about them in a simple way. Well, as you can see in the issues #903, #896, #779, #750, #561, #295, #106 there are countless problems in macOS, from clunky interface and crashes to unexpected bugs that happen only in that system and I don't even have the real chance to track and fix them as it should be. One of the most problematic situation is when a framework update breaks things in pgModeler and I have to choose between two options: downgrade the framework used to build the code and not take advantages of optimizations and new features; or keep the new framework and patch the code where it's needed. The first case is the worse choice since we'll never get improvements of the core code running in our software. There were cases in the past that the Linux and Windows releases of pgModeler were running a Qt version two numbers ahead compared to the macOS release due to the broken code that I couldn't fix properly. After too much work I could match the Qt framework version used on the three systems but specific problems still lurks the macOS port. The second case mentioned, that is to adopt a newer framework release but doing the needed fixes, is what I personally prefer and is what I'm currently struggling to achieve but the lack of a Mac machine makes things quite difficult! I really don't like or even think it is fair to have two good performing releases (Linux and Windows) and left a poorly maitained one for macOS users! The fact is, in the day this campaign was launched, the macOS user base was the second one or __24.1%__ of the total audience losing only for the Windows 64's user base which was __36.8%__ of the overall number. The least ones were Linux 64 (__20.5%__), Windows 32 (__10.9%__) and Linux 32 (__7.7%__). These numbers only emphasizes the importance that we should give to macOS system and its users. 

 __Why a Mac mini?__ Well, first because this is the cheaper machine sold by Apple (the estimated price is __7350.00 BRL__ for a good machine) and secondly what this project needs is a dedicated computer to run macOS thus a Mac mini is more than enough to our goal! :) 

 __But what I get if I decide to help?__ _My eternal gratitude in the first place!_ Followed by an even more improved product and finally, and not less important, an __access key with an extended validity__ depending upon only on the amount you donate! ;) If you don't know yet, the access to pgModeler's pre-compiled binaries are granted only for those who have paid a small charge in the download page. In that case, the user receives an access key with a limited validity that may vary from 6 to 24 months. If you decide to help us you'll receive a key with full access to the pre-compiled packages for __all supported platforms__ (eBook is not included) and a longer validity which is calculated according to the amount of your donation: _for each 5.00 USD or 15.00 BRL you'll get 1 month of access key validity. Additionally, we'll give a 50% bonus in the total amount of months increasing even more the maximum access period_. Let's say, for instance, if your donation is __5.00 USD__ instead of receiving only one month of access you'll get an access key with __one month and 15 days__ of validity which can access all releases and packages for Linux 32/64, Windows 32/64 and, of course, macOS while it is not expired. Donating a greater value like __20.00 USD__ you'll be granted with a __six months__ access key, and so on. Once expired the access key there is no automatic renewal and the access to downloads will be blocked. __Note that all rules in the Terms of Purchase & Download (en_US, pt_BR) are applied to the generated access keys.__ Isn't that great? So, what are you waiting for? Let's help pgModeler! :D If you have any question about this campaign feel free to mail me via __Support__ menu at the top and don't forget to share this page so we can reach the goal faster!|||

Open source data modeling tool designed for PostgreSQL. No more DDL commands written by hand. Let pgModeler do the job for you!