tmux continues to move on apace which is great news for the project. Since version 2 there have been several breaking changes to configuration options. This is fine if you run tmux on a machine that you maintain as it is easy to keep tmux configuration in sync with the the version on the machine. If, like me, you favour wrapping up your configuration in a dotfiles repository this poses a challenge in supporting multiple versions of tmux with differing configuration options.

tmux supports me achieving a nearly mouseless workflow with the copy and paste functionality being a big part of that. Jason Ryan wrote about how to achieve this. Iâ€™m a Vim user and here is the configuration I used.

The option supports pasting into screens outside of tmux by copying to the system clipboard. Coupled with dwm this supports changing screens and moving data between contexts without having to touch the mouse.

This commit made a fundamental change to how keybindings work. After some tinkering my configuration now looks like this.

The options available are yet to be fully documented but the default bindings are sane and the addition of is fantastic!

The problem is that for some machines that I use I am able to upgrade tmux. So how to support multiple configuration options?

A couple of StackOverflow posts led me to that allows different configurations to be declared based on the tmux version. My configurations for Vim bindings in copy mode now looks like this.

This checks the tmux version and applies configuration accordingly. If you are interested in what has changed recently the CHANGES documents this.

tmux continues to be a core part of my daily toolkit. Copying and pasting without touching the mouse and being able to return to sessions are the two features that keep me using tmux. Otherwise I would just use and . It is great to see the project being actively developed and now I have a way to handle breaking changes to the configuration gracefully.

Have an update or suggestion for this article? You can edit it here and send me a pull request.|||

tmux 2.4 made a significant change to key bindings. Here is how to support custom keybindings for versions before and after tmux 2.4