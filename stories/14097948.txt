Cycles has a split OpenCL kernel since Blender release 2.75. It's an alternative approach to what is used on CPU (so called megakernel). The idea behind splitting the kernel is to have multiple smaller kernels which are not only simpler and faster to compile, but also have better performance. Initial split kernel patch was done by AMD. Further work was also funded by AMD.

The OpenCL Split Kernel now supports nearly all features. Only Correlated multi jitter is missing. Baking works, but uses the mega kernel. Volumetrics, SSS, Branched path tracing, HDR lightning and Denoising are fully supported.

With current drivers, all production files from the official cycles benchmark pack, including the huge one from Gooseberry, render now pretty fast.

Then choose GPU as the device to render in the render option panel.

To test the performance of your computer, you can download the official Cycles Benchmark files from here https://download.blender.org/demo/test/cycles_benchmark_20160228.zip. Those include production files for films, archviz (exterior and interior), comics, etc.

There are some known issues which are common to all kernels and platforms:

For now those limitations are considered a TODO rather than a bug.

AMD team who's working on OSX drivers for El Capitan (OS X 10.11) did really nice work on improving the driver which is now capable of compiling and running OpenCL megakernel. The following features are supported:

Nothing special is needed for using OpenCL on OSX now, just go to the user preferences and enable OpenCL compute device.

The following features are to be investigated for inclusion into next Blender release:

Other features requires a bit bigger changes and will happen in one of the later releases.

Split kernel on OSX has some issues with reporting back ray status to the CPU (and maybe some other ones) which makes it unusable at this platform.

This is to be investigated still, more details later.

OpenCL works fine on NVIDIA cards, but performance is reasonably slower (up to 2x slowdown) compared to CUDA, so it doesn't really worth using OpenCL on NVIDIA cards at this moment.

Intel OpenCL works reasonably well. It's even possible to use OpenCL to combine GPU and CPU to render at the same time, for until some more proper solution is implemented.|||

