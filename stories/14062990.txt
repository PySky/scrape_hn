When you try to decode SSL connection from your Java application for a purpose of testing you usually can go by using a known specified server certificate.

But, when Diffie-Hellman key exchange is used or when server-side certificate is outside of your control you still may decrypt the connection as long as you have access to startup command-line parameters of your Java application.

Basic idea is to specify during Java start up, and export all pre-shared master secret keys to a log file. Log file is read by Wireshark or similar application to aid decoding of SSL traffic.

There will be a lot of output. You will have a separate session key and per-connection keys as well.

Here is an example python script Iâ€™ve written to decode relevant bits:

Go to Settings / Protocols / SSL and set path to the log file generated by a script. Now it should automatically decode any SSL/TLS traffic captured from that Java application.|||

When you try to decode SSL connection from your Java application for a purpose of testing you usually can go by using a known specified server certificate.Bu...