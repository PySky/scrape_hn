Last week, the Angular team released Angular 4.0.0, and today weâ€™re happy to announce that NativeScript now supports this latest update ðŸŽ‰

Angular 4 brings smaller application packages and faster runtime speeds. Letâ€™s look at how you can update your NativeScript apps to take advantage of these optimizations.

To get the update youâ€™ll need to update a few dependencies in your file. Hereâ€™s what a typical update will look like.

A couple notes about the changes above.

When you do update your packages there are two trivial breaking changes you should be aware of. First, the path to the class has changed. In most apps this path will be used one time in the file, so it should be a quick update.

Second, to use Angular animations in NativeScript, you now need to import the from in your root . This works exactly like the , , and classes that you are likely already using. Hereâ€™s what a simple file that uses might look like.

Oh, one last thing: the Angular team deprecated the tag in favor of , so youâ€™re almost certainly going to get the following warning when you go to run your apps.

The fix is as simple as updating your tags to throughout your app.

And thatâ€™s really it. For most users the upgrade to Angular 4 should be seamless. You can refer to our changelog for a full list of things that changed, and if you run into issues let us know on our issue tracker.

Feel free to let us know what you think about this latest Angular update in the comments as well.|||

Last week, the Angular team released Angular 4.0.0, and today weâ€™re happy to announce that NativeScript now supports this latest update ðŸŽ‰

Angular 4 brings smaller application packages and faster runtime speeds. Letâ€™s look at how you can update your NativeScript apps to take advantage of these optimizations.