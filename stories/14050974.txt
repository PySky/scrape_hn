This project is under active development and is not stable yet.

Planck.js is JavaScript rewrite of Box2D physics engine for cross-platform HTML5 game development. Check out demos!

Key motivations for the development of this project are:

To try Planck.js, simply add script to your HTML code and call with your code in callback. For example:

Check out Car example on JS Bin to try it in practice. Also see directory for more testbed usage examples.

To receive updates about changes and progress follow @piqnt on twitter.

Latest builds are available on releases page.

Planck.js is available on jsDelivr.

Planck.js does not use any renderer by default. To use or integrate it with a rendering library all you need to do is call in each frame, and then iterate over world entities to draw or update them. You may also want to listen to world events to remove objects which are removed from the world. For example:

Planck.js public API closely follows Box2D API (see Resources), with the following differences:

Following resources are recommended if you are interested in learning about Box2D/Planck.js's internal details.

If you know any other useful resource, please add it or submit an issue.

Another way to use testbed and try included examples (in directory) is running testbed with live build locally:

Planck.js includes Box2D algorithms without modification and its internal architecture and public API are very similar to Box2D. However some changes and refactoring are made during rewrite to address differences between C++ and JavaScript.

Box2D is a popular C++ 2D rigid-body physics engine created by Erin Catto. Box2D is used in several popular games, such as Angry Birds, Limbo and Crayon Physics, as well as game development tools and libraries such as Apple's SpriteKit.

Planck.js is developed and maintained by Ali Shakiba.

Planck.js is available under the zlib license.|||

planck.js - 2D JavaScript Physics Engine