Firefox and similar browsers are now wrapped by default. The package and attribute names are plain or , etc. Backward-compatibility attributes were set up, but note that nix-env -u will not update your current ; you have to uninstall it and install instead.

Gitit is no longer automatically added to the module list in NixOS and as such there will not be any manual entries for it. You will need to add an import statement to your NixOS configuration in order to use it, e.g.

package is removed. Upstream only provided during development, and now they went back to to work as a drop-in replacement of the original package that has been unmaintained for years. You can (still) use the package, which got updated to a stable release from this new upstream.

CUPS, installed by module, now has its data directory in . Old configurations from are moved there automatically, but there might be problems. Also configuration options and were removed because they had been allowing one to override configuration variables required for CUPS to work at all on NixOS. For most use cases, and new option should be enough; if you encounter a situation when they are not, please file a bug. There are also Gutenprint improvements; in particular, a new option is added to enable automatic updating of Gutenprint PPMs; it's greatly recommended to enable it instead of adding to the list.

moved to . The option changed to and the option to enable ibus changed from to . should be set to the used input method name, for ibus. An example of the new style: That is equivalent to the old version:

The option no longer interpret the dollar sign ($) as a shell variable, as such it should not be escaped anymore. Thus the following zone data: Should modified to look like the actual file expected by nsd:

Systems with some broadcom cards used to result into a generated config that is no longer accepted. If you get errors like error: path ‘/nix/store/*-broadcom-sta-*’ does not exist and cannot be created you should either re-run nixos-generate-config or manually replace by in your . More discussion is on the github issue.

The option has been removed. GnuPG 2.1.x changed the way the gpg-agent works, and that new approach no longer requires (or even supports) the "start everything as a child of the agent" scheme we've implemented in NixOS for older versions. To configure the gpg-agent for your X session, add the following code to or some file that’s sourced when your shell is started: If you want to use gpg-agent for SSH, too, add the following to your session initialization (e.g. ) is included in your . You will need to use ssh-add to re-add your ssh keys. If gpg’s automatic transformation of the private keys to the new format fails, you will need to re-import your private keyring as well: The gpg-agent(1) man page has more details about this subject, i.e. in the "EXAMPLES" section.|||

