In PostgreSQL, you can convert child records to look like a nested collection of objects on the parent record. This is useful if you want to convert a relational-style parent-child model into a document style, with the child records represented as a composite within the parent document.

JSON functions allow conversion of result set rows to and from JSON. The function aggregates a list of records into a JSON array of objects. An example of what this would look like:

The resulting JSON column could be stored in a column.

You can do the same thing in Spark SQL as well with the and functions:

A key difference between Spark arrays/structs and PostgreSQL JSON: Spark SQL is a two-step process. First converts a list of fields into a single object on each child record. Then aggregates the structs from the child records into an array per parent record in the . PostgreSQL is a single step.

The similarity is that the resulting dataframe can be stored with the nested array of structs in Parquet or Avro format.|||

Bill Schneider's blog