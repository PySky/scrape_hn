David Fowler tweeted a cool feature in ASP.NET Core coming in next version 1.1.

In ASP.NET Core, dependency injection is a first class citizen. In this blog post, we will get a glimpse about the improved intergration of third party containers in the Startup class.

StructureMap is the oldest, continuously used IoC/DI container for .Net dating back to its first public release and production usage all the way back in June 2004 on .Net 1.1. The current 4.* release represents more than 12 years of lessons learned in the StructureMap and greater .Net community -- while also wiping away a great deal of legacy design decisions that no longer make sense today. StructureMap supports Lazy.

Line 12 is a call to the extension method .UseStructureMap() implemented as below :

Lines 17 through 24 show how elegant and easy will be the integration of your preferred container :

Autofac is an addictive IoC container for .NET Standard Library. It manages the dependencies between classes so that applications stay easy to change as they grow in size and complexity. This is achieved by treating regular .NET classes as components. Autofac supports Lazy too. Lazy means A needs B at some point in the future. It's a delayed instantiation.

Line 12 is a call to the extension method .UseAutofac() implemented as below :

Line 27 shows .Populate method which populates the Autofac container builder with the set of registered service descriptors and makes System.IServiceProvider and Microsoft.Extensions.DependencyInjection.IServiceScopeFactory available in the container.

Personally, I wrote the following extension but not yet tested for Ninject integration. The nuget package for Ninject referenced here is . Note also that Kernel in Ninject represents the name of the container!|||

