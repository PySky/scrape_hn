As we’re preparing to launch a new iOS app template for news reading, we had to come up with a scalable architecture for a news reader iOS app. Since we want our fully-coded template to be generic enough, in order to accommodate as many use cases as possible, we had to design our Swift code accordingly. Since many iOS apps can be designed in a similar manner, we thought our findings might be useful to other iOS developers who are interested in using the appropriate design patterns in their implementation.

The architecture described below is not only built for the most common scenarios we already identified, but also for the unforeseeable additional features that might come up in the future. So we had to pay a lot of extra attention when designing our Swift classes and the way they interact. This series of blog posts describes how we ended up designing our code. This is meant to be a design tutorial for all the iOS developers who are working on similar apps.

Before describing our architecture for the News Reader iOS template, we need to list the set of features that are usually supported by all the news reading apps. These are a good starting point for an iOS developer since the design patterns used initially rely on the minimum viable product of the app. The most popular features we identified on almost all the news reader apps can be summed up as following:

In addition to the above core functionalities, a decent number of news reading apps also support features like:

The iOS template we are building is meant to be used by a large variety of clients (bloggers, magazines, etc), so our architecture will accommodate all these visible features.

In addition to the above core functionalities that are directly visible to the users, an awesome News Reader app has to be fast, performant (in terms of data usage, speed, etc) and great looking. Because apps are always evolving, adding new features to your code should be as easy as possible. That’s why architecture is very important.

In order to address the problems of performance and scalability, our app will encapsulate a set of technical features, as described below:

Given the features that will be supported by our News Reader iOS app, we’ll define in this section a set of design principles, that will serve as guidelines when deciding on our components. These can easily be extrapolated to all the iOS apps you’re building and we are using the News Reader app example only for demonstration purposes.

In the next blog post, we’ll continue our tutorial by diving into more concrete details. We’ll show how we built a scalable News Reader iOS app, with all the aforementioned features, by conforming to the design principles we outlined in this article. More soon!|||

As we're preparing to launch a new iOS App Template for news reading, we had to come up with a scalable architecture for a News Reader iOS App.