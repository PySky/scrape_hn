We know about casual, midcore, and hardcore games. We’ve heard about all the different genres, and all have our favorites. We know all too well the non-paying players, and the affectionately dubbed “whales”. There’s a whole other world of game types and players out there, though – and how much do we really know about it?

Richard Bartle’s Taxonomy of Player Types is pretty well known throughout the gaming industry. His categorization of players was based on MUDs, or Multi-User Dungeons, the text-based ancestor of modern day MMORPGs. A far cry from mobile, we know! Bartle recently weighed in on his theory’s application to mobile game design, and the original taxonomy has been tweaked and built upon by other great gamers and design thinkers over the years. Bartle’s breakdown of player types gets distorted and misapplied in many cases though, which is where other player type models come into play. Bart Stewart does a fantastic and pretty thorough job of analyzing the various models and presents a Unified Model of personality and play styles.

We’re interested in the approach taken by Stewart and others, like Jason Tocci’s Five Appeals, in which player and game types are broken down to help developers understand what excites their audiences. We don’t think developers need to treat these as a rigorous rulebook – nor did any of the authors intend that. In fact, reading deeply into the presented theories, you’ll find that many of the player types, game types, or “appeals” flow into one another. Most of these aren’t mutually exclusive, and it’s unusual to find gamers who fall very rigidly into one category or another. Think of yourself and the games you play – if they don’t offer at least a few different ways to achieve a sense of satisfaction and accomplishment, you probably won’t be playing them for long.

So what does all of that mean for you, the game developer?  Most developers usually start off with an idea for a game which comes pre-packaged with a basic gameplay model, like endless runners, platformers, puzzle games, shooters, RPGs, and so on. Understanding player types won’t necessarily have a life-altering impact on what kind of game you’re building, because you usually know what game you want to make. Where it comes in handy, however, is to guide you in the right direction when it comes to things like storylines, extra features, determining monetization models, what types of IAPs to offer, and marketing and UA.

In case you don’t want to do the deep dive and spend hours reading all of the great theories out there (seriously? why not?), here’s a little breakdown of some of our favorites, and how to use them.

We’ve extrapolated some of the gameplay features associated with each player type in Stewart’s model (based on his own presented features), which can be used to guide the development of a particular game. It’s especially useful when you consider the blending of certain player types in the real world – for example, a combination of Achiever, Explorer, and Socialist who likes to build worlds and maintain characters (like pets), grind hard to level up, and join guilds or battle other players. It might sound like we’re just smashing a bunch of stuff together, but when you think about games in the real world, we know it works. It’s a matter of finding what works well together to satisfy the qualities which are shared across types.

Artisan/Killer/Experientialist – action, speed, risk, excitement, non-stop movement, missions, battles, and using tools, weapons, and vehicles, manipulation of gameplay, “cheating” the system

Guardian/Achiever/Gamist – the grind, leveling up, leaderboards and high scores, clear goals and achievement checklists, loot and collections, competition, guilds

Idealist/Socializer/Narrativist – community interaction and roleplaying, storytelling, socialization and real-time events, decorating, pets, and building your own world

*these are based directly on Stewart’s associated gameplay features



Jason Tocci intentionally focuses on types of appeals as opposed to types of players. His view is that player types can be limiting, in that it’s often difficult to match up how people actually play games with a specific player type. It’s all very fluid. Tocci instead offers the idea that “players exhibit different preferences and behaviors with different games or in different social contexts,” illustrated by the very funny example of coming across his brothers trying to fly an SUV off a cliff in Grand Theft Auto III together, but playing the game “normally” on their own. According to Tocci, these are the five categories of game appeals.

*these are taken directly from Tocci’s article about appeals

The interesting thing about Tocci’s appeal is how he legitimizes the type of player or appeal that most others label as cheaters or “fun-killers”, and encourages developers to treat this type of gameplay as valid and actively build for it. It’s also fun to note that the “Recreation” appeal is increasingly becoming applicable for mobile apps, with games like Pokemon Go paving the way for combining mobile games with physical activity.

Ultimately, any theory or model is only as useful as its application. At this point, it can feel like information overload – and we definitely recommend at least skimming both Stewart’s and Tocci’s articles for context, so these player and gameplay categories make more sense in the grand scheme.

Both Stewart and Tocci do a great job of showcasing examples of games which combine these models to great effect. For example, Tocci talks about Demon’s Souls, which combines cooperative and competitive multiplayer mechanics, in addition to imagination and socialization appeals. However, to preserve the atmosphere of the game, there is no ongoing, real-time chat functionality – instead, players can leave each other messages or interact as ghostly figures. This way, players get a “social” fix, while remaining true to the vibe of the game.

The application for these models in mobile games is endless. Consider, for example:

You’re creating a racing game, but you know that just endless racing is going to get boring, and fast. Appeal to the Experientialist through the intense racing, bring in the Achiever by creating goals and achievements – such as time records, number of races won – and take it to the next level by offering unlockable items such as cars and upgrades, and build achievements based on those – number of races won using certain cars, on specific tracks, using or without using certain upgrades. The opportunities are endless. Add a twist by making it real-time – give players the option to be matched with other racers to appeal to the “Socializers” and set up a leaderboard for the Achievers to climb. If you like the Killer crew, hide a reward or surprise for going off the track, or crashing into other cars or random objects. *shrug* We know what we like.

Develop a world where people can build their own towns or villages. You can make it appeal to Killers by creating the vibe of attacking or invading others, or appeal to the Explorer instead by making it slower-paced. Even how you name battling systems or present them can drastically impact which audience you’re appealing to. Introduce a map which shows where other players are to create competition, and introduce a wide variety of goals to appeal to the Achiever. Introduce guilds and chats for the Socializers, but make sure the game is just as enjoyable for non-Socializers, for us poor introverts.

Add appeal for the Achiever/Gamist in your game by including unlisted achievements. For example, in a game which involves crafting items, don’t show the players all of the recipes (or any of them). Allow them to discover the recipes themselves. This heightens the sense of achievement – and can also lead to a Social appeal, because players often enjoy showcasing these achievements to others online, and those looking for more combinations will spark conversations as well. Additionally, you can add a layer which will appeal to the Artisan/Killer by making certain items available only through theft or breaking the game rules – entering an off-map area, a hidden interaction with an NPC, and so on. It’s the little things, people!

Include IAPs which are “must-haves” – provide immense value, but can’t be achieved by just grinding or regular gameplay. Your Achiever audience will absolutely have to have it, and they’ll feel they got their money’s worth. You can also use these player types and appeals to segment IAPs – only show certain options or change prices based on how players have engaged with the game until now. Moving forward, the subscription model could be interesting for mobile. Imagine charging a subscription for access to a social community in-game, at the small rate of IAPs, for your Socializers to benefit from. None of the models discussed in this article have talked about player types based on monetization, likely because monetization transcends and spans game types. It’s interesting to see how you can structure IAPs to appeal to certain types, however.

Create a world-building game in which players have the option to engage in trades – but can get the same or similar items in shops or through accomplishing objectives. The same game and the same items have the potential to appeal to “Socializers” who enjoy cooperation and chatting, without alienating the “Explorers” who’d really rather stay away from people, but not feel cheated out of valuable gameplay. Knowing a game type has the potential to appeal to multiple player types will allow you to develop a multi-pronged monetization strategy and make the most of your efforts.

Build a world of chaos by developing a game with limited objectives, limitless actions, and open social interaction. The same game can be created as a single-player version by creating NPCs which engage in whacky behavior, surprising the player and forcing them into extreme reactions. With limited rules and objectives, you can easily employ the “Subversion” appeal for gamers who like to feel like they’re rebelling, collecting random items, and engaging in behavior which feels unscripted. While this model is often developed for multi-player games, knowing there are players out there who can enjoy the chaos but don’t necessarily get anything from socializing, allows developers to expand a game for a whole new audience with sometimes marginal more effort.

As we already know, there’s really no end to the types of games to be created – and a developer could find an almost scientific approach in appealing to a certain type of game. It was also an interesting process to try to come up with “new game ideas” using this list because all the combinations are games which already exist (we know – we’ve played them and enjoyed them). That’s why we find that the most value in employing these models is in exploring additional features for an existing game idea. That isn’t to say you couldn’t very methodically pick and choose different aspects of the model and start developing a game from there. As mentioned earlier, most people usually know what kind of game they want to build.

These categorizations can help to fine-tune existing games, develop effective monetization strategies, get to the root of engagement and retention issues, and even help with branding, marketing, and user acquisition activities. Some developers know exactly what they want, have a feel for effective game models, and know exactly who their audiences are. Others have really great ideas and could use some help putting them together, and finding out where their target audiences hang out. The possibilities are endless when you understand what makes people tick, and what they’re looking for in their games. Man, it was a lot easier talking about casual/midcore/hardcore, wasn’t it?

Have you used any of these theories in game development? Have you found success in basing design choices on player types or game types? What are some theories we didn’t mention that you find interesting? Sound off in the comments!

*Featured image by Mary Varn over at NPC Comic!|||

Applying modern theories about player type and game type can help game developers make attractive, engaging, and effective design decisions.