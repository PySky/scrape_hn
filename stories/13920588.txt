FaaS is a framework for building serverless functions on Docker with first class support for metrics. Any UNIX process can be packaged as a function enabling you to consume a range of web events without repetitive boiler-plate coding.

Functions as a Service or FaaS was a winner in the Cool Hacks contest for Dockercon 2017.

If you'd like to find the functions I used in the demos head over to the faas-dockercon repository.

This is my original blog post on FaaS from Janurary: Functions as a Service blog post

A one-line script is provided to help you get started quickly. You can test-drive FaaS with a set of sample functions as defined in the provided docker-compose.yml file.

Use your own laptop or the free community-run Docker playground: play-with-docker.com.

Here is a screenshot of the API gateway portal - designed for ease of use.

FaaS is still expanding and growing, check out the developments around:

See how to deploy FaaS onto play-with-docker.com and Docker Swarm in 1-2 minutes. See the sample functions in action and watch the graphs in Prometheus as we ramp up the amount of requests.

Prometheus is built into FaaS and the sample stack, so you can check throughput for each function individually with a rate function in the UI at port 9090 on your Swarm manager.

If you are new to Prometheus, you can start learning about metrics and monitoring on my blog:

You can also link this to a Grafana dashboard and see auto-scaling live in action:|||

faas - Functions as a Service - a serverless framework for Docker