The technical issues are heavily centralized around the complexity of interactions within our application.

For example, we have two login portals: one for administrators and one for students. However, full utilization of the app involves three parties: administrators, students, and teachers. As a result, admins need to have the ability to enroll students and provide them with their requested course material. Students need to be able to take the entire course through our application, but we must also design the app to be versatile enough that it works with or without a teacher present

Pages, such as the admin’s Course Edit dashboard, can be edited and reorganized in multiple ways. The hierarchy of a course goes: Section > Subsection > Component (lowest level). Every section, subsection, and component has click-and-drag reordering. We also built the ability to transport components into other subsections, or even entire subsections to other sections. We are aiming to offer the user more flexibility in organizing their courses, which comes at the cost of a much more difficult and lengthy development cycle.

We also have to be aware of the way that a student will experience a course that an administrator has organized. UX is especially important with regards to our target audience: people who come from impoverished backgrounds and likely have very little technological fluency. From the developer’s point of view, the organization of everything, from button placement to higher-level workflow, all make sense — but the experience could be totally different for the end user. That’s why we have to test thoroughly and always look at the perspective of the audience that will eventually be using this application. The bright colors in the app that highlight progress and where to go to next within courses are just some examples of making the interface more intuitive.

The main difficulty for our team is setting realistic expectations for the features that our app can encompass. Since we have a fairly large application, it’s very tempting to try to include many extra features. However, we have to manage priorities so that all critical parts are built out and thoroughly tested for reliability. It’s better to focus on getting the subset of mandatory features to ensure that everything is robust, especially since we aim to deploy the app soon.|||

Roots of Success (RoS) provides an empowering educational program to prepare youth and adults for environmental careers. They specifically create educational and career training for individuals…