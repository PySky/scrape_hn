This has been a hard blog post to write; not in a technical sense (though blogging always is - it’s why I don’t do more of it!) but simply because Fabric 2 has been “coming soon” for what feels like ages, and putting it out in the open turns out to involve a lot of emotions.

But here we are: Fabric 2 is no longer private!

I don’t want to bury the lede, so here are some important links:

At a high level: I’m putting Fabric 2 out as an alpha/beta now, and intend to gather general feedback about its approach & APIs to help pin down how much (if any) backwards incompatible work is truly needed before an official 2.0.0 release. Which I’m hoping will be by, during or shortly after PyCon US in a month’s time.

To make the process clearer, let’s break it down real quick.

I’d strongly prefer to limit the number of avenues used for concrete alpha/beta feedback, so please use either Github ticket comments or IRC to report missing features or issues with existing ones in the 2.0 codebase. Please don’t tweet at me, email me, or make new issues or PRs (I’ll be asking for new issues/PRs when I think they’re necessary!)

To limit the number of notifications in my poor inbox, I’m planning to corral initial alpha/beta feedback into a single meta-ticket: fabric/fabric#1591.

Github comments are preferred as they’re more permanent and more visible, but if (for example) you’re unsure if feedback is useful, feel free to bounce it off me at . I may not be active constantly, but I plan to check in more often than I have recently.

During this period, one of my TODO items is to do a serious cleanup of the issue trackers (especially Fabric’s). Such a task is needed even for projects not undergoing a transition, but a 2.0 is an exceptionally good time for it.

Basically, I’ll be closing most tickets older than some arbitrary threshold which lack involvement by myself or my ‘lieutenants’. This doesn’t mean that they are closed forever - just comment with a reason why the issue is still outstanding and I’ll definitely consider reopening it.

The intent is to close out no-longer-applicable issues, and a date-based mass-close plus occasional reopening is significantly easier than judging every single open ticket on its own.

As a wrap-up (this is not required reading!), here are some mildly interesting numbers around repository size and test coverage:

As Fabric 2 both lacks functionality present in Fabric 1 and includes functionality not present in Fabric 1, it’s hard to judge this as a direct comparison – though the increase in test code isn’t an accident.

Fabric 1 never grew test coverage in its management tools, but I coaxed some out just now:

It’s a nice example of what test-oriented code organization (and, to be fair, a greater emphasis on mocking) can do - a significantly increased amount of coverage, in only a fraction of the time.|||

