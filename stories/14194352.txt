Let’s imagine that we have a magic machine which always guesses the right answer. Imagine that we live in a world called Algorithmica, and there is a big magical machine which gives the answers of all the questions. What would you ask that machine? NP – complete problems raise from this idea, not every problem can be solved by computer even if we have infinite time. Approximation algorithms play big role in giving results which are close enough. Usually when solving NP-complete problem we find approximated solution or solution by integer programming. If we give some constraints then we reduce the problem and it is no longer considered as NP-hard.

Here is MIT course which explains what is NP-complete, NP-hard.

Here follows a short review for a few NP-complete problems from thousands of them.

This problem is about selecting a subset. For example packing a bag with limited size you need to decide which things with different sizes you will take with you, or trying to fill a box with alcohol for a party and you want to take as much as possible, but your box is limited and the bottles are with different sizes. You can solve this with integer programming technique which is a version of linear programming where a linear function is optimized.

For example solving a problem for scheduling where you have to minimize the collisions. Or graph coloring where you need to color a graph with minimal number of color and every neighbor vertex has to be with different color. Let’s say you are analyzing a social network and you want to find if there is a k group of people where every person is friend with every other. These are not so easy problems. You can try optimization which is still hard.

This is mainly about navigating in the space with requirement to visit given places. For example Hamiltonian path.

The list is big you can check on wikipedia List of NP-complete problems

And here comes the interesting part. We cannot live in Algorithmica yet, but we can create our Heuristica. NP-hard problems are still very difficult, but using heuristic methods we can solve them in average case. With heuristic methods we can solve problems which seems impossible to be solved. This is the basic of Artificial Intelligence algorithms, one of the most famous is A*, which is used to search the space and find correct or optimal solution. There are also heuristic search methods as differential evolution and simulated annealing.

Here is one example of heuristic function which the guy is explaining it very well.

Thank you for reading!

Share your knowledge in comments below.|||

