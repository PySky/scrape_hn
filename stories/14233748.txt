HTML isn't a programming language as such, it's actually a markup language. This means that it misses out on a lot of the good stuff that real programming languages have, including the joys of object-oriented programming. This project brings inheritance, polymorphism, and public "methods" to HTML. With startling imagination, I've called it object-oriented HTML and chosen the file extension .

Download the file and run it from the command line, passing a list of space-separated file paths to compile as arguments. (If you pass a path to a directory, it will recursively compile all .oohtml files in the directory.)

Normally, the compiler saves compiled HTML to a .html file with the same name and file path as the file it compiled. However, preceding file or directory paths with will make the compiler overwrite the original file with the compiled code. Note that its extension will not be changed to .

Use the attribute to mark a public block of HTML.

The attribute serves as the identifier for the block. To reference a block, use the element with the attribute.

When the above code is compiled, the tag will be replaced with the block to which it points. (Note that the block name is seen as a continuation of the path to the file containing the block.)

Blocks can be nested within each other, and a element can reference a block in the same file -- just use its attribute as the with no file path.

One object-oriented HTML document can extend another one, as follows:

The attribute is only valid if it is found on the element.

When an element of any sort except for a complete document is extended, the sub-elements of the "superclass element" are copied into the "subclass element" as the first of its children.

Note that the plain text in div 1 was not copied into div 2. This is by design, so that you can build templates that use dummy text without the dummy text being copied into the pages that extend it.

Although the element is found in the tag, the element is never extended. It is probably best to read as .

When a child of the superclass element shares an with a child of the subclass element, that child is itself treated as an element to be extended.

It is perfectly possible to have a 'chain' of extensions, so could extend , which itself extends .

The attribute is always resolved before the element.

This is, beyond doubt, the thing that I think object-oriented HTML would be most useful for. You can create a nicely laid-out template with blank spaces where the content should be, and then a whole series of bare-bones files containing nothing but the content, but which extend the template file. You can then compile them and have a set of files containing both the content and the formatting needed to display it right. If you wanted to make a change to the formatting, all you would need to do would be to edit the template and recompile the content files.

One of the brilliant things about public methods in other programming languages is the ability to create libraries, like JSoup (on which OOHTML relies). Using public methods and extension, it would be possible to create a 'library' for HTML. You could have pages full of things like social network feeds and weather applets, which could be integrated into any page that needed them. The library page wouldn't even have to live on the server -- it would only have to be accessible to the compiler.

I think that templates and libraries would be handy, but that's just my opinion. You can do whatever you want with this, including adding new features to the compiler. Feel free to send me any pull requests or bug reports.

There's a lot of stuff that I think would be great for this compiler to have, but that I don't have the time or the know-how to build. If you want to contribute, I would suggest starting here.

Right now, you can only build from the command line. It would be quite helpful if you could build from Maven or Gradle or another build system as well.

There are a lot of IDEs for object-oriented languages, and a lot for HTML, but no IDE or IDE plugin for object-oriented HTML. We should change that.

Object-oriented HTML uses JSoup, which is licensed under the MIT license.|||

Object-oriented-HTML - Bringing the goodness of inheritance and polymorphism to HTML.