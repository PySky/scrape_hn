Serving our clients better by developing aÂ robust and scalable task execution engine

To serve our clients well, our system must run certain tasks on their behalf on a daily basis. When we were a younger startup, we used a legacy system to run these tasks. However, as the number of our clients and tasks grew rapidly, we needed a more robust and scalable solution that would allow us to improve throughput while reducing the required human intervention to a minimum.

We have multiple types of tasks, each of them represented by a workflow graph. The vertices represent actions to perform while the edges represent constraints between them (topological order).

Our requirements were specific enough that there wasn't any ready-made product we could use. So we built our own system, which we named Kraken, to address them:

In order to achieve all of the above, we built Kraken as a distributed system. The components of the system are:

We took an event-driven approach, in which all system components communicate with each other using RabbitMQ. The benefits of this approach include:

Designing and implementing a system of such complexity and scale is always a challenge. The introduction of a distributed, message-based, event-driven application required us to increase our technology arsenal, as well as to make the necessary changes to support it.

With this project we've prepared the ground for further important technological advances. The infrastructure we've built during this project will serve our future development efforts and will further increase our competitive edge.|||

In order to serve our clients better, we developed a distributed, message-based, event-driven internal application platform called Kraken. Learn what this means for your business.