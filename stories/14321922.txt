Just about everything.

As someone who grew up with a generation that has had ubiquitous access to computers, I used to, like a lot of non-technical people, underestimate the complexity of creating software.

An easy example would be - imagine you are writing code to speak to an API, and whatever you were trying to implement made 10 calls to the API.

For each call, you could get a numerous error responses, such as a 404 Not Found, a 503 Service Unavailable or a 409 Conflict in addition with a successful response.

Instantly, your program now has to handle 30 more possible “paths”.

What happens if, on the say, 5th call, the response means that you no longer want to continue all 10 calls.

Now you have to implement reversing the effect X calls had on your system, to get yourself back to a clean slate.

This part of your program, by the way, could be for a tiny GUI element on the landing page of your iOS app. (and you’d have to implement the same for Android, and if you were feeling sympathy for Microsoft, Windows as well.)

Most software is hugely more complex than most non software people imagine.|||

