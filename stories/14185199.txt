If you are new to reactive programming then you should definitely checkout — The introduction to Reactive Programming you've been missing

RxJS is awesome and an inspiration for this a lot of other observable libraries out there. Air is focussed on some fundamental things such as —

Smaller Footprint: Rx has a lot of operators which makes the library quite large in size. Air has a much smaller number of operators and is architected such that more sophisticated operators can be created using the already available ones without any performance overhead of composition.

Functional Over Fluidic: Air embraces a functional API rather than a fludic one. All the functions come curried out of the box and work really well with ramda.

Performance: Air is significantly faster than Rx, benchmarks coming up soon.

Virtual Time: In Rx is passed as an argument to each operator, in Air the is passed once at the time of subscription and is internally shared up the chain of its parent operators or sources.|||

observable-air - Observable for the calorie conscious