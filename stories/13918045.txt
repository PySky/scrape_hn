The author’s website indicates the book is released under an open-source license, although I’ve yet to receive confirmation.

The C# Book is a book that teaches you how to program using C#. It’s the basis of the first year programming course at the Department of Computer Science in the University of Hull.

This book is designed for beginners. It teaches the reader to think like a programmer and the C# language is just a tool that can be replaced  by any other modern programming languages, such as Java, C++, PHP or Python. This is a book on programming, not a book on C#.

This book provides a through treatment of the C# language. It covers the language basics, classes, advanced concepts, the .NET framework, and keywords.

.NET Book Zero – What the C or C++ Programmer Needs to Know About C# and the .NET Framework is a book that provides an introduction to C# and the Microsoft .NET Framework for programmers who have experience with C or C++. Edit, Compile, Run, Disassemble – discusses the structure and contents of simple example programs Strings and the Console – a string is an object of type String whose value is text Primitive Data Types – takes a more methodical approach to data types of string, char, int, double and the other primitive data types supported by C# and the CLR Operators and Expressions – operator precedence and associativity, primary operators, unary operators, multiplicative and arithmetic operators, shift operators, relational operators, equality operators, logical operators and conditional operators, and assignment operators Selection and Iteration – discusses statements built around the if, else, switch, case, default, do, while, for, foreach, in, break, continue, and goto keywords The Stack and the Heap – keep memory management and garbage collection in mind in order to optimize the performance of applications Arrays – ordered collections of objects of the same type Instance Methods – when a method declaration does not include a static modifier, the method is said to be an instance method Constructors – enable the programmer to set default values, limit instantiation, and write code that is flexible and easy to read Concepts of Equality – explore in more depth the differences between classes (reference types) and structures (value types) Fields and Properties – classes and structures have several types of members, most notably fields, methods, constructors, and properties Inheritance – one of the primary features of object-oriented programming. Inheritance provides a structured way to reuse code that has already been written, but inheritance also provides a way to alter or enhance the code in ways that make it more useful or convenient Operator Overloading – permits user-defined operator implementations to be specified for operations where one or both of the operands are of a user-defined class or struct type Interfaces – an interface contains definitions for a group of related functionalities that a class or a struct can implement Interoperability – enables you to preserve and take advantage of existing investments in unmanaged code Dates and Times – a particular moment in time is represented by an object of type DateTime, a structure defined in the System namespace Generics – a new feature in version 2.0 of the C# language and the common language runtime (CLR). Generics introduce to the .NET Framework the concept of type parameters, which make it possible to design classes and methods that defer the specification of one or more types until the class or method is declared and instantiated by client code|||

Open Source C# Books C# (pronounced "See Sharp") is a multi-purpose computer programming language suitable for a wide variety of development needs. C# combines the power and flexibility of C++ with the simplicity of Visual Basic. It encompasses strong typing, imperative, declarative, functional, generic, object-oriented (class-based), and component-oriented programming disciplines with support for the concepts…