3 Types of Route Loading in Angular, Explained In 500ish words

This is an overview, intentionally non-technical because Angular is living and breathing with new commits all the time and new versions every six months…

…so this post sets out to explain the concepts of each type of loading in simple language.

When you’re working with Angular routes, in the beginning, all of your loading is eager. Because without doing anything but including routes in your app, they will default to loading this way. It means everything loads all at once. If you had an app with three sections — home, admin, dashboard — all three would load when the user visits the browser.

Eager loading means the slowest load times for this reason. When you have a small app, this is okay because the total size will not be large enough to see a benefit from the other two loading strategies.

When you’re lazy, you don’t do anything until you have to. Imagine your app has three sections — home, admin, dashboard. The home section will be accessed all the time and the dashboard section will be accessed most of the time. But the admin section will only be used by a select few users.

You can load the admin route lazily. Until someone clicks to visit the admin section of your app, the code associated with it will not load.

The majority of your users will never load the code for the admin section when using lazy loading, and therefore will access your app faster because it will not need to receive as much code from the server.

When you’re preloading you’re doing the same as lazy loading, but different.

Use home, dashboard, and admin sections for example. Home you always need, so you eager load it. Admin you rarely need, and only a few users need it, so you lazy load it. But dashboard is not the first thing a user sees, so it can wait. But dashboard is something most of your users will want to see at some point so you want it to be ready soon after your home section loads.

Your home section loads successfully then immediately after it loads, your dashboard section loads in the background. That’s preloading.

Imagine your users are on a mobile phone. Imagine your users are on limited data plans. Now consider how loading strategies benefit them.

Using eager loading, your app immediately only loads the home section. So your app loads fast for your users.

Using lazy loading, your app never loads the admin section for almost all of your your users. So your app uses minimal data and saves your users money.

Your app preloads the dashboard section and your users can access it almost immediately, once the home section is loaded. So your app feels very fast for your users.|||

This is an overview, intentionally non-technical because Angular is living and breathing with new commits all the time and new versions every six months… When you’re working with Angular routes, in…