Many developers that want to build an application don’t need a full engine / libary to accomplish it. Similar to AngularJS, Vue.js is not a “full-blown framework” — it is designed to be a view layer that is simple and flexible for apps and websites whose data model is simple and matches more closely that of the application’s presentation layer.

In this blog I will show you how to pick up an existing codebase example to build your very own beautiful Vue.js / Nuxt.js Website. Cosmic JS has an example Vue Universal Website built using the Nuxt.js framework. It was adapted by Sebastien Chopin from the Next.js Website that Cosmic JS put out a month ago. Code is shared between the client and server making development a breeze. Add Cosmic JS-powered content and you’re taking your website to the Nuxt.js level.



I’ll be using Cosmic JS for this example blog. Cosmic JS is an API-first CMS that makes managing and building websites and applications faster and more intuitive. By decoupling content from code, Cosmic JS empowers developer flexibility while ensuring content editors can plan and deploy content as it best suits them. We’ll be using Cosmic JS to install our example app, deploy and make content updates moving forward from the cloud-based Content Management Platform.



If you haven’t already, get started by Signing Up for Cosmic JS. Helpful resources are provided below to streamline your development operations.



 Your bucket’s name is the name of your website, project, client or web application that you are building. I named mine “Vue.js” to remain concise for our example blog.

Once you’ve signed up and named your bucket, you’ll be prompted to start from scratch or “see some apps”. For this blog I simply clicked the right button to “see some apps” so that I could begin the installation process for the Nuxt.js Website.

Cosmic JS gives you the ability to filter between programming languages such as Node.js, PHP, React, AngularJS and more.



Simply click “Install” underneath the Nuxt.js Website icon to get started, or visit the Cosmic JS Apps Page.



I clicked “Deploy to Web”. I can then edit Objects while my web application is deploying. You will receive an email confirming the deployment of your web application. If you encounter any issues during deployment, you may be routed to the Cosmic JS Troubleshooting Page.

I’m drawing from a repo, my branch is clarified and I have a deployed location that matches my slug / bucket name that I made in Step 1.

Editing is a dream come true in the Cosmic JS Dashboard. To read more about Cosmic JS user roles and permissions, read Managing Users Who Manage Content.

It’s as easy as signing up, creating a new bucket, installing the web application(s), edit objects and deploy! I get my confirmation email to access my web application and also see my options for bucket upgrades like custom domains, one-click SSL, webhooks and localization. See all Cosmic JS Features.

Cosmic JS is an API-first cloud-based content management platform that makes it easy to manage applications and content. If you have questions about the Cosmic JS API, please reach out to the founders on Twitter or Slack.

This tutorial was originally posted by the author here.|||

4 step tutorial on how to pick up an existing codebase and build your very own Vue.js Web App.