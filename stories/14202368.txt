View components is a feature of ASP.NET Core MVC, that’s similar to partial view and child actions, one cool thing about view component it allows you to create reusable components with or without logic.

The purpose of this post is to show you how to pass view component as a parameter when invoking it from view and controller.

Another  cool thing about View Components is that it separates the logic of which markup to display from the markup itself. It’s a class that inherits from View component and implements Methods, the return type can vary, and that depends on largely what you intend to render.

To use the View Component, we have to invoke the will involve calling the components and awaiting its response.

This example will show how to create view component that will display data obtained from a data source like database.

Then we update the default.cshtml template to reflect the changes.

The component is set to display the grocery item from the database when the name of the component and the grocery id is passed a parameter to the view component either as a dictionary or anonymous type. The content is rendered as a result of call to InvokeAsync from within a view or layout.

Passing Parameter to View Component When Invoked from a controller

It’s almost the same thing, just pass anonymous method with the right parameter when creating the controller.

With the introduction of View component, it’s now easy to write complex rendering logic that is independent of the UI, can accept parameter and gives you the ability to control how you want your view to behave.|||

