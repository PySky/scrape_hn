What is /proc? It is a pseudo directory present in all Linux systems which provides information about the system. It was originally designed to convey process information (hence the name), but now conveys a wide array of system information. Note that I referred to /proc as a “pseudo directory”. It doesn’t actually exist (on disk). Instead, the Linux kernel creates this pseudo filesystem in memory, so that we can access it as if it were a directory on disk.

As you notice, there’s a whole slew of numeric directories. These contain information about the process with the corresponding id. There’s also a wide variety of other information, such as memory information (meminfo), load average statistics (loadavg), kernel version, gcc version, and Linux distribution (version), virtual memory statistics (vmstat), and a wide variety of other kernel and hardware information.

So, what’s in a process? Let’s take a peek.

You can check out the status of a process in status.

In status you can see the state (sleeping), the process id (4143), the parent process id (1), ownership (user/group 1001), memory sizes, the number of threads, and many other details. It contains much of what is in stat and mem (status and memory information respectively), but in more human readable form.

You can also see what files the process is referencing in the fd directory. Here are the open file descriptors for my Plex Media Server.

Using the proc filesystem, we can even access and recover files. Let’s get the tail of the log for file descriptor 10 (Plex Media Server.log).

We can also check out the environment of the process via environ.

We can inspect the command with which the process was launched via cmdline.

We can also take a look at the various kernel level limits for a process in limits.

As you can see, there’s all kinds of cool information in /proc!

Many utilities (ps, top, lspci, etc.) get their information from the /proc filesystem.

Let’s take a look at the files ps opens when it runs on my Raspberry Pi.

Nifty, huh? strace is another one of those cool Linux utilites. It can be used to trace system calls (the essential interface between programs and the operating system) in a running program. More on that in a future post. :)|||

What the proc?