I started my technical and professional career around a once mighty ERP that competed with SAP known as BaaN. BaaN  came complete with it’s own ncurses based GUI, C-style language and compiler, and built in 4GL tools.

Back when I started in BaaN, there were only 7 of us in the States that were trained in its technical intricacies at Ernst and Young Management Consulting. Our knowledge of the system was second only in scarcity to our professional experience having worked with it. Fortune 1000 companies especially in manufacturing were paying princely sums for our esoteric if not arcane experience and knowledge.

Back then, there was very little in the world of open source. Linux was just starting to come into being and was seen as a hobbyist’s OS to tinker with. If you were running UNIX for business, you were on some hardware vendor’s flavor like HP/UX, Sequent Dynix, IBM AIX, or Sun Solaris, and the list goes on.

Fast forward almost 20 years later. My oh my – things have changed. Isn’t it amazing that all that proprietary UNIX was eventually replaced by some open source distribution of Linux? And the hardware that drove a lot of that proprietary UNIX as well has more or less been commoditized to Intel X86/64. Open source has always climbed up the application stack. You have open source ERP and CRM systems that are used and are actually taken seriously.

Looks just like its proprietary counterparts in the CRM market huh? And probably a lot easier to use from the likes of it!

The funny thing about open source is that I’ve probably contributed and utilized enough open source to put myself out of work for a couple of lifetimes now.  All of this, despite having made my bread and butter starting with highly proprietary systems.

And you know what? I wouldn’t have it any other way either. What was once proprietary and secret sauce has become a new watermark for what is open, interconnected, interchangeable and ultimately – commodity.

“We progress as a race by sharing our knowledge and know-how and competing on higher orders of innovation while leaving the common to things that are embodied in open source based libraries, frameworks and tooling.”

I’m really proud of originating LoopBack.io with my team back at StrongLoop – Raymond, Ritchie, Miroslav, Simon and our contributors that we accrued over time. LoopBackJS is the leading open source Node.js framework for developing enterprise APIs.

When we started LoopBack, our observations were that mobile use cases were primarily driving the need for APIs with the likes of Parse, StackMob, FeedHenry, and other that originated as MBaaS vendors (mobile backend as a service).

We soon discovered that although this was true – mobile was just one facet of the equation and not enough half that was driving API development. We found that next generation web in the form of single page applications accounted for more than 60% of our API leads to our astonishment.

Gartner and Forrester reports later confirmed our observations with broader and similar studies over the course of two quarters later in 2013.

Equally impressive was the fact that at the forefront of adoption were forward looking companies that had been around for a while and were adopting an “API first” strategy with existing web or mobile clients.

And is if that weren’t already mind blowing, we ran into those who weren’t even sure they would ever pursue developing their own client but rather making the API their flagship product and experience. This was still quite some time before companies like Stripe and Twilio were around and became public!

LoopBack flourished because of two main reasons:

Our community had enterprise representation seen in the connectors that were built to talk to proprietary paid systems like…

…aside from the many others that were built to talk to open source that had premium offerings. If you’re curious you can view a partial list here – Awesome LoopBack List.

These connectors were not what I had expected to ever happen.  But the enterprise representation in the community created an unexpected bridge to interoperate with these proprietary systems. These system were only as open as their own limited APIs with no third-party alternatives.  It also was great validation that folks were using our framework to talk to enterprise systems while building on new generation technology like Node.js.

Open source with enterprise representation and adoption has privileges: agility and tooling to crack open proprietary systems. At LunchBadger, we’ve built API composition and integration on top of LoopBack to leverage this key strength and differentiator. Check out part 2 where we’ve taken the SalesForce LoopBack connector literally off the shelf – and put it to work!|||

Open source has built bridges to once proprietary systems and the community folks in the enterprise have done so to be more productive through APIs