Datomic is the database that underlies the Clubhouse application, and one of the great things about Datomic is its implementation of the reified transaction. In addition to the application domain entities stored in the database, transactions themselves are entities that can be queried and inspected in order to establish what happened and when.

Clubhouse uses reified transactions to provide organizations with a historical record of the actions their members took, and in turn, help our users organize, query, and manage their work. Clubhouse allows you to ask and get answers for questions like:

This post assumes some familiarity with Clojure and Datomic. There are online resources for learning more about Datomic and more specifically Datomic Transactions.

All examples below are preceded by this function call for using the Datomic API:

Given an entity-id for a transaction (you can get this a number of different ways including from within the return value of the command), this is what you will see upon inspection:

The transaction entity has two keys:

When using Clubhouse, users take actions within the context of an organization. We add the following two attributes to every transaction to indicate both the actor and the context:

We can later query these transactions in order to provide a detailed history of actions taken by a specific user working within a specific organization.

To add fields to the transaction entity, create a tempid in the  partition and add the audit fields using that tempid:

Inspecting a transaction transacted by this function yields two more fields than the example above:

And, with this audit information attached to the transaction entities, we can now query transactions in order to generate a stream of activity feed history for a user within an organization:

Interpreting an individual transaction is out of scope for this post, but it is by no means trivial. You could use additional audit fields to provide more detail or inspect the individual datoms contained in the transaction using .

As a project management tool, Clubhouse has several features that rely on historical transaction data. Through the use of reified transactions, Clubhouse uses audit information to track many things: the actor, the context, the action taken, and more.

We’ve found this valuable as we continue to push out features that give Clubhouse users a bigger picture of their progress over time.

A special thanks to Edward Wible and Lucas Cavalcanti at Nubank for their 2014 ClojureConj talk “Exploring Four Datomic Superpowers” which inspired us to use reified transactions.|||

Datomic is the database that underlies the Clubhouse application, and one of the great things about Datomic is its implementation of the reified transaction. In addition to the application domain…