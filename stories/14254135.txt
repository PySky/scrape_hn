is a format for describing changes to a document. It can be used to avoid sending a whole document when only a part has changed. When used in combination with the , it allows partial updates for HTTP APIs in a standards compliant way. A JSON Patch document is just a JSON file containing an array of patch operations. The patch operations supported by JSON Patch are “add”, “remove”, “replace”, “move”, “copy” and “test”. The operations are applied in order: if any of them fail then the whole patch operation should abort.

In earlier version of ASP.NET,  we need to use other third party libraries in order to achieve JSON patch, but the good thing is, ASP.NET Core supports this feature right out the box without the need to install any third party library.

There are two main approach to perform patch operation. Listed below are the two ways:

For a start we need to add a reference to

In this article we will be using the first approach, and this involves the method accepting parameter of

To illustrate further, we shall be adding a class, that will hold our data member.

To move further, we will create HTTP API, that will accept as a parameter from the request body.

Now that our API is ready, we shall be testing various patch JSON Patch. And we shall be using to send request to the API.

Testing the various Json Patch operation is quite easy, you do that by sending request to operation by sending request to It’s easy to test all JSON Patch operation, but in this article we shall be testing for

How to Replace an item

To replace an item in JSON patch, we have to supply the path of the item to replace.

ASP.NET Core supports JSON patch and it’s quite easy. Using JSON patch makes your request to be light and to scale in speed.|||

