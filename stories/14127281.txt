There are two major sources of performance problems with ReSharper installed in Visual Studio:

A significant time (up to several minutes) taken for opening a large solution for the first time is not a sign of a problem. ReSharper builds and caches a model of the solution, which is then used in almost all of its features - not only for code analysis, but also for navigation and search, code completion, unit testing and more. 

 Subsequent openings of this solution will not result in any significant delays because the indexing results are already cached on your hard drive. 

 Note that because ReSharper processes assembly annotations at the very first start, any subsequent start will be faster even if you clean up ReSharper caches.

The most common causes of performance problems could be eliminated with the following actions:

Before starting to tweak Visual Studio settings, check that the most recent Visual Studio update / service pack / hot fixes are installed.

Open Visual Studio options (Tools | Options) and configure the preferences as follows:

In most of reported performance problems, ReSharper was installed in Visual Studio 2015. This is no surprise: when your Visual Studio solution grows large, two code analysis engines (ReSharper and Roslyn) working simultaneously can reach the memory limit of the 32-bit process that they share. 

 Although there is no official way to disable Roslyn, you can check out this article to find some alternative solutions. 

 You can also take a look at Roslyn performance considerations for large solutions.

Before starting to tune up ReSharper, check that you are running the latest version, and if not, consider updating.

ReSharper provides plenty of different features, and if necessary, you can disable most of them in ReSharper options. So the general rule here is: if you have any performance problems, disable features you do not use.

Open ReSharper options (ReSharper | Options) and configure the preferences as follows:

If you've tried out everything described above and the performance is still down, you can temporarily disable ReSharper and check whether it was the cause of the slowdown. To disable/enable ReSharper, go to Tools | Options | ReSharper Ultimate and click Suspend Now/Resume Now.

If suspending ReSharper helps improve the performance but you still want to use it occasionally for code analysis, code cleanup or reformatting code, you might want to have a shortcut that quickly switches ReSharper on and off. Here is how to do it: go to Tools | Options | Environment | Keyboard and find the command, then press a shortcut of your choice and click Assign.

If you have recently updated ReSharper and observe performance degradation with solutions that were opened with previous versions, you can attempt to speed thing up by clearing the ReSharper caches and deleting the solution .suo file.

To clear the caches, go to ReSharper | Options | Environment | General and click Clear Caches.

Major compatibility issues have been observed with the following products:

Performance degradation has been observed with the following products:

There are also reports on Web Essentials contributing to low performance while editing .cshtml files. If you're affected by this problem, consider going to Tools | Options | Web Essentials and setting Auto-format HTML on Enter to False.

If you're running Visual Studio in a Windows virtual machine on your Mac using Parallels Desktop, ReSharper IntelliSense lists might be very slow to render.

If this occurs in your setup, consider switching from Coherence mode to Full Screen mode. For guidelines on switching between the two modes, please see this Parallels Knowledge Base entry.|||

This page provides the comprehensive lists of adjustments that will help you improve performance of
        ReSharper and Visual Studio.