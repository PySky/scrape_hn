Justin Jackson thinks we are at peak SaaS. We are not.

Justin asserted on Twitter that SaaS is ripe for disruption. SaaS founders, like myself, piled on arguments against the theory in a fun exchange. What follows is a thought-provoking article with a lot of great points but a dead wrong conclusion.

In this post I’ll tackle two specific, very good, questions he raised:

First I’ll look at some of Justin’s specific arguments, then I’ll add some support for my counter-claim: not only is SaaS not about to be imminently disrupted, but the software industry as a whole is inexorably shifting towards the as-a-Service model.

Most of my target audience, and Justin’s I believe, are bootstrappers or early stage founders. So I will likewise make only a few references to the enterprise, VC-backed SaaS sector and acknowledge that I really don’t follow it closely enough to prognosticate. Some of my arguments may apply or it may be that enterprise SaaS and bootstrapped SaaS are diverging.

Justin describes the shift, starting in 1999, from shrink-wrapped boxes of MS Office and on-premise enterprise software to SaaS, as a pendulum currently swinging towards SaaS. But what evidence do we have that a pendulum is the right mental model for technology trends? Is mobile vs desktop on a pendulum, with a huge shift back to stationary computing on the horizon? No, the better way to think about the shift to SaaS is the technology adoption S-curve. After an initial boom, the rate of acceleration can slow somewhat but the trend continues.

No way. Almost nobody, not even Justin’s post, argues that it’s harder to start a SaaS business than 1, 5 or 20 years ago. But the reality is not only is it not harder, that it is much much much easier to start a SaaS business today. The SaaS eco-system builds and compounds on itself. On top of ever more powerful development frameworks, and more and better Platform as a Service companies, like Heroku, that literally take all the scaling and DevOps off your plate, there is an enormous proliferation of other SaaS companies building products solely to solve the challenges of building and scaling a SaaS business. A quick scan through Heroku’s add-on ecosystem reveals dozens of products, most with a free starter plan, to handle emails, logging, search, error catching and every other major issue a new SaaS business faces. I launched my own SaaS business with 30 hours of coding and literally $0 primarily by stitching together a several other SaaS products as the foundation and building a niche service on top in Ruby on Rails. Here is a the full list of apps I used.

This one is trickier. There are two main arguments for it. To the extent that either is true I think it is that the software industry as a whole is dealing with these challenges, not that SaaS is somehow suffering from these more than other business models.

First, SaaS companies, particularly in enterprise, are finding it harder and more expensive to acquire new customers. Very hard to estimate but I think it is true. A lot of money and energy has gone into building software products and many many categories of paid software now have dozens of competitors vying for the same customer’s dollar. I think this is mainly true in enterprise SaaS where VC-funded businesses are finding it more time-intensive to switch big companies to SaaS than expected. I don’t however see any evidence that companies with other business models are having an easier time of it.

The second argument is that SaaS apps are necessarily becoming more complex, because all the low-hanging fruit for simple SaaS apps is gone. And more complex apps are more expensive to scale. Specifically he cites Rob Walling, the founder of Drip, on this. I think Rob has a ton of great insights into bootstrapping software but on this issue he is probably extrapolating his own experience to a broader trend. Drip is a broad use email marketing tool and going head to head with huge incumbent products like Mailchimp and Infusionsoft aspiring to send like 100 million emails per day. So yes that kind of thing might be costly to scale.

But most new SaaS businesses are not going straight at huge incumbents like that. I can’t specifically weigh in on this because I have only built one SaaS company, but I don’t hear any other founders arguing that SaaS is now more expensive to scale than it used to be. I really would find it hard to believe that Drip was somehow more expensive to scale than Mailchimp was.

I see two countervailing forces against this complexity effect.

First, the cost of the raw inputs to scaling, servers and so forth, has unequivocally come down massively. You can “hire” apps with all kinds of automation to make employees more efficient. Services like Bench (bookkeeping) and Gusto (payroll) can keep your head count lower as the business grows.

Second, because the cost of starting a SaaS business is so reduced, opportunities for simple SaaS app in niche markets are actually multiplying. You no longer have to build SaaS targeting a giant cross-section of industries when you can build a Salesforce/Zendesk/Freshbooks at 1/100,000th the startup cost, targeting just one specific industry.

I mostly agree with Justin here that it’s important to not just do SaaS because it’s the thing to do. Think through what you want from your business, lifestyle, team, relationship with your customers and potential exit opportunities. But I think increasingly you will find SaaS is the right answer relative to other software business models. In the same way that SaaS is not a magic bullet, I don’t really buy the argument that it is uniquely bad on any of these fronts. SaaS doesn’t on its mean you have to have a big team or raise VC or sell the business to survive.

This is a great list of threats for SaaS businesses to think about but in no way add up to we’re at peak SaaS. At best this represents a list of ways in which a few mature but stagnant SaaS businesses may see others nibble away their customer base. I just don’t think any of these represents a potential disruption event for SaaS

Ok, let’s just admit it. The “pay once and download” model of software was/is a disaster for both businesses and customers. As a customer you have to commit to the full value of the product up-front before you really test it. If a better product is released soon after, you’re already locked in with the sunk cost of a worse product. Then at some unknown point in the future the company will decide it is time that the next upgrade is a paid upgrade so surprise now you need to pay again or miss out on critical new features.

From a running a business perspective it also sucks. You have to balance your monthly costs like salaries against lumpy customer payments. You can’t slowly roll out features but have to get them all completed on a single release date. Even though you’re providing ongoing support and upgrades for your product continuously, your customers are likely to completely freak out every time you announce a paid upgrade in exchange for a bundle of new features.

Think about the shit-storm the poor Tweetbot folks had to go through every time they announced that their customers would have to fork over the price of a latté every few years. One of their designers had to literally point out that the price of the paid upgrade was the same as an iced coffee after a torrent of negativity on Twitter.

The only reason to sell a desktop app on a pay-once model is that the infrastructure for recurring payments on desktop apps is not great. Adobe switching to CreativeSuite to SaaS is absolutely a better pricing model but that little app that regulates your access is just so irritating; and Sketch is a better product, but not because of it’s business/pricing model.

It’s true that there are increasingly opportunities for open-source or self-hosted apps – that you download and run on your own server rather than using the company’s “cloud” servers – to steal market share from existing SaaS businesses. But literally the only advantage they offer is cost. This kind of a race to bottom, particularly in software, is a terrible foundation for a business and I would really recommend against it.

As a customer you give up a ton of benefits – more on this below – by switching to self-hosting not to mention in the long-run you are fighting an uphill battle against economies of scale. SaaS businesses should pay attention to these as threats to their existing business, but there is zero chance that all of the sudden self-hosting over-takes SaaS as a dominant business model.

I really liked Claire Lew’s piece on pricing Know Your Company as a pay once web app. I think it’s a great selling point that uniquely aligns their pricing with the intent of the product. But it just doesn’t make sense for the vast majority of software businesses. The biggest problem is that the company is forced to add new customers just to support it’s existing customer base. If a company like that got a little too aggressive with hiring, and then dropped the ball, even for a few months, on new customer acquisition it could go hugely in the red. The business model must get new customers just to pay it’s existing bills. Particularly not good if you want to bootstrap the business. Know Your Company is pulling it off but I really don’t see this catching on. The same arguments against pay once desktop apps also apply here.

Yes. And this is where I agree that trying to go after a big incumbent SaaS business with slightly better features is a bad move.

The awesome position of a mature SaaS business, with recurring revenue from a stable customer base, means it’s much easier to a big mature SaaS business to launch another feature or product line and upsell their existing subscriber base. If your business is some generic feature, another big SaaS company is likely to just roll out that feature and come eat your lunch.

It’s much smarter at this stage to go after niche subsets or completely unserved markets. Fortunately there are tons of those.

On the whole Justin makes some great points that SaaS companies and potential founders should pay attention to. But in no way does it add up to Peak SaaS. In fact I’m going to argue that SaaS has some unique advantages that will propel it into the dominant business model for all software companies. It’s true not every new software business should be built as SaaS but the model is so much more compelling that you should start there and need a really powerful set of reasons to go with an alternative.

First it is true that some businesses and consumers are starting to grumble about SaaS fatigue. As the monthly cost of different services start to pile up they will find it makes sense to prune their recurring costs and that’s fine. But it absolutely does not mean we’re headed for a reversal of that trend. As consumers we are increasingly becoming used to buying everything as a service. Instead of owning cars we use Uber and Zipcar: cars as a service. Instead of a shelf full of DVDs we have Netflix and HBO Go: movies as a service. Even concrete things like power plants are becoming electricity as a service through solar companies.

The same goes for entrepreneurs and business owners who are increasingly fine with paying monthly fees for things they used to just purchase one off. Depending on the industry you are targeting it’s possible there may be some friction in convincing customers to switch to SaaS but the trend is heading in the right direction.

Despite the proliferation of Coming Soon landing pages selling vaporware, The Lean Startup Methodology has absolutely improved the process of building a business. SaaS is the best model for building a product using Lean. You can launch quickly with a minimal feature set and charge a low monthly fee to start. As you iterate and build a better product with more powerful features you can test and raise prices gradually over time. Desktop apps and other models can try to emulate this with a beta period but at some point they have to switch to a mode of spending a ton of time building something, rolling it out and hoping for a big hit. Then they get to repeat that process every two years or so if they’re lucky.

If the Lean Methodology makes sense for your business, and it does for a lot of business ideas, you most definitely should be thinking about SaaS.

Recurring revenue is anunbelievable as a business model. Once your customer base becomes large and mature enough and your revenue distributed across enough customers, business and financial planning becomes so much easier than any other business model. That’s not to say you can become totally complacent, but with decent data on retention, churn and MRR growth, you can make pretty good projections. Concerns like “If our new product launch is a flop, will we have to cut 40% of our staff” are not an embedded part of the business model like they are with desktop apps. You don’t absolutely need to keep two years of salaries in cash on hand, though you may choose to.

Unless your business is in a position where it needs to grow tremendously fast, and you’d rather be paid all up front rather than over time month to month, there is almost no reason you wouldn’t want to operate on a recurring revenue model.

Ok, this is a terrible name I made up for a really cool phenomenon unique to the data that SaaS businesses have access to. Here’s an example of it.

The other day I went for a run. I tapped the Running Playlist on Spotify. The app using my iPhone’s accelerometer to measure my running speed (175 steps per minute), searched it’s entire music library for songs at exactly 175 beats per minute, cross-referenced those with the data it had about my listening preferences and on the fly produced a playlist of songs I had never heard, that I really enjoyed at exactly my running pace. It’s like a superpower. I actually tried to do this about five years ago and I can tell you that it’s extremely hard and time intensive to make a paced running playlist like this when all you have access to is your iTunes music library.

Here’s another cool recent example. Baremetrics is financial metrics as a service. You could make the case that a self-hosted or downloaded solution might be cheaper or more secure (maybe). But because they host the financial data for hundreds of private software companies they are able to produce anonymized and aggregated industry benchmarks on metrics that you literally could not find anywhere else.

There are tons more examples. Billguard can not only help you monitor your transactions, but aggregate the charges you flag with all their users’ flagging and predict when a charge is fraudulent. My own app Storemapper has a growing database that knows, across all our customers, what products are sold where in millions of stores and as that data set grows a whole new range of very cool features become possible. Of course businesses need to be careful and transparent when using data in this way but the benefits outweigh the risks.

In most business models that are not delivered as a service, each customer’s data is silo’d on their own device/server and these kinds of aggregation-based features are just not possible and in the long run they will lose out.

The main reason SaaS is going to continue growing market share in the software industry is that there are just going to be a lot more new SaaS companies started every year. Because of falling costs to start and scale a SaaS app and the expanding eco-system of SaaS products for SaaS companies, it’s easier than ever before to build a Micro-SaaS, a standalone SaaS business of one person or a small team.

I run a SaaS business that I built and run entirely by myself for several years. It is currently a profitable business with over $20,000/month in revenue and a team of three people. After I started writing about my own experience with Storemapper and started writing the Micro-SaaS ebook, and coined the term Micro-SaaS (a new piece of jargon the industry possibly doesn’t need), I’ve met dozens of other entrepreneurs doing something similar. This is not at all a myth.

And yes, “add-on services” built on top of platforms can be great businesses, but in many cases we are talking about full standalone SaaS.

The opportunity space for Micro-SaaS is already enormous and is expanding. There are so many ways to re-invent existing “CRUD apps” for niche markets. Even a simple Salesforce for dentists or Freshbooks for yoga instructors, if built in a lean and low-cost way, can be a profitable Micro-SaaS business. My favorite by far is an entrepreneur in the UK making a full time living, and hiring his first employee, with SaaS exclusively for window washing companies!|||

Are we at Peak SaaS? Absolutely Not. I argue that most of the software industry will end up as SaaS