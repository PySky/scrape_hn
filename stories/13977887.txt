Some time ago I wrote about a history of syscall. While that piece was a necessary introduction to the followup post, it triggered interesting discussions.

It took me a while but I finally realized what is the core question I asked myself. Here it is:

The direct answer is "no". CSP is younger than Unix. As Tony Garnock-Jones points out, the first paper about CSP was published in 1978 and file descriptors had been around since the very early days of Unix.

While file descriptors are not channels, maybe they should have been? CSP-like channels are generally composable, while I believe Unix's is not. This goes to the second point:

When programming in Golang, one can make use of ALT statement and built in channels. Generally speaking Golang channels are composeable. Similar thing is true in Erlang - you can avoid complex state machines by skilfully stacking processes.

Why this isn't possible with the Unix process model? Why can't we combine Unix processes in the same way as we combine Golang or Erlang ones?

I'll intuitively blame the syscall, but the problem is deeper and I don't know the answer.

Couldn't we just drop ? How far in could we go without it? In the previous article we mentioned two use cases:

There are more problems that absolutely need . David Wragg mentioned "the buffering proxy" problem:

The same problem was mentioned by Chris Siebenmann in his blog in 2010:

Earlier this year Chris mentioned another problem requiring : the "memory consumption for idle connections":

This writeup was a followup to Evan Klitzke's article:

To make the story even more fascinating this "memory consumption" argument was raised in the Golang bug tracker:

For my taste this sounds like introduction of a callback hell, so I'm skeptical. But whatever the outcome, I'm sure the discussion is going to be interesting.

This document doesn't address the question by pushing the multiplexing discussion under the carpet:

But nonetheless, I very much like the idea of only blocking API's being exposed to the user.

While the Unix socket model and CSP has been with us for almost 40 years, they certainly aren't closed subjects. There is plenty of fresh thought in this area: optimizing memory usage, finding right composability abstractions and going back to the idea of exposing purely blocking API's.|||

