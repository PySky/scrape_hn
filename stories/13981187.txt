The other day I noticed something cool in Chrome. I can disable JavaScript and cookies + local storage on HTTP!

To set this up, just navigate to , then , and add as a blocking entry under Cookies and JavaScript.

PoisonTap and attacks like it that can occur on untrusted networks (e.g. hotel, or coffee shop wifi) can be severly handicapped by these settings.

While I can't stop a website sending me cookies while on HTTP, this does prevent me sending them back.

This means that if I log in to https://example.com and recieve cookies securely, my browser will then make sure that does not send any cookies it recieved to http://example.com, even if the cookies were not sent to me with the flag. I.e. this works as if https://example.com had sent me a cookie with the secure flag, even if it did not.

Let's see this in action:

Cookie is sent back over HTTPS

Cookie is not sent over HTTP

In addition to this, if a website sends me cookies over HTTP, Chrome will simply ignore it (prevents poisoning of cookies via dirty HTTP traffic).

JavaScript is great, but it can also be very dangerous if an attacker can inject some. Except, if you visit a site via HTTP, or even request a script over HTTP then an attacker on the network can send whatever they like back and have it execute on the current origin. So using the same method as above, I've banned JavaScript if I can't guarentee the service I'm using sent it to me.

While enabling these things again as soon as a site tells you it needs them really just thwarts the protection, there will certainly be situations where you have no choice ðŸ˜¢. So the next best bet is adding a temporary exeption if we don't feel like we're on a hostile network (at your own risk etc, etc...). Regardless, having a temporary exception is much better than a permanent one.

Let's look at our options:

Hmm... not looking so good. I might forget to delete that later. This might be a better solution though...

If you add the exception in an incognito window, you get a fresh browsing session (JS and cookies don't have access to already existing ones), your session will be cleared on exit (any poisioned cookies, local storage, or cached scripts will be deleted on exit), and the exception will be cleared on exit too:

Since enabling these settings, on most sites I do not see warnings about cookies and javascript being blocked (thankfully many sites are moving to https now). On the sites that I do see the warnings on, well, they can have their toys back when they decide to support HTTPS.

It would be great to see a major browser hint at defaulting to similar settings after a warning period. If websites enjoy using features like scripts, cookies, and local data storage then they should make sure they're using them securely and responsibly.|||

The other day I noticed something cool in Chrome...