I love the font Just Another Hand, I use it a lot in diagrams during my talks:

The thing is, I don't like the positioning of the hyphen & equals glyphs…

They look awkwardly positioned – they sit too high.

Thankfully CSS lets you merge fonts together, so I can create a single font family that's like Just Another Hand, except it takes the hyphen & equals glyphs from a different font, Architects Daughter:

The is defined as usual:

But I added another of the same name for the hyphen & equals glyphs:

The trick is in the descriptor. It indicates that the should only be used for the hyphen ( ) and equals ( ) code points. You can turn a unicode character into a code point using this snippet:

As an optimisation, I used Google fonts' text parameter to subset the "Architects Daughter" font, so it only contains the hyphen & equals glyphs. The woff2 version is 500 bytes – not bad!

And that's it. Now when I use:

…it uses a combination of both fonts!

A couple of people on Twitter and in the comments have suggested you don't need , and you can just do:

This works visually, but it's worse in terms of performance.

In this case the browser downloads the subsetted font first, then it realises it doesn't have all the glyphs it needs, so it starts downloading the main font. The fonts download one after the other.

Whereas with the unicode-range solution, the browser knows what it needs in advance, so it can download the fonts in parallel.

Also, if you don't use one of the subsetted characters, the browser knows it doesn't need to download the font at all!|||

