Any front-end developer in these days knows two things about their job: A build tool can be their best friend, and CSS code could be the worst of their nightmares.

We are familiar with Gulp or Grunt, build tools used to transform assets and prepare them for later. You can create Node.js modules with ES6 syntax and JSX and convert them into a single JavaScript bundle. And behind this magic, we have plugins. To accomplish that task we can use Babel.js, Browserify and Reactify (a Browserify plugin to convert JSX in plain JavaScript), so every problem has its own solution, and this solution works well by its own or together with other solutions, like in this example.

So, if I didn't convince you about the first thing any-front-end-developer-in-these-days-know, I hope I just did it. Now let talk to you about the second thing: CSS code can be our worst nightmare.

Until now, if we want to use advanced CSS features, we'd need to use Sass or Less, or any other preprocessor language. May I create variables, nested rules or mixins? Yes you may, just use another language to do that.

What if you only need to use variables, or only add vendor prefixes to your code, and nothing more? Maybe you need PostCSS.

PostCSS is a tool which transform CSS using JavaScript plugins. Easy as pie. With PostCSS you can use variables, create nested rules and mixins, among other tasks, because PostCSS is modular: There's a plugin for that!

Look at this demo (don't forget to check its beautiful README for more information):

There we use Gulp to create a single task, called  . In this task we use the   package to work with PostCSS inside Gulp. PostCSS' plugins are called processors, and there're a plenty of them. In this demo I use Autoprefixer to automatically add vendor prefixes, and PostCSS CSS Variables, to use variables in the W3C syntax.

Now take a look to  . There is a   property and a background gradient with variables (  and  ). Now look the   file. We went from modern, sparkling CSS code to safe, boring CSS code. Amazing, right?

PostCSS has support for Grunt, Gulp, webpack, Connect/Express and others, beside a CLI tool for the Terminal lovers.

This short list has 10 plugins you definitely will want to use after reading this post.

There are more plugins, and the list is growing! You can work with images and fonts, colors, grids, or create your own plugin.

And that’s a first preview at PostCSS. Why don’t you start playing with it above, right on your browser? Or try Gulp, Browserify, React, Python, Rails, Ruby. You name it we support it.



The first 10 hours are on us. Sign up and start now!

|||

Any front-end developer in these days knows two things about their job: A build tool can be their best friend, and CSS code could be the worst of their nightmares.We are familiar with Gulp or Grunt...