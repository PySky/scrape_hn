One common stack that I’ve been using to build apps is the React + MOBX + YAWP! combo.

In this simple tutorial I’ll show you how to create a reactive API to automatically save products to the server as you type.

The source code of this tutorial can be found here

For this tutorial we will have a very simple API containing a /produts resource endpoint:

Open the created Product.java file and add the name attribute:

Now it is time to create the app logic.

First we create the yawp Product client. Inside the folder web add the following content to the file Product.js:

Now we create a form to edit products. Change the content of the file App.js to be:

Now that everything is done, lets run and check it out.

In one terminal, run the yawp devserver:

In other terminal, run the react devserver:

Your default browser should open the address http://localhost:3000. Just open the network monitor to check the server requests and then start typing at the name input. Just notice that everytime you type a letter the product will be automatically persisted to the server.

As you can see, this is a very simple setup. But it can be extended to construct more complex reactive apps that easily interact with your yawp backend in a very organized way.|||

One common stack that I’ve been using to build apps is the React + MOBX + YAWP! combo.

Why?


  React (web or native) takes care of the UI rendering/update
  MOBX makes my stores reactive to changes
  YAWP! objects integrate nicely with MOBX


In this simple tutorial I’ll show you how to create a reactive API to automatically save
products to the server as you type.