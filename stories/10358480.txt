You know when you have a really long gulpfile how it gets to be impossible to keep track of all your tasks and who requires what and it's just a mess?

Imagine if you could break that up into grouped task files like test.tasks.js and build.tasks.js.

If you'd like that, you're in luck, because that's that Gulp Load Subtasks does!

In its simplest form, gulp-load-subtasks can be passed some directory (dir) and it will find all files matching 'dir/**/*.tasks.js' and load those tasks. Here's that example in code:

You can pass optional additional arguments that will be passed on to all subtask functions, such as a plugin object from gulp-load-plugins.

You can also access from your gulp-load-plugins object!

You can also use gulp-load-subtasks with CoffeeScript and LiveScript!

Just change your require statement to

and it will load or by default instead.|||

A globular loader for gulp subtasks