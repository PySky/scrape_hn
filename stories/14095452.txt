Programming is often characterized in today's world as a shortcut toward a more lucrative career. The rapid propagation of bootcamps and coding schools like General Assembly and Galvanize is predicated largely on the idea that a few months of intense learning can significantly increase your earning potential. The New York Times reported on the phenomenon a few summers ago:

Those that already code for a living don't always consider themselves fairly compensated though. In particular, the majority of respondents to Stack Overflow's yearly developer survey feel like they are either somewhat or greatly underpaid:

Of course, this sentiment isn't exclusive to developers â€” in fact most people, regardless of profession, are under the impression that they're underpaid, as was mentioned during Dev.to's Twitter discussion on the topic:

Payscale, a compensation software company demonstrated in a 2015 study that the majority of employees believe they are underpaid, even if they're paid at market rate:

So there are some general trends baked into the professional experience that make it hard to say anything definitive about the first graph. Luckily, Stack Overflow went deeper in their analysis, so we can try to understand developers' compensation beyond just their own estimations of their worth.

As you'd expect, experience and salary are correlated:

But different roles see faster returns on their experience than others. Machine learning specialists make one of the top salaries out of all developer types, despite having only a few years of programming experience on average. Meanwhile, those that make desktop or embedded apps, who are more likely to have a few more years of experience, earn almost $10,000 less.

Language is also a factor in developers' perception of their compensation. Users of newer, more popular languages like Elixir, Rust, and Clojure more often report being overpaid, while users of more established languages like Visual Basic and PHP more often report being underpaid:

There are a bunch of unseen factors here that probably help explain these graphs, including the age and geography of cohorts separated by language and role. In aggregate though, this portion of the survey demonstrates that not only do many developers feel underpaid, but that the feeling isn't entirely consistent once you dive deeper into exactly what the devs do on a day-to-day basis.

And what about our introductory topic--boot camp attendees? Well they actually are pretty good at predicting how much they'll earn once they graduate:

Clearly this is a topic that can change radically on a case-to-case basis, so please leave your own personal thoughts or experiences in the comments section if you'd like to keep the discussion going.|||

Users of newer, more popular languages like Elixir, Rust, and Clojure more often report being overpaid, while users of more established languages like Visual Basic and PHP more often report being underpaid.