Over the years, I've used 4Dwm, Afterstep, Blackbox, Enlightenment, FVWM, Icewm, KWM, PWM, Sawfish, Window Maker, and wmx, and played with many other window managers. I used Window Maker more than any other, but generally would only stick with one for a couple of months before getting restless and trying something else. Finally, though, I settled on a setup I've used exclusively for over a year. It's decidedly not for everyone, but may be of interest to some.

Here's a screenshot of what I see after I type "startx":

Let's go into what you're not seeing behind this simple facade.

screen has long won my vote for "Most Undercelebrated Unix Tool". I'm amazed at the number of people I've met at LUG meetings who have never heard of it. I'll quote the description of it from our listing:

When you log onto a system and run , a window is created with a shell in it. You can create any number of other windows and switch back-and-forth between them. screen stays out of your way unless you hit its control key (^A by default). "^A c" creates a new window. "^A n" and "^A p" move to the next and previous windows. "^A w" gives a list of the current windows and shows which you're in. "^A 3" moves to the third window, etc. ("^A a" gives a literal "^A".)

This is especially useful if, for example, you need to log onto your university's system and perform multiple tasks there. You can read mail in one window, chat on IRC in another, edit your project in other, compile it in another, etc.

Perhaps the best feature of screen is that it lets you detach and reattach sessions. When it's time to leave home, you can hit "^A d" to detach the session, and log out. All your processes will continue to run. Drive to school, log in, type , and your session will reattach itself, and you can continue right where you left off. Log out and go to class, and reattach there. Go over to a friend's house, and reattach there. You can have your text mode "desktop" running all the time, with everything laid out as you like it, and connect to it from anywhere, as GUI people do with VNC.

You can set your desktop up in your ~/.screenrc so you don't have to start all your applications every time. Mine looks like this:

If I don't already have a screen session running, all I have to do is type , and my 11 windows are created for me. I'm dropped into the first one so I can read my mail while my other apps start in the background, log me onto IRC, etc. Depending on your needs, you could have other windows tailing log files (and monitoring them to alert you to activity (-M)), logging you on to other servers, etc.

screen has a huge feature set. It can log windows to files, can split a session between multiple terminals, will let you copy and paste between windows using only the keyboard, and is rumored to be surprisingly effective against the heartbreak of psoriasis. Just take a look at its man page or info documentation to get an idea of its scope.

Now that you understand screen, we can talk about the window manager which unobtrusively displays itself in the screenshot above, ratpoison. ratpoison is:

As screen handles text windows, ratpoison handles GUI windows. Each window is the same size, the size of the screen. There are no title bars, no minimize buttons, none of the clutter that's needed by a mouse. Mozilla looks like this:

You can do fancier split screens to make several applications visible at once:

, but I don't bother. I want each program to have all the room it can.

ratpoison stays out of the way until you hit its control key (I set it to ^O because "a" and "o" are next to each other in my keyboard layout). "^O w" gives me a list of the current windows. "^O 1" takes me to the first one. "^O ^O" switches me back to the one I used most recently. "^O n" and "^O p" take me to the next and previous ones. "^O k" closes the current window. "^O !" brings up a prompt in which I can type a command to start a program; I find "^O ! cbb" to be much faster than hunting through menus.

As you would expect, ratpoison is lightning fast and perfectly stable.

My main application is a gnome-terminal running screen. I use gnome-terminal because it's easily configured to use good fonts, a bright color scheme, and no scrollbar, menu bar, etc. Looking at it over my shoulder, you'd think I was running at the console instead of in X.

I put as much of my activity as possible into this single gnome-terminal. Often, I'm running nothing but this, Mozilla, and maybe XMMS (which I only use because I'm too lazy to find a console MP3 player which deals well with my lousy fixed-rate sound card).

I do almost everything in console apps. EPIC4 and centericq handle IRC and instant messaging. mutt handles my mail. The amazing w3m is used for most of my freshmeat work, as it's infinitely better-suited than Mozilla for dealing with text on the Web (typing in Mozilla can't compare with the ability to dump text from a textbox into a real editor for processing). Both use XEmacs[1] through gnuclient. gnuclient allows me to call the already-running XEmacs on screen 2 to edit some text. Using the same XEmacs session over and over again leads to several good features. For example, the kill and yank ring continues across sessions. I can kill text from a text box in w3m, switch to mutt, start a message, and yank the text into the message.

Why have I settled into this system, and what benefits do I gain from it? I take advantage of the best of both the X and console worlds. I get the graphical abilities of X without all the clutter that usually attends it, and I can work much more quickly and with less strain on my hands because I don't have to use a mouse.

At any moment, my screen is devoted to only one thing. As I type this, all I see is XEmacs showing this buffer. Since I can only see what I'm working on at this moment, I have to make the choice to go to something else. I can't be distracted by text in an X-Chat window behind this one, or by buddies appearing and disappearing in the Gaim window in the corner. If someone messages me, centericq will play a sound; I don't need to watch IM obsessively. If I'm distracted, it's because my mind is distracted by a thought of something else, not because of a flash of color in the periphery of my vision.

Since there's nothing to tweak, I'm not tempted to endlessly fidget with my windows and reconfigure my window manager, moving this window a bit to the left and that one to desktop two instead of four. I don't get bored with a theme and spend 45 minutes looking for a new one.

Every application takes up the entire screen, and I can use large fonts to reduce eye strain. Mozilla has the full width and height of my screen, and if I have to scroll horizontally, it's the site author's fault, not mine.

When I'm home, I do all my work on my laptop, which runs as an xterminal connected to my more powerful desktop machine. I like being able to move the laptop from place to place. The desktop's monitor is only used for watching DVDs.

Since all my processes are running on the desktop, if something goes wrong with my laptop, I can reattach my session on the desktop and go on working. Since I don't rely exclusively on GUI applications, if something goes wrong that prevents me from running X, if I'm placed in an environment in which I can't run X, or if I want to persist in my untested but heartfelt belief that not running X saves battery life, I can be happy with the console.

When I leave home and run my laptop independently, I use the same X system on it. Before leaving, I turn off mail delivery and run a script that rsyncs /var/www and /home/jeff to the laptop. I detach and go. If, while I'm on the road, I want to check the status of a job I left running at home, I can ssh back and reattach my home session. When I get home again, I turn off mail delivery on the laptop, rsync back to the desktop, reattach the desktop session, and push on.

Given the choice, ratpoison would run forever. I don't worry about my window manager locking up, crashing X, or displaying random strange behavior.

More importantly, it doesn't even matter if X does take a dive. All my applications are still running in screen. I can hit ctrl-alt-bksp, run again, type in gnome-terminal, and the session will reattach. I can go on like nothing happened.

In fact, it doesn't matter if the whole computer shuts down. Sometimes, I don't notice that the cat has knocked the laptop's power cable loose again[2], and suddenly see it suspending to disk. No problem; I bring it back up, reconnect it to the server, and reattach the screen session that's happily continued to run there all the time.

If a tree falls on the server, my processes will go down with it, but I can't help that. There has to be some point of failure, eventually.

I won't call it genuine security that would protect from a malicious attack, but there is an element of obscurity to the system that can protect from a friend who wants to play a practical joke when I walk away. I keep xlock on "^O x", but even if I step away from the keyboard without locking it, someone stepping in tends to be confused by a screen that shows no "close" buttons and a keyboard set to Dvorak.

The desktop metaphor has its place. It may even be essential for people who don't want to understand what's happening beneath their computer's GUI surface. If you do know how to use your computer without pointing and clicking, consider that you have the option to dispense with the metaphor, and may find yourself more productive if you do. You can have the ability to run all the graphical applications you need without the clutter of a root window full of icons hidden under layer upon layer of windows.

This isn't for everyone, even among the digerati. An artist may have a genuine need to have several windows of images in view at once. For someone like myself who works in text, I find it an excellent system. If something like this would be a good fit for you, I hope you've found this description useful.

In closing, I'll admit to a certain impish glee in putting this article in the themes area of our articles section. In a sense, it belongs because it's a description of how I "theme" my desktop. In a more legitimate sense, it should be thrown out because there is no "desktop" in my system, and nothing to theme. Try to troll gently in the comments.

When he's not cracking the whip on the freshmeat staff or trying to figure what contributors are trying to tell him, you'll find jeff covey hanging around http://pobox.com/~jeff.covey/.

We're eager to find people interested in writing articles on software-related topics. We're flexible on length, style, and topic, so long as you know what you're talking about and back up your opinions with facts. Anyone who writes an article gets a t-shirt from ThinkGeek in addition to 15 minutes of fame. If you think you'd like to try your hand at it, let jeff.covey@freshmeat.net know what you'd like to write about.

[ ] Not for everyone, but...



After reading about this setup, I was intrigued enough to give it a try for myself. Overall I think it's a good option if you work primarily with console applications (although in that case, why you'd want to use X at all is something of an open question) or if you like to have your apps full-screen.

 

 There are a few things about ratpoison that I don't particularly care for, unfortunately. One is that EVERY window that can be resized, is automatically set to full-screen - even transient ones such as GTK file selectors. The GIMP is rendered all but unusuable, because you have to switch to the full-screen toolbox (which looks as awkward as it sounds). And even applications that can normally be moved without need of a window manager's titlebar, such as XMMS, are forever stuck dead-center in the screen.

 

 On the other hand, if you don't normally use GUI apps such as these, this setup can be just the no-frills desktop you're looking for. The combination of screen, ratpoison, and gnome-terminal gives the console fan the economy sized, mouse-enabled workspace he or she has been craving, without having to dicker with messy SVGATextMode and gpm configurations. And since it is running under X, it isn't necessary to sacrifice the ability to use GUI apps when the need or mood strikes. In that respect, it's a best-of-both-worlds approach.

 

 Although I'm typing this right now using Galeon, most of my work in this setup is done using the console apps running under screen. I use mutt for mail reading, jstar for text editing (I'm *really* getting to love the WordStar command set!), epic4 for IRC chatting, links for browsing (though I'm thinking of trying w3m just to see what the fuss is about), TinyMUCK for those rare times when my travels take me to MU* territory, mpg123 for tunes, slrn for Usenet, and sc (a nice console spreadsheet program) for various mathematical chores. Graphically, Galeon is my GUI browser of choice, and I also use OpenOffice, gqview, pan, and evolution for various purposes - all of which work very well as fullscreen apps. However, when I have to use something like The GIMP, it's back into Fluxbox I go; the way ratpoison handles GIMPing is just plain not for me.

 

 This combination certainly isn't for everyone, but if you find yourself using xterms more often than not for certain tasks, you may find it a fun change of pace. I consider myself a confirmed "GUI junkie," but this setup may convert me to the Dark Side yet... ;^)

I never knew so many people thought the same way as I do about desktops until reading this article and its comments! screen sounds like a must-have app. 

 

 My current setup eschews X altogether. I use svgatextmode to set my text-mode linux console to be 180 lines by 80 columns. And I modify inittab to spawn 15 terminals. 

 

 At that point ALT-F1 to ALT-F12 switch quickly between all my terminals. I also use ALT-left and ALT-right to get to 13-15 (which are used for less-often accessed apps).

 

 w3m for web browsing, groovycd for cd's and splay for mp3's (mpg123 has problems with some mp3's). emacs for editing. mutella for gnutella p2p. lftp for ftp.

 

 copy-and-paste is handled with gpm.

 

 I've had the same experience of switching from desktop to desktop, with WindowMaker and BlackBox being the most favored. But I'd say this configuration has been my most productive.



Hi..

 

 I read this Parg:

 

 "Since all my processes are running on the desktop, if something goes wrong with my laptop, I can reattach my session on the desktop and go on working. Since I don't rely exclusively on GUI applications, if something goes wrong that prevents me from running X, if I'm placed in an environment in which I can't run X, or if I want to persist in my untested but heartfelt belief that not running X saves battery life, I can be happy with the console." 

 

 but I don't think Ratpoison can do this.... as something else, like 'xmove', is required. Please correct me if I'm wrong.

 

 -Mike

 GNU Screen user since '98



[ ] One size does not fit all



ratpoison looks like a neat toy... and if, like the author of this article, you're mostly running non-gui apps, it's fine

 

 i love screen and have used it for many years, but i would never limit myself to it's capabilities. ratpoison sounds like screen with a little extra gui, and for me that's just not nearly enough.

 

 allow me to sing the praises of other, more full featured window managers and gui apps..

 

 first, i like having gui apps opened on the screen at the same time, and seeing them all... for example, i use gkrellm, which gives me cpu/disk/net stats at a glance (no keystrokes necessary)... my volume widget is there, as are my most frequently used apps in a button bar... as with ratpoison, there\'s no need to hunt through menus to get at any of these functions, but there\'s also no need to type any commands whatsoever... they're all just a click away

 

 having a pager on the screen also makes it obvious which apps are where, which is a great improvement on the screen convention of cycling through screens to get to your app, or having to use cumbersome naming and keystroke combinations... screen is all fine and good for a few apps, but when you exceed that number it starts to get a bit unwieldy... which is one of the reasons i also have a couple of terminals open... most of my work is done in the normal, green, user terminal... with the red terminal reserved for root actions. i have no need for these terminals to be the width of my full 1600x1200 screen... i'd rather use the extra real estate to have two or more apps on the screen at the same time, which usually means gvim + 2 terminals (and the gkrellm, buttonbar, volume, pager and icon box which are sticky on each screen, but those take up minimum real estate)

 

 opera takes up nearly a full window, just as you have with ratpoison, as i like to use tabs instead of free-floating windows, but i don't give up the rest of my windowing features to do this

 

 in short, ratpoison may be alright as a lightweight window manager, but it comes up lacking for a power user... now vnc seems to be a much better screen compliment, as it allows you to detach and reattach your window session just as you do with screen itself... and i might just be taking a look at it or tight vnc next

There's also evilwm which, for some, may well be that 1-pixel border no-nonsense keyboard-controlled wm you are looking for.

I don't know why Ciaran called it evilwm. He should have called it goodwm. :)

what is it with all these "minimalist" window managers that 

 aren't any different from other windowmanagers? Ratpoison 

 is the closest I've seen to what I would want, but i don't want 

 to actually lose the ability to use multiple windows at the 

 same time and place them where I want. I just want to lose all 

 the extraneous bs that every wm these days insists on 

 plastering all over the screen. Title bars, 3d animated borders 

 to drag, and on and on. All I want is a modern 

 windowmanager that supports modern features like gnome 

 and kde but has a theme that's close to my current twm 

 setup. No title bars, 1 pixel borders that I can drag to move 

 or resize. Even the minimalist themes for e, sawfish, etc, all 

 seem to be nothing more than playing with colours and 

 background tiles and not actually rethinking whether all this 

 crud is really necessary.



 I've been running most of my world inside

 screen for a few years now. Even with

 its warts, the advantages are a win.

 

 Generally I have two windows: a screen 

 terminal and a tabbed browser. Sometimes

 I forego the graphical browser and use

 lynx instead. With emacs, pine, mutt, etc

 one hardly needs a heavy GUI for most daily

 tasks.

 

 Ratpoison looks like it deserves some 

 consideration. It seems no matter how fast

 of a system I get the latest KDE/Gnome install

 is there to make startup run slower than my

 previous CPU.



My monitor looks like yours a lot of the time because I run Konsole with mutliple terminals, running full-screen. I love the shift-left-arrow/shift-right-arrow keys for switching, and can set custom backgrounds, etc. Of course this lacks screen's session-handling functionality, so I am going to investigate that. I hope the keys can be reconfigured, though. I don't want to learn yet another set of keys for switching contexts.

I just discovered ratpoison some days ago, and I'm very happy with it.

 I have some screenshots (if the server is down try again later).This one shows no windows (root-tail is running thought). This one is a split screen, but just to show off; most of the time I just run everything maximized.

 

 See also micq. I loved it too, and a line

 receivescript ratpoison -c "echo incoming icq message"<br / > works like a charm.



not tried ratpoison but true enough:

 

 --> screen rocks <--

 

 live your life in a shell 

 

 (btw, i'm currently using phpwebhosting.com for my shell = highly recommended).

 

 good article!

 



[ ] Thanks for the write-up! Dream setup :)



Wow, you're running my dream setup.

 

 I've been moving towards this for a while; am running most of my apps inside screen, and have been procrastinating trying out ratpoison for about a month now. This write-up does it for me, I'm switching to ratpoison this week! 

 

 Thanks!

 -at

Minimalistic approach is cool, but unfortuantely is not suitable for many activities, for example GUI software development :) Also this particualr article is not a very good illustration of minimalizm, taking on accound the number and size of buttons in mozilla and xmms. Get rid of them all!

 

 No Distraction is dubious advantage of above approach, since when IRC and IM are hidden, one tend to drop out of conversation, miss important ppl, etc. Sound indication does not help, since you tend to ignore them, burried in your current activity. When window is always present on the side of screen, its much easier to stay in sync. Not so when you burry it under other windows or even move it on the second head. Also, ditching computers entirely and going with paper is the only effective way to avoid distraction :)

 

 GUI is not supposed to be simple. It was created mainly to fit as many things as possible on screen. If you start going about having single app on screen at a time, you could just as well stay in text mode. 

 

 Consider this: You have lots of gauges on your car's dashboard. Having single app on screen at a time would be similar to having only one gauge on your dashboard at a time.

 

 Now about not having to mess around with config and themes. If you'd move to a barrell, you would not have to worry about decorating your living room.

 

 Most non-minimalistic window managers are complex due to the fact that they attempt to give user flexibility to make interface as convinient as possible - not to put lots of bloat on screen. Most of them features come from real needs of real users, and ditching them on the side, would mean ditching many years of GUI evolution and painfull efforts to make computers as convinient and easy to use as possible.



%You don't get it this guy is tired of IM and BS internet "friends" when your working no distractions is a PLUS. 

> Minimalistic approach is cool, but 

> unfortuantely is not suitable for many 

> activities, for example GUI software 

> development :) Also this particualr 

> article is not a very good illustration 

> of minimalizm, taking on accound the 

> number and size of buttons in mozilla 

> and xmms. Get rid of them all! 

> 

> No Distraction is dubious advantage of 

> above approach, since when IRC and IM 

> are hidden, one tend to drop out of 

> conversation, miss important ppl, etc. 

> Sound indication does not help, since 

> you tend to ignore them, burried in your 

> current activity. When window is always 

> present on the side of screen, its much 

> easier to stay in sync. Not so when you 

> burry it under other windows or even 

> move it on the second head. Also, 

> ditching computers entirely and going 

> with paper is the only effective way to 

> avoid distraction :) 

> 

> GUI is not supposed to be simple. It was 

> created mainly to fit as many things as 

> possible on screen. If you start going 

> about having single app on screen at a 

> time, you could just as well stay in 

> text mode. 

> 

> Consider this: You have lots of gauges 

> on your car's dashboard. Having single 

> app on screen at a time would be similar 

> to having only one gauge on your 

> dashboard at a time. 

> 

> Now about not having to mess around with 

> config and themes. If you'd move to a 

> barrell, you would not have to worry 

> about decorating your living room. 

> 

> Most non-minimalistic window managers 

> are complex due to the fact that they 

> attempt to give user flexibility to make 

> interface as convinient as possible - 

> not to put lots of bloat on screen. Most 

> of them features come from real needs 

> of real users, and ditching them on the 

> side, would mean ditching many years of 

> GUI evolution and painfull efforts to 

> make computers as convinient and easy to 

> use as possible. 

> 

 

 Consider this: You have lots of gauges on your car's dashboard. Having single app on screen at a time would be similar to having only one gauge on your dashboard at a time. 

 

 I have owned several cars with a single gauge. My first VW didn't even have a fuel level indicator, which presented no problems in practice - I never ran out of gas once, thanks to the UI design of the vehicle. The Prius gas/electric hybrid I drive now has an LCD screen in the dash, and displays almost all information in a "gauge at a time" mode (exceptions are fuel and speed, but I wouldn't mind if these also had to be selected for viewing).

 

 Your criticisms of the original post are based on your own aesthetics, which is fine as long as you realize that they are not universal. What is "good" for you is not "good" to me - and I do *not* want any sort of pop-ups or IRC junk on my desk, ever!

 

 The screen/ratpoison combination is not really about minimalism in an artistic or aesthetic sense, it's about minimalism in a functional or architectural sense. So stripping buttons out of Mozilla, for instance, is probably not something the author would want to spend time on.



Ratpoision seems TOO minimalistic. I do everything you do, except with a gnome/sawfish combination. I set up virtual desktops with four terminals side-by-side so I can see several processes going at once, and I still have room to fit in everybuddy and xmms w/ playlist. Having a full screen for something like everybuddy seems rather absurd to me. The only thing I want to run fullscreen is galeon, which I do. I have windowmaker style key bindings to switch between virtual desktops, plus alt+tab bound so I can pretty do whatever I want fast enough. Ratpoison seems less powerful and more like a burden to me.

Minimalistic approach is cool. And also helps to stay sharp. The only thing I don't like about "minimalistic" window managers is that most of the time they come with Emacs like key bindings (I guess, following screen) which for some people (i.g. me) are quite cumbersome.

 

 On the other hand fancy titlebars and borders plus nice backgrounds are cool too. Sometimes.

 

 Anyway. Thank you very much for this article.

I've been running into problems using centericq w/ screen. Every now and then centericq seems to send some bogus escape codes that puts screen into a high-bit mode. I have to ^L in centericq to fix it. Anyone else run in to this?

From the start of the article, I hoped it would answer my dearest question, but in the end it did not. So here it is, maybe someone knows the answer:

 

 screen is a great tool for the terminal. But is there a similar tool for X - i.e., one that would let detach from an X session and reattach later, even if on a different host? Ideally, it should also be possible to have multiple X terminals attached to a single X session at the same time. Multiplexing multiple X sessions on one physical terminal would be just icing on the cake.

 

 I've had several people suggest VNC when I asked this question before, but everytime I tried, VNC was much too slow for regular work even on a dedicated LAN. I guess grabbing and transferring screen rectangle bitmaps just can't beat (or even match) the native X protocol.

 

 Come on, it can't be that hard! I don't know the X protocol (I guess I should have a look - anyone have a URL handy?), but I suppose that most of the time, it would be nothing but forwarding the connection - sort of a proxy server. Of course, there's the problem of reconnecting the clients back to the new server - replay any initialization, redraw the windows... And one would have to simulate the server's presence all the time so that the clients don't die. And you can't currently change the resolution and color depth on the fly, so they would have to match. And a number of other problems, sure. But I'm sure it can be done! Am I the only one who longs for this?



I find it great that you introduced screen to some people out there who didn't know it existed. After trying most setups as well, I am generally now running icewm with aterm, in which I run screen. In various screens I run vim (coding alot), epic4, lynx, links and mutt. The yamm icewm theme seems to be the one I'm using the most. I also keep a few sh screen windows, one usually uid 0... What is great about this setup is that although it looks better in X, it works as efficiently when it is not available, and remotely as well.

Screen is great, no doubt, and ratpoison is nice, too, but my favourite setup is amiwm with two high-res monitors in a multihead setup. I usually keep a browser open on the right screen, and a couple of xterms on the left one; up to 6 fit on the screen without any overlap at all, and there still is enough space for gkrellm, gqmpeg and a few other tools; everything else I use usually runs in an xterm, anyway.

 

 Once you get used to amiwm's look and feel, this is really a great setup, and I cannot recommend it enough to anyone who wants a fast and lean wm and a desktop where you can keep all things that matter visible at once - something I have found to be a huge advantage in day-to-day work.



Thanks for the reminder, I had'nt used screen in a while and youve just reminded how damned handy it was, for anyone stuck on a large shared system at a uni screen can be a real godsend. You can use it to solve all kinds of problems aswell, iirc it has some stuff for sharing consoles with other people, and the detach feature is truly great (it was very handy for running dedicated quake server). Its nice to see that they have the splitvt stuff built in now too.

 

 Great article, incidentally for those of you, like me, who arent so hot with remeber keyboard shortcuts.... ctrl-a ? is your friend.

I tried using screen in the past and it was nice. I liked it a lot, but I found something that sort of falls between X and using screen and that is twin. Twin is a console window manager but more along the lines of X window managers than screen. Look it up here on Freshmeat. I have mutt running as a rolled up window checking my e-mail, centericq, elinks (enhanced links which is even better), BitchX running in another for IRC and a few others. I might do something along these lines once I have X installed on a decent computer though.

I like this alot, but probably would/will never use a 

 setup like this. BTW... what's that XMMS skin? 

 :P

[ ] I've been looking for something like this



Thanks for the article Jeff. I have been looking for something like this for a long time; I used Blackbox for a while but didn't find it "minimalist" enough.

 

 Thanks again

 

 p.s. Links puts w3m to shame :)

Think I might try it seeing as I've been using multi-gnome-terminal, which is similar in functionality in that you can have multiple windows in a window, except that it is in a windowed (not necessarily desktopped) environment. I do get distracted by all the different themes out there although I hardly try any of them. 

 



Hey, what a nice article! I've done the same, trying tons of various window managers, currently using massively reconfigured mwm... i'll try ratpoison and teh others someone suggested in comment #3, asap.

 

 Anyway, my No.1 problem with X that there are no working xterm alternatives. I like to use key combos like ctrl+pgdown, shift+F7 etc. and having working DEL and Backspace not even mentioning Ctrl+HOME/END. While on console they work as expected (using RAW mode keyboard access) they don't in xterm and other clones i've tried.

 Actually teh ermcap system don't even allow to define these keys, so it isn't a bug of these *term apps but the architecture in general.

 

 The other problem is cut'n'paste between console and X apps...



I love the applets! Those had to be one of the coolest ideas ever!

 

 I still have one problem, terminals! I have a button in the bar that launches a terminal, so, since most of the time i'm lazy and i dont want to search for a terminal I go and push the button to get me a fresh terminal. This is great, until i see that i have 20 terminals alltogether and i have to start choosing which ones should be closed. Anyone has any idea on how to overcome this? I also dont like programs like powershell because i usually close the window instead of closing a tab.

 

 reduz



> I still have one problem, terminals! I 

> have a button in the bar that launches a 

> terminal, so, since most of the time i'm 

> lazy and i dont want to search for a 

> terminal I go and push the button to get 

> me a fresh terminal. This is great, 

> until i see that i have 20 terminals 

> alltogether and i have to start choosing 

> which ones should be closed. Anyone has 

> any idea on how to overcome this? 

 

 Simply get in the habit of hitting Ctrl-D after you 

 run your commands, instead of switching back to 

 your graphical apps. -- 

I didn't want to hurt you, but you're pretty when you cry 

> I love the applets! Those had to be one 

> of the coolest ideas ever! 

> 

> I still have one problem, terminals! I 

> have a button in the bar that launches a 

> terminal, so, since most of the time i'm 

> lazy and i dont want to search for a 

> terminal I go and push the button to get 

> me a fresh terminal. This is great, 

> until i see that i have 20 terminals 

> alltogether and i have to start choosing 

> which ones should be closed. Anyone has 

> any idea on how to overcome this? I also 

> dont like programs like powershell 

> because i usually close the window 

> instead of closing a tab. 

> 

> reduz 

 

 Just use the multi-gnome-terminal (http://multignometerm.sourceforge.net/index.shtml)

 

 It's basically like tabbed browsing only for consoles. Which btw is a real time saver both on the web and in the consoles. 

> 

 

> I still have one problem, terminals! I

 

> have a button in the bar that launches a

 

> terminal, so, since most of the time i'm

 

> lazy and i dont want to search for a

 

> terminal I go and push the button to get

 

> me a fresh terminal. This is great,

 

> until i see that i have 20 terminals

 

> alltogether and i have to start choosing

 

> which ones should be closed. Anyone has

 

> any idea on how to overcome this? I also

 

> dont like programs like powershell

 

> because i usually close the window

 

> instead of closing a tab.

 

> 

 

> reduz

 

 

 

 screen is your friend, only a single terminal window is required. 

> I love the applets! Those had to be one 

> of the coolest ideas ever! 

> 

> I still have one problem, terminals! I 

> have a button in the bar that launches a 

> terminal, so, since most of the time i'm 

> lazy and i dont want to search for a 

> terminal I go and push the button to get 

> me a fresh terminal. This is great, 

> until i see that i have 20 terminals 

> alltogether and i have to start choosing 

> which ones should be closed. Anyone has 

> any idea on how to overcome this? I also 

> dont like programs like powershell 

> because i usually close the window 

> instead of closing a tab. 

> 

> reduz 

 Use MGT (multi-gnome-terminal). It has tabs, you can assign commands to them (ssh, su, ...) or split them; and you also have a setting to ask you if you really want to close the window. That saved me a couple of times, because I was so used to having many terms open I always closed it without remembering the other thousand tabs. 

> I love the applets! Those had to be one 

> of the coolest ideas ever! 

> 

> I still have one problem, terminals! I 

> have a button in the bar that launches a 

> terminal, so, since most of the time i'm 

> lazy and i dont want to search for a 

> terminal I go and push the button to get 

> me a fresh terminal. This is great, 

> until i see that i have 20 terminals 

> alltogether and i have to start choosing 

> which ones should be closed. Anyone has 

> any idea on how to overcome this? I also 

> dont like programs like powershell 

> because i usually close the window 

> instead of closing a tab. 

> 

> reduz 

 

 Heh, that's very easy, code on the terminal ;-) Just bind the closing button to a proc that closes the tab rather than the window, I know it's not very hard to do this in TK, but I don't know about gnome. That's what opensource is for ;-) If you are using gnome: Try add the "Run button" ou the Mini-Commander applet to the panel. 

> This is great, until i see that i have 20 terminals 

> alltogether and i have to start choosing 

> which ones should be closed. Anyone has 

> any idea on how to overcome this? 

 

if you use bash, add to your .bashrc a: 

export TMOUT=300 

 

this will cause bash to quit after 5 minutes if you dont use it (and close the term windows too i guess).... 

 

i hope this helps 

http://freddo.netfirms.com/

Hey Jeff,

 Your setup sounds quite familiar to mine, however I have xterm configured with a massive scroll buffer and no scrollbars (as opposed to memory hog gnome-terminal).

 

 Most of my stuff is done in the console too, with one exception - vim. gvim built to use GTK, with all it's scrollbars and menus, etc. removed is a really neat editor. Add a few bindings and you have transparent X11<->vim cut-and-paste.

 

 I've run out of steam before finishing this comment. Oh well :). My vim configs (and others) can be found at <http://botanicus.net/dw/conf.html>.

I run debugging computational jobs on ~10 dual procs (production is on a larger cluster) so I have a screen session running on each with two terms. Then I have one overall screen which has email etc and contains all of the sessions on the remote machines. I have uptimes as long as the machines ~6 months -- reattaching from home and the office, on holiday etc. With a large history I can look back at the output from all my jobs for the last couple of weeks and with its status-line monitors I can ensure the load average on all the machines stays close to 2.0.

 

 Screen is my effective screen manager. I run emacs (windowless) editting my code and can go home and return to the exact same spot with my kill ring and last modifications intact.

 

 Q.

Ion is like ratpoison, but more useful and less extreme. Ratpoison may be great if you have a small monitor or good memory but I, at least, prefer to use multiplex my applications spatially as well as temporally.

If even Ion is too weird for you, consider PWM, by the same author.|||

freshmeat maintains the Web's largest index of Unix and cross-platform open source software. Thousands of applications are meticulously cataloged in the freshmeat database, and links to new code are added daily.