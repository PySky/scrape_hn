Clearly, people are divided on the subject.

Yet, anecdotally, I would say my peers lean yes. Atleast, whenever Iâ€™ve talked to friends about my plans to build a SaaS as a non-programmer with no fundingâ€Šâ€”â€Šthese entrepreneurs, designers, and developersâ€Šâ€”â€Šhave NEVER raised the question of whether itâ€™s possible.

They all skip to execution and discuss how to make it work. None have stopped me to question whether I, a guy with rudamentary programming knowledge, would be able to build a software product at all.

Sure, some have told me my ideas were plain bad. And usually they were right (shoutout Brian Casel, Justin McGill, and Greg Hickman ðŸ˜‚). But they never questioned whether building a SaaS from my position was possible.

My approach in the past has been to create custom software using a mixture of freelance developers, trading design work for development work with a buddy, and trying to learn to code what I need myself.

But itâ€™s been extremely challenging. Even when Iâ€™ve hired and paid for a freelance developerâ€™s time, getting something across the finish line is never a gaurantee.

On the few occasions when I have shipped something to the world, maintenance and support on it without an on-call developer is a horrible thing.

And overall itâ€™s been excruciatingly slowâ€Šâ€”â€Šparticularly when Iâ€™ve tried to learn/code myself. So slow it feels unprofitable.

Another option (shared by Spencer Fry, whoâ€™s built successful SaaSâ€™s) is to give equity in the project to a developer:

Thatâ€™s an interesting option because it gives you leverage in addressing the toughest part about shipping software when youâ€™re not a programmer:

Getting a developer to give a shit about your money-less project when they clearly have other priorities and opportunities.

But who wants to be the guy promising *equity*?

My best results have come when Iâ€™ve avoided building custom software altogether for as long as possible. Instead of racing to build something, I launched my most successful project with no custom code and it stayed that way for years.

I actively avoided creating anything from scratchâ€Šâ€”â€Šand instead searched for workarounds like duct-taping existing apps together to do some semblance of what I wantedâ€Šâ€”â€Šall without custom code.

(Sidenote: Iâ€™ve since built a custom rails app for it which has helped me in a lot of waysâ€Šâ€”â€Šand complicated things in others).

This approach let me iterate and build on my ideas without the slow and painful death of custom-built SaaS Iâ€™ve been experiencing lately.

It makes me wonder: man, why did I get away from that in the first place? And why does it seem like everyone else does too?

What do you think? Is it possible for a non-programmer to bootstrap a SaaS alone? If so, what am I missing?|||

Results from a Twitter poll with a mixed response. Plus, a discussion on the challenges of building an app alone when you donâ€™t know how to code.