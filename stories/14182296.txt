Web performance is something I care deeply about both as a developer whose work affects millions of people around the world, and as a user who often accesses the web on slow & unreliable connections. I have regularly and loudly complained that the BBC News website is unnecessarily slow, so when I was given the opportunity to help rebuild one of the most visited pages of BBC News â€”the front pageâ€” I jumped at the chance.

That was April 2016. Now, a whole year later, weâ€™re ready to begin a phased rollout of the new front page. Starting with a small percentage of users in the UK, we will gradually move everybody to the new front page over the course of several weeks. If youâ€™re eager to see it before the rollout is complete, it is available at www.bbc.co.uk/news/0.

The version of the front page weâ€™re rolling out is an MVP, a phase one. We will be changing it considerably over the next several months. Hereâ€™s an idea of what you can expect to see:

While we have managed to improve the performance of the front page considerably, there is still a lot of work to do:

In order to ship the new front page sooner, we made a lot of compromises with both the UX and editorial teams around the design of the page. Once weâ€™re finished with the rollout, we will be improving the visual treatment of story cards (promos) to highlight different types of content.

We decided early on in the project that using React in the browser was overkill for a page that is predominantly static text and images. The performance impact of bundling so much JavaScript and executing it in the browser is also unacceptably high: Even making use of server-side rendering, emulated mobile devices spend nearly 4 times as long executing scripts and performing layouts & paints when React was run on the page.

Our current approach to running JavaScript in the browser is to build a good olâ€™ fashioned bundle, completely separate from the React components. However, we realise that this isnâ€™t going to scale for very long, and that eventually we will have to find a way to run our React components in the browser without impacting the user experience. Solutions that weâ€™re looking into include:

Firstly, to everybody involved: thank you. Rarely have I had the chance to work with so many talented, patient, dedicated, and caring people. From documentation tweaks to requirements gathering, from bug fixes to building entire components; regardless of the size of your contribution, we wouldnâ€™t have reached this point without you. So again: thank you, and congratulations on reaching this milestone.

To the design team and editorial staff: thank you for helping us find a balance between perfection and a fast launch.

To the project managers, business analysts, and product owners: I donâ€™t think you get enough credit. Thank you for working extraordinarily hard to smooth out all of the bumps in this project, and for providing the development team with a clear path.

And finally, to my team: You are amazing. Iâ€™m so proud of what weâ€™ve built together. On a more personal level, youâ€™ve made coming into work feel like coming home to a second family, and Iâ€™m eternally grateful for that. The donuts are on me ðŸ’œ.|||

Web performance is something I care deeply about both as a developer whose work affects millions of people around the world, and as a user who often accesses the web on slow & unreliable connections. I have regularly and loudly complained that...