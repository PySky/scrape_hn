In this post I wish to list what I see as the two major industry standards for programming shops. Sure, there’s more, but if you’re a software engineer you probably work in one of the two kinds of environments listed here. I won’t insult either side, just give my take of the divide. This may be the starting place for some feature posts where I link back to.

As far as I know, and have seen in the industry, small to mid size companies tend to use one kind of stack. Fairly commonly for a back-end you’ll see C# as the major language. This is (usually) written in a licensed copy of Visual Studios, checked in to Github (previously was a licensed Microsoft version control system), with a Microsoft Sql dbms. For a web server you’ll use some version of ASP, and some kind of Microsoft suggested front end. You’ll probably buy in to all of the licensed Microsoft products. You’ll use a Microsoft Operating System.

Microsoft makes some excellent products, that are well designed and tested. Over the years they’ve even open sourced most of it. Visual Studios make coding very simple with intuitive package management systems, self writing boiler-plate code, and tons of performance managers to look at. It is a streamlined system to get things done, and a great tool for many companies.

Now, howabout the other companies. That is, small companies that don’t wish to pay for the Microsoft licensing fees, small companies that have that “hate the industry” ethos, or large programming-centric companies where that fee becomes unacceptable. Typically, where C# would be the native language, they go with Java (or C++). For an IDE they may use Jet-Brains (an excellent IDE), or Eclipse (great user community). Maybe they even use Vim or Emacs (with extensions like ycmd for C++). Where ASP once stood maybe nginx or node. They will typically run on Linux machines (with developers using trendy Macbooks).

So, why do I care? I’ve worked for both kinds, and both kinds tend to have different ethos, stem from different cultures, and take to different thoughts. Let me list what I think, and please feel free to comment:

So, what is my suggestion? I can only tell you what I would choose. If I were to start a company, I’d go with either Java or C++, the price you pay for the Microsoft ecosystem is too high. It’s too confining, and there’s to many choices you can make if you stay away. It’s a great ecosystem for business minded companies, it really is,  but it’s not where I would go.

There are still many different languages then what I’ve listed (I’m a Lisp hacker!). There’s many different IDE’s. I never even covered front end systems, but to be honest I’m just not interested in front end systems (also, from what I hear it’s fairly determined by what side of the political divide your on.)

As always, please discuss in the comments below.|||

In this post I wish to list what I see as the two major industry standards for programming shops. Sure, there's more, but if you're a software engineer you probably work in one of the two kinds of environments listed here. I won't insult either side, just give my take of the divide. This may…