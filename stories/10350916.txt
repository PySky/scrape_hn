The obvious question is how does it stack? It's different in three ways - scaling approach , extensions and layers. While I've covered performance (and will continue to do so) in past posts about metrics, the tangible features come first. With layers you can trace what's going onthe query resolution and react upon it (e.g. RBL, metrics). You can create and remove layers ad-hoc from console, in the configuration or in modules. So only the core stuff is built-in, and scripted extensions are partially sandboxed without sacrificing performance . The API is rich enough to use it for anything from policies trust anchor management. That makes Knot DNS Recursive great as afor a custom recursive DNS service, such as consented ad filtering, encrypting endpoint, or even a distributed object storage. It's the OpenResty of DNS, and I'm quite excited about what it's going to power.|||

DNSSEC - RFC7646 NTA - RFC5011 TA updates