# Excluded directories # # Ensure that you have the latest file from the excludes.cfg URL above. # # - add directories you want to exclude from the scan # - double escape back slashes # - values are case-insensitive # - remember to use back slashes on Windows and slashes on Linux / Unix / OSX # - each line contains a regex that matches somewhere in the full path (case insensitive) # e.g.: # Regex: \\System32\\ # Matches C:\Windows\System32\cmd.exe # # Regex: /var/log/[^/]+\.log # Matches: /var/log/test.log # Not Matches: /var/log/test.gz # # Useful examples (google "antivirus exclusion recommendations" to find more) \\Ntfrs\\ \\Ntds\\ \\EDB[^\.]+\.log Sysvol\\Staging\\Nntfrs_cmp \\System Volume Information\\DFSR

Now that we have the default files out of the way we can create the Loki-specific configuration files. First is the inputs.conf file that runs the script that executes the loki.exe binary and reads the loki scan results.

# This is where you would place your signature update script if you created it: # [script://$SPLUNK_HOME\etc\apps\loki\bin\signature-base\threatintel\updateintel.bat] # disabled = true # index = main # interval = 30 1 * * * # sourcetype = lokirun # This entry runs the loki batch script and sends the script output to a null index. # I could not get loki.exe's output to be ingested by Splunk when running it from this script, # so I routed loki.exe's output to the $SPLUNK_HOME\...\loki.log in the next stanza. [script://$SPLUNK_HOME\etc\apps\Splunk_App_loki\bin\loki.bat] disabled = false index = main interval = 0 0 2 * * ? sourcetype = lokirun queueSize = 50MB # The loki.bat batch script will save the loki.exe output to $SPLUNK_HOME\var\log\loki.log, and this reads it. [monitor://$SPLUNK_HOME\var\log\splunk\loki.log] disabled = false index = loki sourcetype = loki

$SPLUNK_HOME\etc\deployment_apps\Splunk_App_loki\bin\loki.bat

 This script moves its current working directory to the location of the script, overwrites loki.log to ensure that it doesn't grow endlessly and runs loki.exe. "..\..\..\..\var\log\splunk\" saves the output log in Splunk's log directory.

 

 

 $SPLUNK_HOME\etc\deployment_apps\Splunk_App_loki\default\props.conf

 A little on Props.conf - it is commonly used for:

 Override source type matching for data from a particular source; And so on... Props.conf is an integral part of a Splunk app, and I recommend that you read the props.conf description in the URL above if you're not familiar with it. 

 The following files are the configuration files used by the Splunk Search Head to parse the Loki log files. The Loki log files are supposed to be CSV format, but only the first half of the values are, which required me to be creative when parsing the event logs. Props.conf will parse the first half of the properly CSV separated log, and transforms.conf parses the rest of the line.A little on Props.conf - it is commonly used for: # This is for data that we don't want ingested to Splunk [lokirun] DATETIME_CONFIG = CURRENT LINE_BREAKER = ([\r

]+) SHOULD_LINEMERGE = false disabled = 0 TRANSFORMS-null= setnull #This entry parses the loki.exe "CSV" output [loki] TIME_PREFIX = ^ TIME_FORMAT = %Y%m%dT%H:%M:%SZ MAX_TIMESTAMP_LOOKAHEAD = 25 DATETIME_CONFIG = CURRENT LINE_BREAKER = ([\r

]+) SHOULD_LINEMERGE = false disabled = 0 # Example Log: 20170219T15:46:53Z,WIN-8J1HPPNE2HB,ALERT,FILE: C:\Users\x\Downloads\FlokiBot\64a23908ade4bbf2a7c4aa31be3cff24 SCORE: 100 TYPE: EXE SIZE: 400896 FIRST_BYTES: 4d5a90000300000004000000ffff0000b8000000 / MZ MD5: 64a23908ade4bbf2a7c4aa31be3cff24 SHA1: 2f87c2ce9ae1b741ac5477e9f8b786716b94afc5 SHA256: a4a810eebd2fae1d088ee62af725e39717ead68140c4c5104605465319203d5e CREATED: Tue Feb 07 13:45:11 2017 MODIFIED: Tue Feb 07 07:37:00 2017 ACCESSED: Tue Feb 07 13:45:11 2017REASON_1: Malware Hash TYPE: MD5 HASH: 64a23908ade4bbf2a7c4aa31be3cff24 SUBSCORE: 100 DESC: Flokibot Invades PoS: Trouble in Brazil https://www.arbornetworks.com/blog/asert/flokibot-invades-pos-trouble-brazil/ # EXTRACT-00-HEADER extracts the properly CSV values at the start of the log, and the REPORT-00-KEYVALUES transforms.conf entry parses the rest of the line. EXTRACT-00-HEADER = ^(?<DATE>\d+)T(?<TIME>\d+:\d+:\d+)Z,(?<HOSTNAME>[^,]+),(?<SEVERITY>[^,]+), # REPORT-00-KEYVALUES is responsible for parsing the remaining portion of the Loki event log not parsed by EXTRACT-00-HEADER. transforms.conf is good at parsing repeating values (such as "x=y" * z patterns), which is how Loki outputs its scan results. REPORT-00-KEYVALUES = trans_keyvalues This script moves its current working directory to the location of the script, overwrites loki.log to ensure that it doesn't grow endlessly and runs loki.exe. "..\..\..\..\var\log\splunk\" saves the output log in Splunk's log directory.

$SPLUNK_HOME\etc\deployment_apps\Splunk_App_loki\default\transforms.conf

 A little on transforms.conf - it is commonly used for:

 Anonymizing certain types of sensitive incoming data, such as credit card or social security numbers; Routing specific events to a particular index, when you have multiple indexes; Creating new index-time field extractions. NOTE: We do not recommend adding to the set of fields that are extracted at index time unless it is absolutely necessary because there are negative performance implications; Like props.conf, transforms.conf is an integral configuration file to an app and I recommend that you read up on the URL to better understand the configuration file's function. 

 # This is supposed to remove Loki's process bar entries [setnull] REGEX = ^[\\\|\-\/\b]+$ DEST_KEY = queue FORMAT = nullQueue # This removes the loki.exe execution entry [setnull2] REGEX = ^.*?\\etc\\apps\\loki\\bin>loki\.exe --reginfs --csv --dontwait --onlyrelevant --intense\s+$ DEST_KEY = queue FORMAT = nullQueue # "REGEX = XXX" parses the "key=value" pattern that isn't comma separated by performing a look ahead to detect the next "key=" entry. # FORMAT = $1::$2 tells Splunk that the key/value is to be formatted based on the first group that the regex extracts as the key, and the second group that the regex extracts as the value. # Message me if you would like a deeper breakdown of how this works, and I would be happy to explain it. [trans_keyvalues] REGEX = ([\w\d]+):\s(.*?)(?=((\s[\d\w]+:\s)|$)) FORMAT = $1::$2 A little on transforms.conf - it is commonly used for:

And that's it! Simple, right? It may be overwhelming if you're new to Splunk apps, but the main thing that you should know is that inputs.conf runs loki.bat (that runs loki.exe) and monitors for the loki.log file to be updated with the scan results. props.conf parses the first half of the Loki event log, and transforms.conf parses the rest. Hopefully this is helpful, but if you need more information feel free to message me on twitter and I can provide more details.

Once in the App configuration section select the Reset Splunk checkbox and select Save.

Next go to the Server Class tab and create a new App by slicking New Server Class. Name it Loki_App_Class (or whatever you want) and click OK. This will bring you to the Loki App Class screen: Note, if you chose to create the Splunk_TA_loki app, you can perform the same steps as above and add your search head to the clients list, or using the cluster manager. 

 In the Apps section select of the page click Edit to take you to the App list page. Click on the Splunk_App_loki app in the left hand side list to add it to the app class and click Save:

 This will take you back to the Loki_App_Class page. Next you will add the clients that you want to run the Loki APT scanner on. Click the Edit button on the Clients section of the page to take you to the list of clients (e.g. Splunk servers and Splunk Universal Forwarder servers). Add the Windows clients that you want to run Loki on on a regular schedule by adding their hostname to the Include (whitelist) textbox and click the Save button:

 

 

 This will cause the clients in the Include (whitelist) of the  Loki_App_Class to download, install and run the Loki app the next time they call in to the deployment server every day at 2:00 AM, save the results to "$SPLUNK_HOME\var\log\splunk\loki.log" and then ingest and parse the results into Splunk, taking the following: In the Apps section select of the page clickto take you to the App list page. Click on theapp in the left hand side list to add it to the app class and clickThis will take you back to the Loki_App_Class page. Next you will add the clients that you want to run the Loki APT scanner on. Click thebutton on the Clients section of the page to take you to the list of clients (e.g. Splunk servers and Splunk Universal Forwarder servers). Add the Windows clients that you want to run Loki on on a regular schedule by adding their hostname to thetextbox and click thebutton:This will cause the clients in the Include (whitelist) of the  Loki_App_Class to download, install and run the Loki app the next time they call in to the deployment server every day at 2:00 AM, save the results to "$SPLUNK_HOME\var\log\splunk\loki.log" and then ingest and parse the results into Splunk, taking the following: 20170417T01:36:13Z,WIN-8J1HPPNE2HB,ALERT,FILE: C:\Program Files\SplunkUniversalForwarder\var\log\splunk\loki.log SCORE: 4630 TYPE: UNKNOWN SIZE: 281385 FIRST_BYTES: 32303137303431375430313a33333a33365a2c57 / 20170417T01:33:36Z,W MD5: 99bb9f6343fc69159a6e03e1ef8c6428 SHA1: 58bf43a5c0ec496e62f2217cfa789df35d1ea953 SHA256: 4e1feaa3b24529737fa5accda9beaa841fb259ed5474087aa1017f8427544c04 CREATED: Sun Apr 16 18:33:36 2017 MODIFIED: Sun Apr 16 18:34:46 2017 ACCESSED: Sun Apr 16 18:33:36 2017REASON_1: Yara Rule MATCH: GRIZZLY_STEPPE_Malware_2 SUBSCORE: 70 DESCRIPTION: Auto-generated rule - file 9acba7e5f972cdd722541a23ff314ea81ac35d5c0c758eb708fb6e2cc4f598a0 MATCHES: Str1: GoogleCrashReport.dll Str2: CrashErrors Str3: CrashSend Str4: CrashAddData Str5: CrashCleanup Str6: CrashInitREASON_2: Yara Rule MATCH: Casper_Included_Strings SUBSCORE: 50 DESCRIPTION: Casper French Espionage Malware - String Match in File - http://goo.gl/VRJNLo MATCHES: Str1: cmd.exe /C FOR /L %%i IN (1,1,%d) DO IF EXIST Str2: & SYSTEMINFO) ELSE EXIT Str3: jpic.gov.sy Str4: perfaudio.dat parsed key/value pairs that can be used to run reports that show all Loki Scan results that have a 70% confidence level and above, or to fire an alert on confidence levels of 100% Conclusion

 This is great, but, really, ? What can we do with this information? The value in this post is in creating the ability to automate a manual task across your your enterprise. You no longer have to manually run the Loki APT scanner on each system across your environment and parse through the results for possible issues. Automate, explore, expand, exploit, and exterminate (if I'm getting my 

 

 This is great, but, really,? What can we do with this information? The value in this post is in creating the ability to automate a manual task across your your enterprise. You no longer have to manually run the Loki APT scanner on each system across your environment and parse through the results for possible issues. Automate, explore, expand, exploit, and exterminate (if I'm getting my references correct). With a sea of open source security tools that work well on a manual process, this solution can be an excellent method to provide a fresh insight into the workings, and malevolent workings, of an enterprise.|||

