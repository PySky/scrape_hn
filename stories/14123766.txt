This project supports to create a server side game application more efficiently and more quickly (use smartfox server engine)

Let's say you want to listen a "bet" request from client and you also you want to response to that client, you can do like this:

use this annotation to auto response to client ( ) use this annotation to listen a request from client { ( ) ( ) money; ( ) ( ) roomId; ( , ) { room context command( class) by(roomId); context command( class) from( ) info( , user getName(), btype getMoney()); user decreaseMoney(btype getMoney()); user increaseGameMoney(btype getMoney()); context command( class) .toClient( ) user(user) execute(); context command( class) .room(room) toClient( ) execute(); } }

Let's say you need validate a parameter in a request from client (i.e money in "bet" request) you can do:

We have used smartfox server engine, we must use key-value object like SFSObject, SFSUser, SFSRoom e.t.c, they make our source code too complex, hard to read and hard to map, example:

We must spend a lot of time to declare, init variables. Some time we also have two or three user agent for each game and mapping an user agent to key-value object is hard. We think using POJO is good idea, so we make this project.|||

ezyfox-sfs2x - The project supports for interaction to smartfox server 2x