factor() now uses order() to sort its levels, not sort.list() . This makes factor() support custom vector-like objects if methods for the appropriate generics are defined. This change has the side effect of making factor() succeed on empty or length-one non-atomic vector(-like) types (e.g., list), where it failed before.

One can now choose from alternative matrix product implementations via options(matprod = ) . The "internal" implementation is not optimized for speed but consistent in precision with other summations in R (using long double accumulators where available). "blas" calls BLAS directly for best speed, but usually with undefined behavior for inputs with NaN / Inf .

Matrix products now consistently bypass BLAS when the inputs have NaN / Inf values. Performance of the check of inputs has been improved. Performance when BLAS is used is improved for matrix/vector and vector/matrix multiplication (DGEMV is now used instead of DGEMM).

xtabs() works more consistently with NA s, also in its result no longer setting them to 0 . Further, a new logical option addNA allows to count NA s where appropriate. Additionally, for the case sparse = TRUE , the result's dimnames are identical to the default case's.

JIT compilation can be disabled for the rest of the session using compiler::enableJIT(0) or by setting environment variable R_ENABLE_JIT to 0 .

For now, the compiler will not compile code containing explicit calls to browser() : this is to support single stepping from the browser() call.

The JIT (‘Just In Time’) byte-code compiler is now enabled by default at its level 3. This means functions will be compiled on first or second use and top-level loops will be compiled and then run. (Thanks to Tomas Kalibera for extensive work to make this possible.)

Arithmetic between length-1 arrays and longer non-arrays had silently dropped the array attributes and recycled. This now gives a warning and will signal an error in the future, as it has always for logic and comparison operations in these cases (e.g., compare matrix(1,1) + 2:3 and matrix(1,1) < 2:3 ).

Arithmetic, logic ( & , | ) and comparison (aka ‘relational’, e.g., < , == ) operations with arrays now behave consistently, notably for arrays of length zero.

factor(x, exclude = L) behaves more rationally when x or L are character vectors. Further, exclude = <factor> now behaves as documented for long.

summary.default() no longer rounds, but its print method does resulting in less extraneous rounding, notably of numbers in the ten thousands.

table() has been amended to be more internally consistent and become back compatible to R <= 2.7.2 again. Consequently, table(1:2, exclude = NULL) no longer contains a zero count for <NA> , but useNA = "always" continues to do so.

Those who use proxies should check that their settings are compatible (see ?download.file : the most commonly used forms work for both "internal" and "libcurl" ).

(Unix-alike) The default methods for download.file() and url() now choose "libcurl" except for file:// URLs. There will be small changes in the format and wording of messages, including in rare cases if an issue is a warning or an error. For example, when HTTP re-direction occurs, some messages refer to the final URL rather than the specified one.

Formatting and printing of bibliography entries ( bibentry ) is more flexible and better documented. Apart from setting options(citation.bibtex.max = 99) you can also use print(<citation>, bibtex=TRUE) (or format(..) ) to get the BibTeX entries in the case of more than one entry. This also affects citation() . Contributions to enable style = "html+bibtex" are welcome.

When the condition code in if(.) or while(.) is not of length one, an error instead of a warning may be triggered by setting an environment variable, see the help page.

strwrap() reduces indent if it is more than half width rather than giving an error. (Suggested by Bill Dunlap.)

median() gains a formal ... argument, so methods with extra arguments can be provided.

The deriv() and similar functions now can compute derivatives of log1p() , sinpi() and similar one-argument functions, thanks to a contribution by Jerry Lewis.

There is a new argument onIdle for getGraphicsEvent() , which allows an R function to be run whenever there are no pending graphics events. This is currently only supported on X11 devices. Thanks to Frederick Eaton.

getGraphicsEvent() now works on X11(type = "cairo") devices. Thanks to Frederick Eaton (for reviving an earlier patch).

There is a new option PCRE_limit_recursion for grep(perl = TRUE) and friends to set a recursion limit taking into account R 's estimate of the remaining C stack space (or 10000 if that is not available). This reduces the chance of C stack overflow, but because it is conservative may report a non-match (with a warning) in examples that matched before. By default it is enabled if any input string has 1000 or more bytes. ( PR#16757 )

Warning: segfaults were seen using PCRE with JIT enabled on 64-bit Sparc builds.

Note that in general this makes little difference to the speed, and may take a little longer: its benefits are most evident on strings of thousands of characters. As a side effect it reduces the chances of C stack overflow in the PCRE library on very long strings (millions of characters, but see next item).

This is controlled by a new option PCRE_use_JIT .

grep(perl = TRUE) and friends can now make use of PCRE's Just-In-Time mechanism, for PCRE >= 8.20 on platforms where JIT is supported. It is used by default whenever the pattern is studied (see the previous item). (Based on a patch from Mikko Korpela.)

There is a new option PCRE_study which controls when grep(perl = TRUE) and friends ‘study’ the compiled pattern. Previously this was done for 11 or more input strings: it now defaults to 10 or more (but most examples need many more for the difference from studying to be noticeable).

The binning algorithm used by bandwidth selectors bw.ucv() , bw.bcv() and bw.SJ() switches to a version linear in the input size n for n > nb/2 . (The calculations are the same, but for larger n/nb it is worth doing the binning in advance.)

sessionInfo() shows the full paths to the library or executable files providing the BLAS/LAPACK implementations currently in use (not available on Windows).

Encoding name "utf8" is mapped to "UTF-8" . Many implementations of iconv accept "utf8" , but not GNU libiconv (including the late 2016 version 1.15).

Methods "wget" and "curl" for download.file() now give an R error rather than a non-zero return value when the external command has a non-zero status.

NB: This can break reproducibility of output, and did for a CRAN package.

Loading the parallel package namespace no longer sets or changes the .Random.seed , even if R_PARALLEL_PORT is unset.

Assigning to an element of a vector beyond the current length now over-allocates by a small fraction. The new vector is marked internally as growable, and the true length of the new vector is stored in the truelength field. This makes building up a vector result by assigning to the next element beyond the current length more efficient, though pre-allocating is still preferred. The implementation is subject to change and not intended to be used in packages at this time.

The maximum number of DLLs that can be loaded into R e.g. via dyn.load() can now be increased by setting the environment variable R_MAX_NUM_DLLS before starting R.

read.dcf() now consistently interprets any ‘whitespace’ to be stripped to include newlines.

tapply() gets new option default = NA allowing to change the previously hardcoded value.

If a reference class has a validity method, validObject will be called automatically from the default initialization method for reference classes.

The format() and print() methods for object.size() results get new options standard and digits ; notably, standard = "IEC" and standard = "SI" allow more standard (but less common) abbreviations than the default ones, e.g. for kilobytes. (From contributions by Henrik Bengtsson.)

bug.report() now tries to extract an email address from a BugReports field, and if there is none, from a Contacts field.

The default method for quantile(x, prob) should now be monotone in prob , even in border cases, see PR#16672 .

The (default) Stangle driver Rtangle allows annotate to be a function and gets a new drop.evalFALSE option.

Package tools now exports function CRAN_package_db() for obtaining information about current packages in the CRAN package repository, and several functions for obtaining the check status of these packages.

New function check_packages_in_dir_details() in package tools for analyzing package-check log files to obtain check details.

The POSIXct method for print() gets optional tz and usetz arguments, thanks to a report from Jennifer S. Lyon.

ppr() and supsmu() get an optional trace argument, and ppr(.., sm.method = ..spline) is no longer limited to sample size n <= 2500 .

The license check enabled by options(checkPackageLicense = TRUE) is now done when the package's namespace is first loaded.

Sys.setFileTime() and file.copy(copy.date = TRUE) will set timestamps with fractions of seconds on platforms/filesystems which support this.

sys.source() gets a new toplevel.env argument. This argument is useful for frameworks running package tests; contributed by Tomas Kalibera.

source() gets new optional arguments, notably exprs ; this is made use of in the new utility function withAutoprint() .

strcapture() no longer fixes column names nor coerces strings to factors (suggested by Bill Dunlap).

Convenience function hasName() has been added; it is intended to replace the common idiom !is.null(x$name) without the usually unintended partial name matching.

apropos() and find(simple.words = FALSE) no longer match object names starting with . which are known to be internal objects (such as .__S3MethodsTable__. ).

Connections now print() without error even if invalid, e.g. after having been destroyed.

The unexported low-level functions in package parallel for passing serialized R objects to and from forked children now support long vectors on 64-bit platforms. This removes some limits on higher-level functions such as mclapply() (but returning gigabyte results from forked processes via serialization should be avoided if at all possible).

try() gains a new argument outFile with a default that can be modified via options(try.outFile = .) , useful notably for Sweave .

citation() supports ‘inst/CITATION’ files from package source trees, with lib.loc pointing to the directory containing the package.

system.time() now uses message() instead of cat() when terminated early, such that suppressMessages() has an effect; suggested by Ben Bolker.

dump.frames() gets a new option include.GlobalEnv which allows to also dump the global environment, thanks to Andreas Kersting's proposal in PR#17116 .

table(x, exclude = NULL) now sets useNA = "ifany" (instead of "always" ). Together with the bug fixes for this case, this recovers more consistent behaviour compatible to older versions of R . As a consequence, summary() for a logical vector no longer reports (zero) counts for NA when there are no NA s.

Speedup in simplify2array() and hence sapply() and mapply() (for the case of names and common length > 1), thanks to Suharto Anggono's PR#17118 .

The default and data.frame methods for stack() preserve the names of empty elements in the levels of the ind column of the return value. Set the new drop argument to TRUE for the previous behavior.

Radix sort is now chosen by method = "auto" for sort.int() for double vectors (and hence used for sort() for unclassed double vectors), excluding ‘long’ vectors.

In most cases user interrupt handlers will be called with a "resume" restart available. Handlers can invoke this restart to resume computation. At the browser prompt the r command will invoke a "resume" restart if one is available. Some read operations cannot be resumed properly when interrupted and do not provide a "resume" restart.

options(interrupt=) can be used to specify a default action for user interrupts. For now, if this option is not set and the error option is set, then an unhandled user interrupt invokes the error option. (This may be dropped in the future as interrupt conditions are not error conditions.)

sessionInfo() has been updated for Apple's change in OS naming as from ‘10.12’ (‘macOS Sierra’ vs ‘OS X El Capitan’).

Invalid factors, e.g., with duplicated levels (invalid but constructable) now give a warning when printed, via new function .valid.factor() .

After seven years of deprecation, duplicated factor levels now produce a warning when printed and an error in levels<- instead of a warning.

New option rstandard(<lm>, type = "predicted") provides the “PRESS”–related leave-one-out cross-validation errors for linear models.

addNA() is faster now, e.g. when applied twice. (Part of PR#16895 .)

smooth.spline() now allows direct specification of lambda , gets a hatvalues() method and keeps tol in the result, and optionally parts of the internal matrix computations.

diag(x, nrow = n) now preserves typeof(x) , also for logical, integer and raw x (and as previously for complex and numeric).

identical() gains an ignore.srcref option which drops "srcref" and similar attributes when true (as by default).

The plot() method for ppr() has enhanced default labels ( xmin and main ).

boxplot(<formula>, *) gain optional arguments drop , sep , and lex.order to pass to split.default() which itself gains an argument lex.order to pass to interaction() for more flexibility.

stopifnot(E, ..) now reports differences when E is a call to all.equal() and that is not true.

The method argument of sort.list() , order() and sort.int() gains an "auto" option (the default) which should behave the same as before when method was not supplied.

The result of eigen() now is of class "eigen" in the default case when eigenvectors are computed.

isSymmetric(m) is much faster for large asymmetric matrices m via pre-tests and a new option tol1 (with which strict back compatibility is possible but not the default).

str(x) 's default method is more “accurate” and hence somewhat more generous in displaying character vectors; this will occasionally change R outputs (and need changes to some ‘*.Rout(.save)’ files). For a classed integer vector such as x <- xtabs(~ c(1,9,9,9)) , str(x) now shows both the class and "int" , instead of only the latter.

str(<looooooooong_string>) is no longer very slow; inspired by Mikko Korpela's proposal in PR#16527 .

str() and strOptions() get a new option drop.deparse.attr with improved but changed default behaviour for expressions. For expression objects x , str(x) now may remove extraneous white space and truncate long lines.

Add utils::strcapture() . Given a character vector and a regular expression containing capture expressions, strcapture() will extract the captured tokens into a tabular data structure, typically a data.frame .

Add utils::debugcall() and utils::undebugcall() for debugging the function that would be called by evaluating the given expression. When the call is to an S4 generic or standard S3 generic, debugcall() debugs the method that would be dispatched. A number of internal utilities were added to support this, most notably utils::isS3stdGeneric() . (Based on a patch by Gabe Becker.)

Add signature argument to debug() , debugonce() , undebug() and isdebugged() for more conveniently debugging S3 and S4 methods. (Based on a patch by Gabe Becker.)

User errors such as integrate(f, 0:1, 2) are now caught.

Package tools has a new function package_native_routine_registration_skeleton() to assist adding native-symbol registration to a package. See its help and §5.4.1 of ‘Writing R Extensions’ for how to use it. (At the time it was added it successfully automated adding registration to over 90% of CRAN packages which lacked it. Many of the failures were newly-detected bugs in the packages, e.g. 50 packages called entry points with varying numbers of arguments and 65 packages called entry points not in the package.)

HAVE_UINTPTR_T is now defined where appropriate by Rconfig.h so that it can be included before Rinterface.h when CSTACK_DEFNS is defined and a C compiler (not C++) is in use. Rinterface.h now includes C header ‘stdint.h’ or C++11 header ‘cstdint’ where needed.

No-longer-installed headers ‘GraphicsBase.h’, ‘RGraphics.h’, ‘Rmodules/RX11.h’ and ‘Rmodules/Rlapack.h’ which had a LGPL license no longer do so.

Headers for Unix-only facilities ‘R_ext/GetX11Image.h’, ‘R_ext/QuartzDevice.h’ and ‘R_ext/eventloop.h’ are no longer installed on Windows.

Headers ‘R_ext/BLAS.h’ and ‘R_ext/Lapack.h’ have many improved declarations including const for double-precision complex routines. Inter alia this avoids warnings when passing ‘string literal’ arguments from C++11 code.

C++ code including these headers might be relying on the latter.

When included from C++, the R headers now use forms such as std::FILE directly rather than including the line

Because it is needed by about 70 CRAN packages, headers ‘R.h’ and ‘Rmath.h’ still declare

There was an exception for the native Solaris C++ compiler to the dropping (in R 3.3.0) of legacy C++ headers from headers such as ‘R.h’ and ‘Rmath.h’ — this has now been removed. That compiler has strict C++98 compliance hence does not include extensions in its (non-legacy) C++ headers: some packages will need to request C++11 or replace non-C++98 calls such as lgamma : see §1.6.4 of ‘Writing R Extensions’.

Entry points R_MakeExternalPtrFn and R_ExternalPtrFn are now declared in header ‘Rinternals.h’ to facilitate creating and retrieving an R external pointer from a C function pointer without ISO C warnings about the conversion of function pointers.

configure tests for a C++17-compliant compiler. The tests are experimental and subject to change in the future.

The minimum version requirement for libcurl has been reduced to 7.22.0, although at least 7.28.0 is preferred and earlier versions are little tested. (This is to support Debian 7 ‘Wheezy’ LTS and Ubuntu ‘Precise’ 12.04 LTS, although the latter is close to end-of-life.)

If available, the POSIX 2008 system call utimensat will be used by Sys.setFileTime() and file.copy(copy.date = TRUE) . This may result in slightly more accurate file times. (It is available on Linux and FreeBSD but not macOS.)

configure checks for the required header ‘sys/select.h’ (or ‘sys/time.h’ on legacy systems) and system call select and aborts if they are not found.

configure checks that the compiler specified by $CXX $CXXFLAGS is able to compile C++ code.

Support for the defunct IRIX and OSF/1 OSes and Alpha CPU has been removed.

There is a new macro CXXSTD to help specify the standard for C++ code, e.g. -std=c++98. This makes it easier to work with compilers which default to a later standard: for example, with CXX=g++6 CXXSTD=-std=c++98 configure will select commands for g++ 6.x which conform to C++11 and C++14 where specified but otherwise use C++98.

configure now tests for a C++14-compliant compiler by testing some basic features. This by default tries flags for the compiler specified by CXX11, but an alternative compiler, options and standard can be specified by variables CXX14, CXX14FLAGS and CXX14STD (e.g., -std=gnu++14).

An alternative compiler for C++11 is now specified with CXX11, not CXX1X. Likewise C++11 flags are specified with CXX11FLAGS and the standard (e.g., -std=gnu++11 is specified with CXX11STD.

The tests for C++11 compliance are now much more comprehensive. For gcc < 4.8, the tests from R 3.3.0 are used in order to maintain the same behaviour on Linux distributions with long-term support.

configure now adds a compiler switch for C++11 code, even if the compiler supports C++11 by default. (This ensures that g++ 6.x uses C++11 mode and not its default mode of C++14 with ‘GNU extensions’.)

readline headers (and not just the library) are required unless configuring with --with-readline=no.

The version of LAPACK included in the sources has been updated to 3.7.0: no new routines have been added to R .

(Windows only) Tcl/Tk version 8.6.4 is now included in the binary builds. The ‘tcltk*.chm’ help file is no longer included; please consult the online help at http://www.tcl.tk/man/ instead.

Make variables with names containing CXX1X are deprecated in favour of those using CXX11 , but for the time being are still made available via file ‘etc/Makeconf’. Packages using them should be converted to the new forms and made dependent on R (>= 3.4.0).

Packages which register native routines for .C or .Fortran need to be re-installed for this version (unless installed with R-devel SVN revision r72375 or later).

The order of flags when LinkingTo other packages has been changed so their include directories come earlier, before those specified in CPPFLAGS . This will only have an effect if non-system include directories are included with -I flags in CPPFLAGS (and so not the default -I/usr/local/include which is treated as a system include directory on most platforms).

There is support for compiling C++14 or C++17 code in packages on suitable platforms: see ‘Writing R Extensions’ for how to request this.

R CMD check --as-cran now NOTEs if the package does not register its native routines or does not declare its intentions on (native) symbol search. (This will become a WARNING in due course.)

R CMD check now checks any BugReports field to be non-empty and a suitable single URL.

Check customization via environment variables to detect side effects of .Call() and .External() calls which alter their arguments is described in §8 of the ‘R Internals’ manual.

The new option R CMD check --no-stop-on-test-error allows running the remaining tests (under ‘tests/’) even if one gave an error.

R CMD build now preserves dates when it copies files in preparing the tarball. (Previously on Windows it changed the dates on all files; on Unix, it changed some dates when installing vignettes.)

R CMD build and R CMD check now use the union of R_LIBS and .libPaths() . They may not be equivalent, e.g., when the latter is determined by R_PROFILE.

For consistency with other package subdirectories, files named ‘*.r’ in the ‘tests’ directory are now recognized as tests by R CMD check . (Wish of PR#17143 .)

R CMD check now checks that output files in ‘inst/doc’ are newer than the source files in ‘vignettes’.

It now knows about all the variables used for the C++98, C++11 and C++14 standards.

R CMD config gains a --all option for printing names and values of all basic configure variables.

R CMD build will now give priority to vignettes produced from files in the ‘vignettes’ directory over those in the ‘inst/doc’ directory, with a warning that the latter are being ignored.

Running R CMD check --as-cran with _R_CHECK_CRAN_INCOMING_REMOTE_ false now skips tests that require remote access. The remaining (local) tests typically run quickly compared to the remote tests.

The deprecated support for PCRE versions older than 8.20 will be removed in R 3.4.1. (Versions 8.20–8.31 will still be accepted but remain deprecated.)

(C-level Native routine registration.) The deprecated styles member of the R_CMethodDef and R_FortranMethodDef structures has been removed. Packages using these will need to be re-installed for R 3.4.0.

Header ‘Rconfig.h’ no longer defines SUPPORT_OPENMP; instead use _OPENMP (as documented for a long time).

structure(NULL, ..) is now deprecated as you cannot set attributes on NULL .

Use of the C/C++ macro NO_C_HEADERS is defunct and silently ignored.

Fix problems in command completion: Crash ( PR#17222 ) and junk display in Windows, handling special characters in filenames on all systems.

Coercion of an S4 object to a vector during sub-assignment into a vector failed to dispatch through the as.vector() generic (often leading to a segfault).

callNextMethod() was broken when called from a method that augments the formal arguments of a primitive generic.

terms.formula() ignored argument names when determining whether two terms were identical. ( PR#17235 )

If a vignette in the ‘vignettes’ directory is listed in ‘.Rbuildignore’, R CMD build would not include it in the tarball, but would include it in the vignette database, leading to a check warning. ( PR#17246 )

sample() now uses two uniforms for added precision when the uniform generator is Knuth-TAOCP , Knuth-TAOCP-2002 , or a user-defined generator and the population size is 2^25 or greater.

The str() and as.hclust() methods for "dendrogram" now also work for deeply nested dendrograms thanks to non-recursive implementations by Bradley Broom.

Fix for cairo_pdf() (and svg() and cairo_ps() ) when replaying a saved display list that contains a mix of grid and graphics output. (Report by Yihui Xie.)

str() no longer shows "list output truncated" , in cases that list was not shown at all. Thanks to Neal Fultz ( PR#17219 )

download.file(method = "libcurl") does not check for URL existence before attempting downloads; this is more robust to servers that do not support HEAD or range-based retrieval, but may create empty or incomplete files for aborted download requests.

rep(x, times) and rep.int(x, times) now work when times is larger than the largest value representable in an integer vector. ( PR#16932 )

seq.int(to = 1, by = 1) is now correct, other cases are integer (instead of double ) when seq() is integer too, and the "non-finite" error messages are consistent between seq.default() and seq.int() , no longer mentioning NaN etc.

seq("2", "5") now works too, equivalently to "2":"5" and seq.int() .

dev.capture() using Quartz Cocoa device (macOS) returned invalid components if the back-end chose to use ARGB instead of RGBA image format. (Reported by Noam Ross.)

Asking for methods() on "|" returns only S3 methods. See https://stat.ethz.ch/pipermail/r-devel/2016-December/073476.html .

Failure to create file in tempdir() for compressed pdf() graphics device no longer errors (then later segfaults). There is now a warning instead of error and compression is turned off for the device. Thanks to Alec Wysoker ( PR#17191 ).

Reading from file("stdin") now also closes the connection and hence no longer leaks memory when reading from a full pipe, thanks to Gábor Csárdi, see thread starting at https://stat.ethz.ch/pipermail/r-devel/2016-November/073360.html .

formatC(x, flag = f) allows two new flags, and signals an error for invalid flags also in the case of character formatting.

The factor method for print() no longer sets the class of the factor to NULL , which would violate a basic constraint of an S4 object.

as.character.factor() respects S4 inheritance when checking the type of its argument. ( PR#17141 )

When in tabulate(bin, nbin) length(bin) is larger than the maximal integer, the result is now of type double and hence no longer silently overflows to wrong values. ( PR#17140 )

When index.return=TRUE is passed to sort.int() , the radix sort treats NA s like sort.list() does (like the other sort algorithms).

The radix sort considers NA_real_ and NaN to be equivalent in rank (like the other sort algorithms).

In integer arithmetic, NULL is now treated as integer(0) whereas it was previously treated as double(0) .

wilcox.test(x, conf.int=TRUE) no longer errors out in cases where the confidence interval is not available, such as for x = 0:2 .

Additionally, all cases of empty exclude are equivalent, and useNA is not overwritten when specified (as it was by exclude = NULL ).

table() no longer drops an "NaN" factor level, and better obeys exclude = <chr> , thanks to Suharto Anggono's patch for PR#16936 . Also, in the case of exclude = NULL and NA s, these are tabulated correctly (again).

Point mass limit cases: qpois(-2, 0) now gives NaN with a warning and qgeom(1, 1) is 0 . ( PR#16972 )

grouping() puts NAs last, to be consistent with the default behavior of order() .

Fix order(x, decreasing = TRUE) when x is an integer vector containing MAX_INT . Ported from a fix Matt Dowle made to data.table .

Internal S4 dispatch sets .Generic in the method frame for consistency with standardGeneric() . ( PR#16929 )

Fix S3 dispatch on S4 objects when the methods package is not attached.

Fix level propagation in unlist() when the list contains zero-length lists or factors.

as<-() avoids an infinite loop when a virtual class is interposed between a subclass and an actual superclass.

Rotated symbols in plotmath expressions are now positioned correctly on x11(type = "Xlib") . ( PR#16948 )

deparse(<complex>, options = "digits17") prints more nicely now, mostly thanks to a suggestion by Richie Cotton.

match(x, t) , duplicated(x) and unique(x) work as documented for complex numbers with NA s or NaN s, where all those containing NA do match, whereas in the case of NaN 's both real and imaginary parts must match, compatibly with how print() and format() work for complex numbers.

Getting or setting body() or formals() on non-functions for now signals a warning and may become an error for setting.

(Unix-alike) url(method = "default") with an explicit open argument re-tries with method = "libcurl" . This covers many of the usages, e.g. readLines() with a URL argument.

The internal methods of download.file() and url() now report that they cannot follow this (rather than failing silently).

Changes when redirection of a http:// URL to a https:// URL is encountered:

The configure check for the zlib version is now robust to versions longer than 5 characters, including 1.2.11 .

Environmental variable _R_CHECK_TESTS_NLINES_ controls how R CMD check reports failing tests (see §8 of the ‘R Internals’ manual).

(C-level Native routine registration.) The undocumented styles field of the components of R_CMethodDef and R_FortranMethodDef is deprecated.

R CMD Rd2pdf had problems with packages with non-ASCII titles in ‘.Rd’ files (usually the titles were omitted).

qbeta() underflowed too early in some very asymmetric cases. ( PR#17178 )

findMethod() failed if the active signature had expanded beyond what a particular package used. (Example with packages XR and XRJulia on CRAN .)

Another possible integer overflow is checked and may result in an error report (rather than an incorrect result) for much longer inputs (millions for a smooth distribution).

Bandwidth selectors bw.ucv() and bw.SJ() gave incorrect answers or incorrectly reported an error (because of integer overflow) for inputs longer than 46341. Similarly for bw.bcv() at length 5793.

bug.report() did not do any validity checking on a package's BugReports field. It now ignores an empty field, removes leading whitespace and only attempts to open http:// and https:// URLs, falling back to emailing the maintainer.

pmin() and pmax() now work again for ordered factors and 0-length S3 classed objects, thanks to Suharto Anggono's PR#17195 and PR#17200 .

On some systems, very small hexadecimal numbers in hex notation would underflow to zero. ( PR#17199 )

methods(f) now also works for f "(" or "{" .

Sys.timezone() now returns non-NA also on platforms such as Ubuntu 14.04.5 LTS, thanks to Mikko Korpela's PR#17186 .

getDLLRegisteredRoutines() now produces its warning correctly when multiple DLLs match, thanks to Matt Dowle's PR#17184 .

Fix buffer overflow vulnerability in pdf() when loading an encoding file. Reported by Talos (TALOS-2016-0227).

"Cincinnati" was missing an "n" in the precip dataset.

Package installation into a library where the package exists via symbolic link now should work wherever Sys.readlink() works, resolving PR#16725 .

grepRaw(<long>, <short>, fixed = TRUE) now works, thanks to a patch by Mikko Korpela. ( PR#17132 )

Calls to setMethod() no longer print a message when creating a generic function in those cases where that is natural: S3 generics and primitives.

The online documentation for package methods is extensively rewritten. The goals are to simplify documentation for basic use, to note old features not recommended and to correct out-of-date information.

format(<AsIs>) looks more regular, also for non-character atomic matrices.

Use options(deparse.max.lines=) to limit the number of lines recorded in .Traceback and other deparsing activities.

The version of LAPACK included in the sources has been updated to 3.6.1, a bug-fix release including a speedup for the non-symmetric case of eigen() .

extSoftVersion() now reports the version (if any) of the readline library in use.

Versions of the readline library >= 6.3 had been changed so that terminal window resizes were not signalled to readline : code has been added using a explicit signal handler to work around that (when R is compiled against readline >= 6.3). ( PR#16604 )

R CMD config works better with paths containing spaces, even those of home directories (as reported by Ken Beath).

R CMD check has been set up to filter important warnings from recent versions of gfortran with -Wall -pedantic: this now reports non-portable GNU extensions such as out-of-order declarations.

Use of the C/C++ macro NO_C_HEADERS is deprecated (no C headers are included by R headers from C++ as from R 3.3.0, so it should no longer be needed).

Reference class calls to methods() did not re-analyse previously defined methods, meaning that calls to methods defined later would fail. (Reported by Charles Tilford).

xtabs(~ exclude) no longer fails from wrong scope, thanks to Suharto Anggono's PR#17147 .

plot(<lm>, which = *) now correctly labels the contour lines for the standardized residuals for which = 6 . It also takes the correct p in case of singularities (also for which = 5 ). ( PR#17161 )

bartlett.test() used residual sums of squares instead of variances, when the argument was a list of lm objects. (Reported by Jens Ledet Jensen).

Subsetting very large matrices ( prod(dim(.)) >= 2^31 ) now works thanks to Michael Schubmehl's PR#17158 .

min() and max() now also work correctly when the argument list starts with character(0) . ( PR#17160 )

split(<very_long>, *) now works even when the split off parts are long. ( PR#17139 )

Using options(checkPackageLicense = TRUE) no longer requires acceptance of the licence for non-default standard packages such as compiler. (Reported by Mikko Korpela.)

rbeta(4, NA) and similarly rgamma() and rnbinom() now return NaN 's with a warning, as other r<dist>(), and as documented. ( PR#17155 )

c() 's argument use.names is documented now, as belonging to the (C internal) default method. In “parallel”, argument recursive is also moved from the generic to the default method, such that the formal argument list of base generic c() is just (...) .

If a package added a class to a class union in another package, loading the first package gave erroneous warnings about “undefined subclass”.

parallel::mccollect() now returns a named list (as documented) when called with wait = FALSE . (Reported by Michel Lang.)

plot.ts() , the plot() method for time series, now respects cex , lwd and lty . (Reported by Greg Werbin.)

str(I(matrix(..))) now looks as always intended.

axis(side, x = D) and hence Axis() and plot() now work correctly for "Date" and time objects D , even when “time goes backward”, e.g., with decreasing xlim . (Reported by William May.)

pmax() and pmin() now work with (more ?) classed objects, such as "Matrix" from the Matrix package, as documented for a long time.

unique(warnings()) works more correctly, thanks to a new duplicated.warnings() method.

contour() caused a segfault if the labels argument had length zero. (Reported by Bill Dunlap.)

merge(df1, df2) now also works for data frames with column names "na.last" , "decreasing" , or "method" . ( PR#17119 )

Packages using non-ASCII encodings in their code did not install data properly on systems using different encodings.

When an S4 class name matches multiple classes in the S4 cache, perform a dynamic search in order to obey namespace imports. This should eliminate annoying messages about multiple hits in the class cache. Also, pass along the package from the ClassExtends object when looking up superclasses in the cache.

The check for non-portable flags in R CMD check could be stymied by ‘src/Makevars’ files which contained targets.

diff(<difftime>) now keeps the "units" attribute, as subtraction already did, PR#16940 .

Use of Ctrl-C to terminate a reverse incremental search started by Ctrl-R in the readline -based Unix terminal interface is now supported when R was compiled against readline >= 6.0 ( Ctrl-G always worked). ( PR#16603 )

In text.default(x, y, labels) , the rarely(?) used default for labels is now correct also for the case of a 2-column matrix x and missing y .

pretty(d, ..) for date-time d rarely failed when "halfmonth" time steps were tried ( PR#16923 ) and on ‘inaccurate’ platforms such as 32-bit Windows or a configuration with --disable-long-double ; see comment #15 of PR#16761 .

rgamma(1, Inf) or rgamma(1, 0, 0) no longer give NaN but the correct limit.

unloadNamespace(ns) also works again when ns is a ‘namespace’, as from getNamespace() .

match(x, t) (and hence x %in% t ) failed when x was of length one, and either character and x and t only differed in their Encoding or when x and t where complex with NA s or NaN s. ( PR#16885 .)

R CMD INSTALL and hence install.packages() gave an internal error installing a package called description from a tarball on a case-insensitive file system.

Unfortunately that cannot guarantee that any particular https: URL can be accessed. For example, server and client have to successfully negotiate a cryptographic protocol (TLS/SSL, ...) and the server's identity has to be verifiable via the available certificates. Different access methods may allow different protocols or use private certificate bundles: we encountered a https: CRAN mirror which could be accessed by one browser but not by another nor by download.file() on the same Linux machine.

All builds have support for https: URLs in the default methods for download.file() , url() and code making use of them.

nchar(x, *) 's argument keepNA governing how the result for NA s in x is determined, gets a new default keepNA = NA which returns NA where x is NA , except for type = "width" which still returns 2 , the formatting / printing width of NA .

New functions makevars_user() and makevars_site() in package tools to determine the location of the user and site specific ‘Makevars’ files for customizing package compilation.

New convenience function Rcmd() in package tools for invoking R CMD tools from within R .

The import() namespace directive now accepts an argument except which names symbols to exclude from the imports. The except expression should evaluate to a character vector (after substituting symbols for strings). See Writing R Extensions.

gzcon() gains a new option text , which marks the connection as text-oriented (so e.g. pushBack() works). It is still always opened in binary mode.

prcomp() gains a new option rank. allowing to directly aim for less than min(n,p) PC's. The summary() and its print() method have been amended, notably for this case.

as.roman(ch) now correctly deals with more diverse character vectors ch ; also arithmetic with the resulting roman numbers works in more cases. ( PR#16779 )

dotchart() gains a pt.cex argument to control the size of points separately from the size of plot labels. Thanks to Michael Friendly and Milan Bouchet-Valat for ideas and patches.

R now uses a new version of the logo (donated to the R Foundation by RStudio). It is defined in ‘.svg’ format, so will resize without unnecessary degradation when displayed on HTML pages—there is also a vector PDF version. Thanks to Dirk Eddelbuettel for producing the corresponding X11 icon.

hist() for "Date" or "POSIXt" objects would sometimes give misleading labels on the breaks, as they were set to the day before the start of the period being displayed. The display format has been changed, and the shift of the start day has been made conditional on right = TRUE (the default). ( PR#16679 )

Option logical = FALSE is now supported on Linux and recent versions of OS X (for the latter, thanks to a suggestion of Kyaw Sint).

parallel::detectCores() now has default logical = TRUE on all platforms – as this was the default on Windows, this change only affects Sparc Solaris.

switch() now warns when no alternatives are provided.

rhyper(nn, m, n, k) no longer returns NA when one of the three parameters exceeds the maximal integer.

New function grouping() returns a permutation that stably rearranges data so that identical values are adjacent. The return value includes extra partitioning information on the groups. The implementation came included with the new radix sort.

The order() function gains a method argument for choosing between "shell" and "radix" .

The radix sort algorithm and implementation from data.table ( forder ) replaces the previous radix (counting) sort and adds a new method for order() . Contributed by Matt Dowle and Arun Srinivasan, the new algorithm supports logical, integer (even with large values), real, and character vectors. It outperforms all other methods, but there are some caveats (see ?sort ).

Reference class finalizers run at exit, as well as on garbage collection.

New string utilities startsWith(x, prefix) and endsWith(x, suffix) . Also provide speedups for some grepl("^...",*) uses (related to proposals in PR#16490 ).

Profiling now records calls of the form foo::bar and some similar cases directly rather than as calls to <Anonymous> . Contributed by Winston Chang.

The format method for object_size objects now also accepts “binary” units such as "KiB" and e.g., "Tb" . (Partly from PR#16649 .)

match.arg(arg) (the one-argument case) is faster; so is sort.int() . ( PR#16640 )

tapply() has been made considerably more efficient without changing functionality, thanks to proposals from Peter Haverty and Suharto Anggono. ( PR#16640 )

As before, the details of what is included are in ‘src/modules/lapack/README’ and this now gives information on earlier additions.

The version of LAPACK included in the sources has been updated to 3.6.0, including those ‘deprecated’ routines which were previously included. Ca 40 double-complex routines have been added at the request of a package maintainer.

S4 values are automatically coerced to vector (via as.vector ) when subassigned into atomic vectors.

Only font family names starting with "Hershey" (and not "Her" as before) are given special treatment by the graphics engine.

S4 dispatch works within calls to .Internal() . This means explicit S4 generics are no longer needed for unlist() and as.vector() .

recordPlot() has new arguments load and attach to allow package names to be stored as part of a recorded plot. replayPlot() has new argument reloadPkgs to load/attach any package names that were stored as part of a recorded plot.

plot(x ~ x, *) now warns that it is the same as plot(x ~ 1, *) .

regmatches(invert = NA) can now be used to extract both non-matched and matched substrings.

On Unix-like platforms which support the getline C library function, system(*,intern = TRUE) no longer truncates (output) lines longer than 8192 characters, thanks to Karl Millar. ( PR#16544 )

The choice can easily be overridden via environment variable R_INTERACTIVE_DEVICE.

The logic for selecting the default screen device on OS X has been simplified: it is now quartz() if that is available even if environment variable DISPLAY has been set by the user.

lengths() considers methods for length and [[ on x , so it should work automatically on any objects for which appropriate methods on those generics are defined.

More consistent, partly not back-compatible behavior of NA and NaN coercion to complex numbers, operations less often resulting in complex NA ( NA_complex_ ).

match(x, table) is faster (sometimes by an order of magnitude) when x is of length one and incomparables is unchanged, thanks to Peter Haverty ( PR#16491 ).

abbreviate(use.classes = FALSE) is now implemented, and that is more suitable for non-European languages.

abbreviate() has more support for multi-byte character sets – it no longer removes bytes within characters and knows about Latin vowels with accents. It is still only really suitable for (most) European languages, and still warns on non-ASCII input.

tools::undoc(dir = D) and codoc(dir = D) now also work when D is a directory whose normalizePath() ed version does not end in the package name, e.g. from a symlink.

Some testing code is available at https://github.com/pmur002/R-display-list .

Code for restoring snapshots was contributed by Jeroen Ooms and JJ Allaire.

The underlying changes mean that packages providing graphics devices (e.g., Cairo , RSvgDevice , cairoDevice , tikzDevice ) will need to be reinstalled.

It is still not a good idea to use snapshots as a persistent storage format for R plots, but it is now not completely silly to use a snapshot as a format for transferring an R plot between two R sessions.

It is now possible (again) to replayPlot() a display list snapshot that was created by recordPlot() in a different R session.

qr() no longer has a ... argument to pass additional arguments to methods.

The undocumented switching of methods for url() on https: and ftps: URLs is confined to method = "default" (and documented).

The out-of-the box Bioconductor mirror has been changed to one using https://: use chooseBioCmirror() to choose a http:// mirror if required.

(Windows only) download.file() with default method = "auto" and a ftps:// URL chooses "libcurl" if that is available.

read.table() now always uses the names for a named colClasses argument (previously names were only used when colClasses was too short). (In part, wish of PR#16478 .)

Thanks to a patch from Tomas Kalibera, x[x != 0] is now typically faster than x[which(x != 0)] (in the case where x has no NAs, the two are equivalent).

file() gains an explicit method argument rather than implicitly using getOption("url.method", "default") .

This now defaults to 300 on all platforms: that is the default documented by cairographics, but apparently was not used by all system installations.

Graphics devices cairo_pdf() and cairo_ps() now allow non-default values of the cairographics ‘fallback resolution’ to be set.

type.convert("i") now returns a factor instead of a complex value with zero real part and missing imaginary part.

Subscripting of matrix/array objects of type "expression" is now supported.

news() now displays R and package news files within the HTML help system if it is available. If no news file is found, a visible NULL is returned to the console.

New S3 generic function sigma() with methods for extracting the estimated standard deviation aka “residual standard deviation” from a fitted model.

rapply() preserves attributes on the list when how = "replace" .

New function strrep() for repeating the elements of a character vector.

formula objects are slightly more “first class”: e.g., formula() or new("formula", y ~ x) are now valid. Similarly, for "table" , "ordered" and "summary.table" . Packages defining S4 classes with the above S3/S4 classes as slots should be reinstalled.

D() now signals an error when given invalid input, rather than silently returning NA . (Request of John Nash.)

(Windows only) The GUI menu item to install local packages now accepts ‘*.tar.gz’ files as well as ‘*.zip’ files (but defaults to the latter).

str(x) now displays "Time-Series" also for matrix (multivariate) time-series, i.e. when is.ts(x) is true.

Also, the names of the R ‘language elements’ are exported as character vector tools::langElts .

New functions validEnc() and validUTF8() to give access to the validity checks for inputs used by grep() and friends.

R CMD Rdconv and R CMD Rd2pdf each have a new option --RdMacros=pkglist which allows Rd macros to be specified before processing.

R CMD check --as-cran now also checks DOIs in package ‘CITATION’ and Rd files.

R CMD check now by default checks code usage (via codetools ) with only the base package attached. Functions from default packages other than base which are used in the package code but not imported are reported as undefined globals, with a suggested addition to the NAMESPACE file.

R CMD check has a new option --ignore-vignettes for use with non-Sweave vignettes whose VignetteBuilder package is not available.

Package tools' functions package.dependencies() , pkgDepends() , etc are deprecated now, mostly in favor of package_dependencies() which is both more flexible and efficient.

[<- with an S4 value into a list currently embeds the S4 object into its own list such that the end result is roughly equivalent to using [[<- . That behavior is deprecated. In the future, the S4 value will be coerced to a list with as.list() .

(Windows only) Function setInternet2() has no effect and will be removed in due course. The choice between methods "internal" and "wininet" is now made by the method arguments of url() and download.file() and their defaults can be set via options. The out-of-the-box default remains "wininet" (as it has been since R 3.2.2).

The unexported and undocumented Windows-only devices cairo_bmp() , cairo_png() and cairo_tiff() have been removed. (These devices should be used as e.g. bmp(type = "cairo") .)

The previously included versions of zlib , bzip2 , xz and PCRE have been removed, so suitable external (usually system) versions are required (see the ‘R Installation and Administration’ manual).

(Windows) A make and R CMD config variable named COMPILED_BY has been added. This indicates which toolchain was used to compile R (and hence, which should be used to compile code in packages).

During the transition, the environment variable R_COMPILED_BY has been defined to indicate which toolchain was used to compile R (and hence, which should be used to compile code in packages). The COMPILED_BY variable described below will be a permanent replacement for this.

(Windows) R is now built using gcc 4.9.3. This build will require recompilation of at least those packages that include C++ code, and possibly others. A build of R-devel using the older toolchain will be temporarily available for comparison purposes.

configure looks for C functions __cospi , __sinpi and __tanpi and uses these if cospi etc are not found. (OS X is the main instance.)

The minimum preferred version of PCRE has since R 3.0.0 been 8.32 (released in Nov 2012). Versions 8.10 to 8.31 are now deprecated (with warnings from configure ), but will still be accepted until R 3.4.0.

The configure default on OS X is --disable-R-framework: enable this if you intend to install under ‘/Library/Frameworks’ and use with R.app .

The minimum supported version of OS X is 10.6 (‘Snow Leopard’): even that has been unsupported by Apple since 2012.

configure uses pkg-config for PNG, TIFF and JPEG where this is available. This should work better with multiple installs and with those using static libraries.

BSD networking is now required (except on Windows) and so capabilities("http/ftp") is always true.

libcurl version 7.28.0 or later with support for the https protocol is required for installation (except on Windows).

The included libtool script (generated by configure ) has been updated to version 2.4.6 (from 2.2.6a).

Support for very old versions of valgrind (e.g., 3.3.0) has been removed.

The make macro AWK which used to be made available to files such as ‘src/Makefile’ is no longer set.

The connections API now includes a function R_GetConnection() which allows packages implementing connections to convert R connection objects to Rconnection handles used in the API. Code which previously used the low-level R-internal getConnection() entry point should switch to the official API.

The deprecated header ‘Rdefines.h’ is now compatible with defining R_NO_REMAP .

Including header ‘S.h’ from C++ code would fail on some platforms, and so gives a compilation error on all.

The manual has long said that R headers should not be included within an extern "C" block, and almost all the packages affected by this change were doing so.

When R headers such as ‘R.h’ and ‘Rmath.h’ are called from C++ code in packages they include the C++ versions of system headers such as ‘<cmath>’ rather than the legacy headers such as ‘<math.h>’. (Headers ‘Rinternals.h’ and ‘Rinterface.h’ already did, and inclusion of system headers can still be circumvented by defining NO_C_HEADERS , including as from this version for those two headers.)

Similarly, entry point log1pexp also defined in ‘Rmath.h’ is remapped there to Rf_log1pexp

Code using it will need to be reinstalled.

The API call logspace_sum introduced in R 3.2.0 is now remapped as an entry point to Rf_logspace_sum , and its first argument has gained a const qualifier. ( PR#16470 )

download.file() with method = "wininet" incorrectly warned of download file length difference when reported length was unknown. ( PR#16805 )

A bug fix in R 3.0.2 fixed problems with locator() in X11, but introduced problems in Windows. Now both should be fixed. ( PR#15700 )

install.packages() could give false errors when options("pkgType") was "binary" . (Reported by Jose Claudio Faria.)

tsp(x) <- NULL did not handle correctly objects inheriting from both "ts" and "mts" . ( PR#16769 )

pretty(d, n, min.n, *) for date-time objects d works again in border cases with large min.n , returns a labels attribute also for small-range dates and in such cases its returned length is closer to the desired n . ( PR#16761 ) Additionally, it finally does cover the range of d , as it always claimed.

The spacing could be wrong when printing a complex array. (Report and patch by Lukas Stadler.)

Jumps to outer contexts, for example in error recovery, now make intermediate jumps to contexts where on.exit() actions are established instead of trying to run all on.exit() actions before jumping to the final target. This unwinds the stack gradually, releases resources held on the stack, and significantly reduces the chance of a segfault when running out of C stack space. Error handlers established using withCallingHandlers() and options("error") specifications are ignored when handling a C stack overflow error as attempting one of these would trigger a cascade of C stack overflow errors. (These changes resolve PR#16753 .)

The data.frame method of rbind() construction row.names works better in borderline integer cases, but may change the names assigned. ( PR#16666 )

cor() is now guaranteed to return a value with absolute value less than or equal to 1. ( PR#16638 )

tail.matrix() did not work for zero rows matrices, and could produce row “labels” such as "[1e+05,]" .

xpdrows.data.frame() was not checking for unique row names; in particular, this affected assignment to non-existing rows via numerical indexing. ( PR#16570 )

method = "libcurl" connections signal errors rather than retrieving HTTP error pages (where the ISP reports the error).

A coef() method for class "maov" has been added to allow vcov() to work with multivariate results. ( PR#16380 )

The first arguments of .colSums() etc (with an initial dot) are now named x rather than X (matching colSums() ): thus error messages are corrected.

C-level asChar(x) is fixed for when x is not a vector, and it returns "TRUE" / "FALSE" instead of "T" / "F" for logical vectors.

format.POSIXlt() behaved incorrectly in R 3.2.4. E.g. the output of format(as.POSIXlt(paste0(1940:2000,"-01-01"), tz = "CET"), usetz = TRUE) ended in two "CEST" time formats.

It extracts more error messages from the LaTeX logs when in emulation mode.

tools::texi2dvi() has a workaround for problems with the texi2dvi script supplied by texinfo 6.1.

The data.frame method of rbind() gains an optional argument stringsAsFactors (instead of only depending on getOption("stringsAsFactors") ).

shQuote() gains type = "cmd2" for quoting in cmd.exe in Windows. (Response to PR#16636 .)

summary(x) now prints with less rounding when x contains infinite values. (Request of PR#16620 .)

install.packages() and related functions now give a more informative warning when an attempt is made to install a base package.

R CMD check will leave a log file ‘build_vignettes.log’ from the re-building of vignettes in the ‘.Rcheck’ directory if there is a problem, and always if environment variable _R_CHECK_ALWAYS_LOG_VIGNETTE_OUTPUT_ is set to a true value.

The C header file ‘S.h’ is no longer documented: its use should be replaced by ‘R.h’.

The make macro AWK which is long unused by R itself but recorded in file ‘etc/Makeconf’ is deprecated and will be removed in R 3.3.0.

Use of SUPPORT_OPENMP from header ‘Rconfig.h’ is deprecated in favour of the standard OpenMP define _OPENMP.

summary.data.frame() now displays NA s in Date columns in all cases. ( PR#16709 )

approxfun(*, method="constant") and hence ecdf() which calls the former now correctly “predict” NaN values as NaN .

[dpqr]nbinom(*, size=Inf, mu=.) now works as limit case, for ‘dpq’ as the Poisson. ( PR#16727 ) pnbinom() no longer loops infinitely in border cases.

The X11() device sometimes froze on Red Hat Enterprise Linux 6. It now waits for MapNotify events instead of Expose events, thanks to Siteshwar Vashisht. ( PR#16497 )

available.packages() sometimes deleted the wrong file when cleaning up temporary files. ( PR#16712 )

The figures in help pages such as ?points were accidentally damaged, and did not appear in R 3.2.3. ( PR#16708 )

pretty(D) for date-time objects D now also works well if range(D) is (much) smaller than a second. In the case of only one unique value in D , the pretty range now is more symmetric around that value than previously. Similarly, pretty(dt) no longer returns a length 5 vector with duplicated entries for Date objects dt which span only a few days.

smooth(*, do.ends=TRUE) did not always work correctly in R versions between 3.0.0 and 3.2.3.

cor.test() now calculates very small p values more accurately (affecting the result only in extreme not statistically relevant cases). ( PR#16704 )

reorder() and midcache.dendrogram() now are non-recursive and hence applicable to somewhat deeply nested dendrograms, thanks to a proposal by Suharto Anggono in PR#16424 .

The as.hclust() method for "dendrogram" s failed often when there were ties in the heights.

dummy.coef.lm() now works in more cases, thanks to a proposal by Werner Stahel ( PR#16665 ). In addition, it now works for multivariate linear models ( "mlm" , manova ) thanks to a proposal by Daniel Wollschlaeger.

withCallingHandler() now (again) handles warnings even during S4 generic's argument evaluation. ( PR#16111 )

as.data.frame.vector(*, row.names=*) no longer produces ‘corrupted’ data frames from row names of incorrect length, but rather warns about them. This will become an error.

The internal deparser did not add parentheses when necessary, e.g. before [] or [[]] . (Reported by Lukas Stadler; additional fixes included as well).

require() etc now give the correct entry of lib.loc in the warning about an old version of a package masking a newer required one.

addmargins() now adds dimnames for the extended margins in all cases, as always documented.

array(.., dimnames = *) now warns about non- list dimnames and, from R 3.3.0, will signal the same error for invalid dimnames as matrix() has always done.

ngettext() now uses the same default domain as gettext() . ( PR#14605 )

file.copy(overwrite = FALSE) would signal a successful copy when none had taken place. ( PR#16576 )

View() now displays nested data frames in a more friendly way. (Request with patch in PR#15915 .)

The included version of PCRE has been updated to 8.38, a bug-fix release.

loess(..., iterTrace=TRUE) now provides diagnostics for robustness iterations, and the print() method for summary(<loess>) shows slightly more.

(Windows) MiKTeX removed its texi2dvi.exe command in Sept 2015: tools::texi2dvi() tries texify.exe if it is not found.

The ‘emulation’ part of tools::texi2dvi() has been somewhat enhanced, including supporting quiet = TRUE . It can be selected by texi2dvi = "emulation" .

which.min(x) and which.max(x) may be much faster for logical and integer x and now also work for long vectors.

Windows "wininet" FTP first tries EPSV / PASV mode rather than only using active mode (reported by Dan Tenenbaum).

(Windows) Compatibility information has been added to the manifests for ‘Rgui.exe’, ‘Rterm.exe’ and ‘Rscript.exe’. This should allow win.version() and Sys.info() to report the actual Windows version up to Windows 10.

Some recently-added Windows time zone names have been added to the conversion table used to convert these to Olson names. (Including those relating to changes for Russia in Oct 2014, as in PR#16503 .)

Source installation on Windows has been modified to allow for MiKTeX installations without texi2dvi.exe . See file ‘MkRules.dist’.

Various macros can be set to override the default behaviour of configure when detecting OpenMP: see file ‘config.site’.

configure now supports the OpenMP flags -fopenmp=libomp (clang) and -qopenmp (Intel C).

The configure default for MAIN_LDFLAGS has been changed for the FreeBSD, NetBSD and Hurd OSes to one more likely to work with compilers other than gcc (FreeBSD 10 defaults to clang ).

configure has a new argument --disable-java to disable the checks for Java.

The included configuration code for libintl has been updated to that from gettext version 0.19.5.1 — this should only affect how an external library is detected (and the only known instance is under OpenBSD). (Wish of PR#16464 .)

data(package=*) is more careful in determining the path.

poly(x, ..) now works when either raw=TRUE or coef is specified. ( PR#16597 )

var() and hence sd() warn about factor arguments which are deprecated now. ( PR#16564 )

When bs(*, Boundary.knots=) had boundary knots inside the data range, extrapolation was somewhat off. (Patch by Trevor Hastie.)

The browser did not truncate the display of the function when exiting with options("deparse.max.lines") set. ( PR#16581 )

If the expression in the traceback was too long, traceback() did not report the source line number. (Patch by Kirill Müller.)

splineDesign(*, outer.ok=TRUE) (splines) is better now ( PR#16549 ), and interpSpline() now allows sparse=TRUE for speedup with non-small sizes.

Modifying slots of S4 objects could fail when the methods package was not attached. ( PR#16545 )

The built-in HTTP server converted entire Content-Type to lowercase including parameters which can cause issues for multi-part form boundaries ( PR#16541 ).

within(df, ..) no longer drops columns whose name start with a "." .

read.dcf() sometimes misread lines longer than 8191 characters. (Reported by Hervé Pagès with a patch.)

When operating in a non-UTF-8 multibyte locale (e.g. an East Asian locale on Windows), grep() and related functions did not handle UTF-8 strings properly. ( PR#16264 )

abbreviate() did not give names to the return value if minlength was zero, unlike when it was positive.

The print width of character strings marked as "latin1" or "bytes" was in some cases computed incorrectly.

Help for which.min() is now more precise about behavior with logical arguments. ( PR#16532 )

nchar(x, "w") returned -1 for characters it did not know about (e.g. zero-width spaces): it now assumes 1. It now knows about most zero-width characters and a few more double-width characters.

rchisq(*, df=0, ncp=0) now returns 0 instead of NaN , and dchisq(*, df=0, ncp=*) also no longer returns NaN in limit cases (where the limit is unique). ( PR#16521 )

Removed some spurious warnings from configure about the preprocessor not finding header files. ( PR#15989 )

detach() ing the methods package keeps .isMethodsDispatchOn() true, as long as the methods namespace is not unloaded.

topenv(baseenv()) returns baseenv() again as in R 3.1.0 and earlier. This also fixes compilerJIT(3) when used in ‘.Rprofile’.

(Windows) Sys.info() was out of step with win.version() and did not report Windows 8.

Coercing a list without names to a data frame is faster if the elements are very long. ( PR#16467 )

close() now reports the status of a pipe() connection opened with an explicit open argument. ( PR#16481 )

model.tables(type = "means") and hence TukeyHSD() now support "aov" fits without an intercept term. ( PR#16437 )

The description of dataset ToothGrowth has been improved/corrected. ( PR#15953 )

regexpr(pat, x, perl = TRUE) with Python-style named capture did not work correctly when x contained NA strings. ( PR#16484 )

(Windows only) The default method for accessing URLs via download.file() and url() has been changed to be "wininet" using Windows API calls. This changes the way proxies need to be set and security settings made: there have been some reports of ftp: sites being inaccessible under the new default method (but the previous methods remain available).

Support for https:// URLs is available on Windows, and on other platforms if support for libcurl was compiled in and if that supports the https protocol (system installations can be expected to do). So https:// support can be expected except on rather old OSes (an example being OS X ‘Snow Leopard’, where a non-system version of libcurl can be used).

It is now easier to use secure downloads from https:// URLs on builds which support them: no longer do non-default options need to be selected to do so. In particular, packages can be installed from repositories which offer https:// URLs, and those listed by setRepositories() now do so (for some of their mirrors).

capture.output() gets optional arguments type and split to pass to sink() , and hence can be used to capture messages.

chooseCRANmirror() and chooseBioCmirror() now offer HTTPS mirrors in preference to HTTP mirrors. This changes the interpretation of their ind arguments: see their help pages.

There are implications for how proxies need to be set (see ?download.file ).

This means that https:// URLs can be read by default by download.file() (they have been readable by file() and url() since R 3.2.0).

Thus by default the "internal" method for download.file() and url() uses the "wininet" method: to revert to the previous default use setInternet2(FALSE) .

(Windows only) setInternet2(TRUE) is now the default. The command-line option --internet2 and environment variable R_WIN_INTERNET2 are now ignored.

(Non-Windows only) download.file() with default method = "auto" now chooses "libcurl" if that is available and a https:// or ftps:// URL is used.

configure now supports texinfo version 6.0, which (unlike the change from 4.x to 5.0) is a minor update. (Wish of PR#16456 .)

cmdscale() gets new option list. for increased flexibility when a list should be returned.

Header ‘Rconfig.h’ now defines HAVE_ALLOCA_H if the platform has the ‘alloca.h’ header (it is needed to define alloca on Solaris and AIX, at least: see ‘Writing R Extensions’ for how to use it).

The libtool script generated by configure has been modified to support FreeBSD >= 10 ( PR#16410 ).

getClass("foo") now also returns a class definition when it is found in the cache more than once.

ttkimage() did not (and could not) work so was removed. Ditto for tkimage.cget() and tkimage.configure() . Added two Ttk widgets and missing subcommands for Tk's image command: ttkscale() , ttkspinbox() , tkimage.delete() , tkimage.height() , tkimage.inuse() , tkimage.type() , tkimage.types() , tkimage.width() . ( PR#15372 , PR#16450 )

polym() gains a coefs = NULL argument and returns class "poly" just like poly() which gets a new simple=FALSE option. They now lead to correct predict() ions, e.g., on subsets of the original data.

Auto-printing of S3 and S4 values now searches for print() in the base namespace and show() in the methods namespace instead of searching the global environment.

qt(*, df=Inf, ncp=.) now uses the natural qnorm() limit instead of returning NaN . ( PR#16475 )

readBin() could fail on the SPARC architecture due to alignment issues. (Reported by Radford Neal.)

Reference classes that inherited from reference classes in another package could invalidate methods of the inherited class. Fixing this requires adding the ability for methods to be “external”, with the object supplied explicitly as the first argument, named .self . See "Inter-Package Superclasses" in the documentation.

The "port" algorithm of nls() could give spurious errors. (Reported by Radford Neal.)

The dendrogram method of labels() is much more efficient for large dendrograms, now using rapply() . (Comment #15 of PR#15215 )

download.packages() failed for type equal to either "both" or "binary" . (Reported by Dan Tenenbaum.)

prettyNum() gains a new option input.d.mark which together with other changes, e.g., the default for decimal.mark , fixes some format() ting variants with non-default getOption("OutDec") such as in PR#16411 .

options(OutDec = s) now signals a warning (which will become an error in the future) when s is not a string with exactly one character, as that has been a documented requirement.

strptime() could overflow the allocated storage on the C stack when the timezone had a non-standard format much longer than the standard formats. (Part of PR#16328 .)

matrix(x, nr, nc, byrow = TRUE) failed if x was an object of type "expression" .

getGraphicsEvent() could cause a crash if a graphics window was closed while it was in use. ( PR#16438 )

If the na.action argument was used in model.frame() , the original data could be modified. ( PR#16436 )

The HTML help page links to demo code failed due to a change in R 3.2.0. ( PR#16432 )

as.character.srcref() gains an argument to allow characters corresponding to a range of source references to be extracted.

The included version of PCRE has been updated to 8.37, a bug-fix release.

lengths(x) now also works (trivially) for atomic x and hence can be used more generally as an efficient replacement of sapply(x, length) and similar.

nchar(x, *) and nzchar(x) gain a new argument keepNA which governs how the result for NA s in x is determined. For nzchar() in general and nchar() in the R 3.2.x series, the default remains FALSE which is fully back compatible. From R 3.3.0, nchar() 's default will change to keepNA = NA and you are advised to consider this for code portability.

install.packages() now allows type = "both" with repos = NULL if it can infer the type of file.

utf8ToInt() now checks that its input is valid UTF-8 and returns NA if it is not.

On some systems, the first string comparison after a locale change would result in NA .

slotNames(.) is now correct for "signature" objects (mostly used internally in methods).

arima(*, xreg = .) (for d >= 1 ) computes estimated variances based on a the number of effective observations as in R version 3.0.1 and earlier. ( PR#16278 )

HTML vignettes opened using vignette() did not support links into the rest of the HTML help system. (Links worked properly when the vignette was opened using browseVignettes() or from within the help system.)

summaryRprof() could fail when the profile contained only two records. ( PR#16395 )

cummax(x) now correctly propagates NA s also when x is of type integer and begins with an NA .

The .Primitive default methods of the logic operators, i.e., ! , & and | , now give correct error messages when appropriate, e.g., for `&`(TRUE) or `!`() . ( PR#16385 )

Under some circumstances using the internal PCRE when building R from source would cause external libs such as -llzma to be omitted from the main link.

The quietly argument of library() is now correctly propagated from .getRequiredPackages2() .

The low-level functions .rowSums() etc. did not check the length of their argument, so could segfault. ( PR#16367 )

If the CRAN mirror was not set, install.packages(type = "both") and related functions could repeatedly query the user for it. (Part of PR#16362 )

The parser could overflow internally when given numbers in scientific format with extremely large exponents. ( PR#16358 )

plotNode() , the workhorse of the plot method for "dendrogram" s is no longer recursive, thanks to Suharto Anggono, and hence also works for deeply nested dendrograms. ( PR#15215 )

Parse data for very long strings was not stored. ( PR#16354 )

Rscript and command line R silently ignored incomplete statements at the end of a script; now they are reported as parse errors. ( PR#16350 )

A change in RSiteSearch() in R 3.2.0 caused it to submit invalid URLs. ( PR#16329 )

apply(a, M, function(u) c(X = ., Y = .)) again has dimnames containing "X" and "Y" (as in R < 3.2.0).

On some platforms nchar(x, "c") and nchar(x, "w") would return values (possibly NA ) for inputs which were declared to be UTF-8 but were not, or for invalid strings without a marked encoding in a multi-byte locale, rather than give an error. Additional checks have been added to mitigate this.

as.integer("111111111111") now gives NA (with a warning) as it does for the corresponding numeric or negative number coercions. Further, as.integer(M + 0.1) now gives M (instead of NA) when M is the maximal representable integer.

acf() and ccf() now guarantee values strictly in [-1,1] (instead of sometimes very slightly outside). PR#15832 .

Higher order functions such as the apply functions and Reduce() now force arguments to the functions they apply in order to eliminate undesirable interactions between lazy evaluation and variable capture in closures. This resolves PR#16093 .

methods() reports S4 in addition to S3 methods; output is simplified when the class argument is used. .S3methods() and methods::.S4methods() report S3 and S4 methods separately.

unzip() will now warn if it is able to detect truncation when unpacking a file of 4GB or more (related to PR#16243 ).

The code completion mechanism can now be replaced by a user-specified completer function, for (temporary) situations where the usual code completion is inappropriate.

Code completion for namespaces now recognizes all loaded namespaces, rather than only the ones that are also attached.

The print() methods for "htest" , "pairwise.htest" and "power.htest" objects now have a digits argument defaulting to (a function of) getOption("digits") , and influencing all printed numbers coherently. Unavoidably, this changes the display of such test results in some cases.

BIC(mod) and BIC(mod, mod2) now give non-NA numbers for arima() fitted models, as nobs(mod) now gives the number of “used” observations for such models. This fixes PR#16198 , quite differently than proposed there.

URLencode() will not by default encode further URLs which appear to be already encoded.

The default method of image() has an explicit check for a numeric or logical matrix (which was always required).

The matrix methods of cbind() and rbind() allow matrices as inputs which have 2^31 or more elements. (For cbind() , wish of PR#16198 .)

New lengths() function for getting the lengths of all elements in a list.

The help search system now takes \keyword entries in Rd files which are not standard keywords (as given in ‘KEYWORDS’ in the R documentation directory) as concepts. For standard keyword entries the corresponding descriptions are additionally taken as concepts.

New function .getNamespaceInfo() , a no-check version of getNamespaceInfo() mostly for internal speedups.

New function hsearch_db() in package utils for building and retrieving the help search database used by help.search() , along with functions for inspecting the concepts and keywords in the help search database.

(Windows.) download.file(quiet = FALSE) now uses text rather than Windows progress bars in non-interactive use.

cbind() and rbind() will delegate recursively to methods::cbind2 ( methods::rbind2 ) when at least one argument is an S4 object and S3 dispatch fails (due to ambiguity).

cbind() and rbind() now consider S4 inheritance during S3 dispatch and also obey deparse.level .

The memory manager now grows the heap more aggressively. This reduces the number of garbage collections, in particular while data or code are loaded, at the expense of slightly increasing the memory footprint.

names(env) now returns all the object names of an environment env , equivalently to ls(env, all.names = TRUE, sorted = FALSE) and also to the names of the corresponding list, names(as.list(env, all.names = TRUE)) . Note that although names() returns a character vector, the names have no particular ordering.

parent.env<- can no longer modify the parent of a locked namespace or namespace imports environment. Contributed by Karl Millar.

download.file() has new method "wininet" , selected as the default by --internet2 or setInternet2() .

The Windows internet functions are still selected by flag --internet2 or setInternet2() . This can be overridden for an url() connection via its new method argument.

(Windows.) The DLLs ‘internet.dll’ and ‘internet2.dll’ have been merged. In this version it is safe to switch (repeatedly) between the internal and Windows internet functions within an R session.

When file() or url() is invoked with a https:// or ftps:// URL which the current method cannot handle, it switches to a suitable method if one is available.

url() has a new method "libcurl" which handles more URL schemes and follows redirections. The default method is controlled by a new option url.method , which applies also to the opening of URLs via file() (which happens implicitly in functions such as read.table .)

download.file() has a new optional method "libcurl" which will handle more URL schemes, follow redirections, and allows simultaneous downloads of multiple URLs.

curlGetHeaders() retrieves the headers for http://, https://, ftp:// and ftps:// URLs: analysis of these headers can provide insights into the ‘existence’ of a URL (it might for example be permanently redirected) and is so used in R CMD check --as-cran .

libcurlVersion() reports the version in use, and other details of the "libcurl" build including which URL schemes it supports.

capabilities("libcurl") reports if this is available.

Optional use of libcurl (version 7.28.0 from Oct 2012 or later) for Internet access:

topenv() has been made .Internal() for speedup, based on Peter Haverty's proposal in PR#16140 .

match.call() gains an envir argument for specifying the environment from which to retrieve the ... in the call, if any; this environment was wrong (or at least undesirable) when the definition argument was a function.

New get0() function, combining exists() and get() in one call, for efficiency.

Speed-up from Peter Haverty for ls() and methods:::.requirePackage() speeding up package loading. ( PR#16133 )

New check_packages_in_dir_changes() function in package tools for conveniently analyzing how changing sources impacts the check results of their reverse dependencies.

A new plot() method for class "raster" has been added.

library() will report a warning when an insufficient dependency version is masking a sufficient one later on the library search path.

names(x) <- NULL now clears the names of call and ... objects.

as.table() now allows tables with one or more dimensions of length 0 (such as as.table(integer()) ).

vapply(x, FUN, FUN.VALUE) is more efficient notably for large length(FUN.VALUE) ; as extension of PR#16061 .

Calling callGeneric() without arguments now works with primitive generics to some extent.

New function extSoftVersion() to report on the versions of third-party software in use in this session. Currently reports versions of zlib , bzlib , the liblzma from xz , PCRE, ICU, TRE and the iconv implementation.

example() gets a new optional argument run.donttest and tools::Rd2ex() a corresponding commentDonttest , with a default such that example(..) in help examples will run \donttest code only if used interactively (a change in behaviour).

A new function debuggingState() has been added, allowing to temporarily turn off debugging.

apply(m, 2, identity) is now the same as the matrix m when it has named row names.

The byte-code compiler and interpreter include new instructions that allow many scalar subsetting and assignment and scalar arithmetic operations to be handled more efficiently. This can result in significant performance improvements in scalar numerical code.

crossprod(x, y) allows more matrix coercions when x or y are vectors, now equalling t(x) %*% y in these cases (also reported by Radford Neal). Similarly, tcrossprod(x,y) and %*% work in more cases with vector arguments.

Function returnValue() has been added to give on.exit() code access to a function's return value for debugging purposes.

The "source" attribute (which has not been added to functions by R since before R version 2.14.0) is no longer treated as special.

is.recursive(x) is no longer true when x is an external pointer, a weak reference or byte code; the first enables all.equal(x, x) when x <- getClass(.) .

options(OutDec =) can now specify a multi-byte character, e.g., options(OutDec = "\u00b7") in a UTF-8 locale.

tools::parse_Rd() gains a new permissive argument which converts unrecognized macros into text. This is used by utils:::format.bibentry to allow LaTeX markup to be ignored.

A number of macros have been added in the new ‘share/Rd’ directory for use in package overview help pages, and promptPackage() now makes use of them.

Packages may now use a file of common macro definitions in their help files, and may import definitions from other packages.

dget() gains a new argument keep.source which defaults to FALSE for speed ( dput() and dget() are most often used for data objects where this can make dget() many times faster).

merge() can create a result which uses long vectors on 64-bit platforms.

printNum() and hence format() and formatC() give a warning if big.mark and decimal.mark are set to the same value (period and comma are not uncommonly used for each, and this is a check that conventions have not got mixed).

getOption("OutDec") is now consulted by the print method for class "kmeans" , by cut() , dendrogram() , plot.ts() and quantile() when constructing labels and for the report from legend(trace = TRUE) .

The default for formatC(decimal.mark =) has been changed to be getOption("OutDec") ; this makes it more consistent with format() and suitable for use in print methods, e.g. those for classes "density" , "ecdf" , "stepfun" and "summary.lm" .

save() , saveRDS() and serialize() now support ascii = NA which writes ASCII files using sprintf("%a") for double/complex quantities. This is read-compatible with ascii = TRUE but avoids binary->decimal->binary conversions with potential loss of precision. Unfortunately the Windows C runtime's lack of C99 compliance means that the format cannot be read correctly there in R before 3.1.2.

dput() and friends gain new controls hexNumeric and digits17 which output double and complex quantities as, respectively, binary fractions (exactly, see sprintf("%a") ) and as decimals with up to 17 significant digits.

New function dir.exists() in package base to test efficiently whether one or more paths exist and are directories.

file.info(, extra_cols = FALSE) allows a minimal set of columns to be computed on Unix-alikes: on some systems without properly-configured caching this can be significantly faster with large file lists.

pairs() gains new arguments to select sets of variables to be plotted against each other.

pmatch() uses hashing in more cases and so is faster at the expense of using more memory. ( PR#15697 )

Graphics devices can add attributes to their description in .Device and .Devices . Several of those included with R use a "filepath" attribute.

Some unusual arguments to embedFonts() can now be specified as character vectors, and the defaults have been changed accordingly.

(Windows.) shell() no longer consults the environment variable SHELL: too many systems have been encountered where it was set incorrectly (usually to a path where software was compiled, not where it was installed). R_SHELL, the preferred way to select a non-default shell, can be used instead.

When x is missing and names is not false (including the default value), Sys.getenv(x, names) returns an object of class "Dlist" and hence prints tidily.

configure by default looks for the texi2any script from texinfo 5.1 or later, rather than the makeinfo program. ( makeinfo is a link to the Perl script texi2any in texinfo 5.x.)

Linux users should check that the -devel or -dev versions of packages zlib, bzip2/libbz2 and pcre as well as xz-devel/liblzma-dev (or similar names) are installed.

configure options --with-system-zlib, --with-system-bzlib and --with-system-pcre are now the default. For the time being there is fallback to the versions included in the R sources if no system versions are found or (unlikely) if they are too old.

The included version of liblzma has been updated to xz-utils 5.0.7 (minor bug fixes from 5.0.5).

It is possible to request the use of system valgrind headers via configure option --with-system-valgrind-headers: note the possible future incompatibility of such headers discussed in the 'R Installation and Administration' manual. (Wish of PR#16068 .)

The \donttest sections of R 's help files can be tested by make check TEST_DONTTEST=TRUE .

Most of these checks can also be selected by environment variables: see the ‘R Internals’ manual.

reports if the Title field does not appear to be in title case (see ‘Writing R Extensions’: there may be false positives, but note that technical words should be single-quoted and will then be accepted).

reports overwriting registered S3 methods from base/recommended packages. (Such methods are replaced in the affected package for the rest of the session, even if the replacing namespace is unloaded.)

reports non-ASCII characters in R source files when there is no package encoding declared in the ‘DESCRIPTION’ file.

checks the existence and accessibility of URLs in the ‘DESCRIPTION’, ‘CITATION’, ‘NEWS.Rd’ and ‘README.md’ files and in the help files (provided the build has libcurl support).

checks a ‘README.md’ file can be processed: this needs pandoc installed.

R CMD check now checks that the Title and Description fields are correctly terminated.

R CMD check will now by default continue with testing after many types of errors, and will output a summary count of errors at the end if any have occurred.

R CMD check gains option --test-dir to specify an alternative set of tests to run.

R CMD build adds a NeedsCompilation field if one is not already present in the ‘DESCRIPTION’ file.

The compiler package's utility function setCompilerOptions() now returns the old values invisibly. The initial optimization level can also be set with the environment variable R_COMPILER_OPTIMIZE.

The HTML generated by tools::Rd2HTML() and tools::toHTML() methods is now ‘ XHTML 1.0 Strict’.

There is support for testing the \dontrun and \donttest parts of examples in packages.

New entry point R_allocLD , like R_alloc but guaranteed to have sufficient alignment for long double pointers.

.C(DUP = FALSE) and .Fortran(DUP = FALSE) are now ignored, so arguments are duplicated if DUP = TRUE would do so. As their help has long said, .Call() is much preferred.

Entry points rbinom_mu , rnbinom_mu and rmultinom are remapped (by default) to Rf_rbinom_mu etc. This requires packages using them to be re-installed.

A number of changes to the Windows build system are in development. The following are currently in place.

(Windows) Changes have been made to support an experimental Windows toolchain based on GCC 4.9.2. The default toolchain continues to be based on GCC 4.6.3, as the new toolchain is not yet stable enough. A change to a new toolchain is expected during the R 3.2.x lifetime.

Building the manuals now requires texi2any from texinfo 5.1 or later. CRAN binary builds include the manuals, but by default builds from source will not, and they will be accessed from CRAN . See the comments in ‘src/gnuwin32/MkRules.dist’ for how to specify the location of texi2any .

A new make target rsync-extsoft has been added to obtain copies of the external libraries from CRAN .

Installation using external binary distributions of zlib, bzip2, liblzma, pcre, libpng, jpeglib and libtiff is now required, and the build instructions have been revised.

If you intend not to accept updates as source packages, you should use update.packages(type = "binary") .

There are options for what install.packages(type = "both") (possibly called via update.packages() ) will do if compilation of a source package is desirable: see ?options (under utils).

The default for option pkgType on platforms using binary packages is now "both" , so source packages will be tried if binary versions are not available or not up to date.

(Windows) The use of macro ZLIB_LIBS in file ‘src/Makevars.win’ (which has not been documented for a long time) now requires an external ‘libz.a’ to be available (it is part of the ‘goodies’ used to compile Windows binary packages). It would be simpler to use -lz instead.

The MethodsList class in package methods had been deprecated in R 2.11.0 and is defunct now. Functions using it are defunct if they had been deprecated in R 2.11.0, and are deprecated now, otherwise.

The configure option --with-valgrind-instrumentation=3 has been withdrawn, as it did not work with recent valgrind headers: it is now treated as level 2 .

Building R using the included versions of zlib , bzip2 , xz and PCRE is deprecated: these are frozen (bar essential bug-fixes) and will be removed for R 3.3.0.

An irrelevant warning message from updating subclass information was silenced (the namespace would not be writable in this case).

‘Abbreviated’ locale-specific day and month names could have been truncated in those rare locales where there are the same as the full names.

Auto-printing no longer duplicates objects when printing is dispatched to a method.

In qbeta() the inversion of pbeta() is much more sophisticated. This works better in corner cases some of which failed completely previously ( PR#15755 ), or were using too many iterations.

Subclass information is kept consistent when replacing an ordinary S4 class with an “old class” via the S4Class argument to setOldClass() . Thus, for example, a data.frame is valid for a list argument in the signature, and a factor is valid for vector arguments.

eigen(m) now defaults to symmetric = TRUE even when the dimnames are asymmetric if the matrix is otherwise symmetric. ( PR#16151 )

dput(pairlist(x)) generates a call to the pairlist constructor instead of the list constructor.

callNextMethod() should now work within a .local call when ... is absent from formals(.local) .

[<- and [[<- gain S4 data.frame methods to avoid corruption of S4 class information by the S3 methods.

Fixes for bugs in handling empty arguments and argument matching by name in log() .

Fixed two obscure bugs in pairlist subassignment, reported by Radford Neal as part of pqR issue 16.

browseURL() has been updated to work with Firefox 36.0 which has dropped support for the -remote interface.

(Windows.) download.file(cacheOK = FALSE) is now supported when ‘internet2.dll’ is used.

New function pcre_config() to report on some of the configuration options of the version of PCRE in use. In particular, this reports if regular expressions using \p{xx} are supported.

Single source or binary files can be supplied for install.packages(type = "both") and the appropriate type and repos = NULL will be inferred.

install.packages() and friends now accept the value type = "binary" as a synonym for the native binary type on the platform (if it has one).

model.frame() (used by lm() and many other modelling functions) now warns when it drops contrasts from factors. (Wish of PR#16119 )

sessionInfo() tries to report the OS version in use (not just that compiled under, and including details of Linux distributions).

icuSetCollate() now accepts locale = "ASCII" which uses the basic C function strcmp and so collates strings byte-by-byte in numerical order.

nlm() no longer modifies the callback argument in place (a new vector is allocated for each invocation, which mimics the implicit duplication that occurred in R < 3.1.0); note that this is a change from the previously documented behavior. ( PR#15958 )

capabilities() has a new item long.double which indicates if the build uses a long double type which is longer than double .

The as.dendrogram() method for "hclust" objects gains a check argument protecting against memory explosion for invalid inputs.

The internal method of download.file() can now handle files larger than 2GB on 32-bit builds which support such files (tested on 32-bit R running on 64-bit Windows).

configure accepts MAKEINFO=texi2any as another way to ensure texinfo 5.x is used when both 5.x and 4.x are installed.

The included version of PCRE has been updated to 8.36.

R CMD check notes uses of library() and require() in package code: see the section ‘Suggested packages’ of ‘Writing R Extensions’ for good practice.

R CMD build will correct line endings in all Makefiles, not just those in the ‘src’ directory.

R CMD check checks for the undeclared use of GNU extensions in Makefiles, and for Makefiles with a missing final linefeed.

R CMD check now checks the packages used in \donttest sections of the examples are specified in the ‘DESCRIPTION’ file. (These are needed to run the examples interactively.)

The configure option --with-valgrind-instrumentation=3 is deprecated and will be removed in R 3.2.0.

HTML conversion of \href markup in ‘.Rd’ files did not remove the backslash from \% and so gave an invalid URL. In a related change, the \ escape is now required in such URLs.

besselJ(1, 2^64) and besselY(..) now signal a warning, returning NaN instead of typically segfaulting. (Issue 3 of PR#15554 )

The xtfrm() method for class "Surv" has been corrected and its description expanded.

RShowDoc("NEWS", "txt") had not been updated for the layout changes of R 3.1.0.

‘R_ext/Lapack.h’ had not been updated for changes made by LAPACK to the argument lists of its (largely internal) functions dlaed2 and dlaed3 . ( PR#16157 )

Unix-alike builds without a suitable makeinfo were documented to link the missing HTML manuals to CRAN, but did not.

If a package was updated and attached when its namespace was already loaded, it could end up with parts from one version and parts from the other. ( PR#16120 )

power.t.test() and power.prop.test() now make use of the extendInt option of uniroot() and hence work in more extreme cases. ( PR#15792 )

Port Tomas Kalibera's fix from R-devel that restores the loadMethod() fast path, effectively doubling the speed of S4 dispatch.

Declared vignette encodings are now always passed to the vignette engine.

Loading packages incorrectly defining an S4 generic followed by a function of the same name caused an erroneous cyclic namespace dependency error.

Inter alia that fix gives the documented behaviour for substr(x, 1, 2) <- "" (subsequently reported as PR#16214 ).

Rare over-runs detected by AddressSanitizer in substr() and its replacement version have been avoided.

drop.terms() dropped some of the attributes of the object it was working with. ( PR#16029 )

prompt() did not escape percent signs in the automatically generated usage section of help files.

download.file() reported downloaded sizes as 0KB if less than 1MB, only for R 3.1.2 and only on big-endian platforms.

Extremely large exponents on zero expressed in scientific notation (e.g. 0.0e50000 ) could give NaN . ( PR#15976 )

"noquote" objects may now be used as columns in data frames. ( PR#15997 )

abs() failed with named arguments when the argument was complex. ( PR#16047 )

The parser now gives an error if a null character is included in a string using Unicode escapes. ( PR#16046 )

If a package had extra documentation files but no vignette, the HTML help system produced an empty index page.

(Windows.) Rscript.exe was missing a manifest specifying the modern style for common controls (e.g., the download progress bar).

Omegahat is no longer listed as providing Windows binary packages, e.g. by setRepositories() . It has no binary packages available for R 3.1.x and those for earlier versions were 32-bit only.

The Bioconductor ‘version’ used by setRepositories() now defaults to 3.0 . (It can be set at runtime via environment variable R_BIOC_VERSION.)

utils::URLencode() was updated to use unreserved and reserved characters from RFC 3986 ( http://tools.ietf.org/html/rfc3986 ) instead of RFC 1738.

New function icuGetCollate() to report on the ICU collation locale in use (if any).

Environment variable R_ICU_LOCALE can be used to set the default ICU locale, in case the one derived from the OS locale is inappropriate (this is currently necessary on Windows).

icuSetCollate() allows locale = "default" , and locale = "none" to use OS services rather than ICU for collation.

The X11() device and X11-based versions of the data editor and viewer (invoked by edit() and View() for data frames and matrices from command-line R ) check that the X11 libraries are installed and if not advises installing XQuartz.

(OS X only.) Package tcltk checks when loaded if it is linked against the CRAN X11-based Tcl/Tk and if so that the Tcl/Tk component and the X11 libraries are installed. This allows more informative error messages to be given advising the installation of the missing component or of XQuartz.

capabilities() now reports if ICU is compiled in for use for collation (it is only actually used if a suitable locale is set for collation, and never for a C locale).

For consistency with [dpqr]norm() , [dp]lnorm(sdlog = 0) model a point mass at exp(mulog) rather than return NaN (for an error).

embedFonts() now defaults to format = "ps2write" for ‘.ps’ and ‘.eps’ files. This is available in Ghostscript 9.x (since 2010) whereas the previous default, format = "pswrite" , was removed in Ghostscript 9.10.

LaTeX package upquote is no longer required for R 's use of inconsolata.

When building R as a shared library, the -L${R_HOME}/lib${R_ARCH} flag is placed earlier in the link commands used during installation and when packages are installed: this helps ensure that the current build has priority if an R shared library has already been installed by e.g. install-libR in a library mentioned in LDFLAGS (and not in ‘your system's library directory’ as documented). (Wish of PR#15790 .)

More types of external BLAS are recognized by name in that report.

The configure script reports on the more important capabilities/options which will not be compiled in.

R CMD check now by default checks code usage directly on the package namespace without loading and attaching the package and its suggests and enhances. For good practice with packages in the Suggests field, see §1.1.3.1 of ‘Writing R Extensions’. For use of lazy-data objects in the package's own code, see ?data .

R CMD check now reports empty importFrom declarations in a ‘NAMESPACE’ file, as these are common errors (writing importFrom( Pkg ) where import( Pkg ) was intended).

Running R CMD check with _R_CHECK_DEPENDS_ONLY_ true now makes the VignetteBuilder packages available even if they are listed in Suggests, since they are needed to recognise and process non-Sweave vignettes.

Work around a bug in OS X Yosemite where key environment variables may be duplicated causing issues in subprocesses. The duplicates are now removed on R startup (via Rprofile). ( PR#16042 )

The internal method of download.file() was not reporting file sizes and progress correctly on files larger than 2GB (inherited from libxml2 ). This is corrected for 64-bit builds (32-bit platforms may not support such files, but where possible will be supported in future versions of R ).

bw.SJ(x) and other bw.*() no longer segfault when x contains non-finite values. ( PR#16024 )

plot.histogram() and hence hist() now respect the xaxs , yaxs and lab graphics parameters. ( PR#16021 )

Matrices and arrays with last dimension zero did not print at all or incompletely. ( PR#16012 )

sub() and gsub() did not handle regular expressions like "\s{2,}" properly if the text contained NA or non-ASCII elements in a UTF-8 locale. Part of this was due to a bug in the TRE library. ( PR#16009 )

hist(x, breaks) is more robust in adding a small fuzz to few breaks when some are very large. ( PR#15988 )

identical() now also looks at the S4 bit.

objects like getClass("refClass")@prototype now print() and str() without error.

Rscript no longer passes --args to R when there are no extra (“user”) arguments.

Various possible buffer overruns have been prevented, and missed memory protection added. ( PR#15990 )

The plot method for "hclust" objects gets an optional argument check ; when that is true (the default) it checks more carefully for valid input.

merge(<dendrogram>, ..) now works correctly for two ‘independent’ dendrograms ( PR#15648 ), and still compatibly via adjust = "auto" e.g. for two branches of an existing dendrogram.

as.environment(list()) now works, and as.list() of such an environment is now the same as list() .

removeSource() did not properly handle expressions containing arguments that were supplied as missing, e.g. x[i,] . ( PR#15957 )

Subclassing an S4 class failed if the class required arguments to the generator, through its initialize() method.

The confint() method for nls() fits failed it these has specified parameter limits despite using an algorithm other than "port" . ( PR#15960 )

getAnywhere("C_pbinom") now returns correctly a single object (rather than unlisting it).

As good practice, stdout is now flushed before forking a child.

Forking in package parallel called C entry point exit in the child. This was unsafe ( _exit should have been called), and could flush stdin of the main R process (seen most often on Solaris).

callGeneric() could fail if the generic had ... as a formal argument. ( PR#15937 ).

edit() (and hence fix() ) failed if an object had a non-character attribute named "source" (an attribute that had been used in R prior to version 2.14.0).

drop1() failed if the scope argument had no variables to drop. ( PR#15935 )

as.hexmode(x) and as.octmode(x) now behave correctly for some numeric x , e.g., c(NA, 1) or c(1, pi) .

Rendering of \command in HTML versions of help pages has been improved: this is particularly evident on the help page for INSTALL .

A longstanding bug exhibited by nlminb() on Windows was traced to a compiler bug in gcc 4.6.3; a workaround has been put in place. ( PR#15244 and PR#15914 ).

prettyNum(x, zero.print=*) now also works when x contains NA s.

Added a new function promptImport() , to generate a help page for a function that was imported from another package (and presumably re-exported, or help would not be needed).

General help requests now default to trying all loaded packages, not just those on the search path.

Package help requests like package?foo now try the package foo whether loaded or not.

The warning when using partial matching with the $ operator on data frames is now only given when options("warnPartialMatchDollar") is TRUE .

install.packages(repos = NULL) now accepts http:// or ftp:// URLs of package archives as well as file paths, and will download as required. In most cases repos = NULL can be deduced from the extension of the URL.

Modifying internal logical scalar constants now results in an error instead of a warning.

Many package authors report that the RStudio graphics device does not work correctly with their package's use of dev.new() . The new option dev.new(noRStudioGD = TRUE) replaces the RStudio override by the default device as selected by R itself, still respecting environment variables R_INTERACTIVE_DEVICE and R_DEFAULT_DEVICE.

dbeta(, a,b) , pbeta() , qbeta() and rbeta() are now defined also for a = 0 , b = 0 , or infinite a and b (where they typically returned NaN before).

The function determining the default number of knots for smooth.spline() is now exported, as .nknots.smspl() .

For some compilers, integer addition could overflow without a warning. R 's internal code for both integer addition and subtraction is more robust now. ( PR#15774 )

type.convert() , read.table() and similar read.*() functions get a new numerals argument, specifying how numeric input is converted when its conversion to double precision loses accuracy. The default value, "allow.loss" allows accuracy loss, as in R versions before 3.1.0.

Error messages from bugs in embedded Sexpr code in Sweave documents now report the source location.

The Bioconductor ‘version’ used by setRepositories() can now be set by environment variable R_BIOC_VERSION at runtime, not just when R is installed. (It has been stated that Bioconductor will switch from ‘version’ 2.14 to ‘version’ 3.0 during the lifetime of the R 3.1 series.)

tools::buildVignette() and tools::buildVignettes() with clean = FALSE no longer remove any created files. buildvignette() gains a keep argument for more cleaning customization.

R CMD Sweave no longer cleans any files by default, compatibly with versions of R prior to 3.1.0. There are new options --clean, --clean=default and --clean=keepOuts.

When attach() reports conflicts, it does so compatibly with library() by using message() .

(Windows) There is updated support for the use of ICU for collation: see the ‘R Installation and Administration Manual’.

Compilers/linkers were handling the visibility control in ‘src/extra/xz’ inconsistently (and apparently in some cases incorrectly), so it has been simplified. ( PR#15327 )

There is more extensive advice on which LaTeX packages are required to install R or to make package manuals (as done by R CMD check ) in the ‘Writing R Extensions’ manual.

make install-libR now works if a sub-architecture is used, although the user will need to specify libdir differently for different sub-architectures.

There is a new target make uninstall-libR to remove an installed shared/static ‘libR’.

The included version of PCRE has been updated to 8.35.

configure option --with-internal-tzcode can now be used with variable rsharedir .

Fixed a lack of error checking in graphics event functions. (Found by Radford Neal; a different patch used here than the one in pqR.)

Potential memory protection errors in sort() and D() have been fixed. (Found by Radford Neal.)

A potential segfault in string allocation has been fixed. (Found by Radford Neal.)

The "help.try.all.packages" option was ignored when the shortcut syntax for help was used, e.g. ?foo .

parse() did not check its file argument was a connection if it was not a character string, so e.g. parse(FALSE) attempted to read from stdin .

Attempting to use data frames of 2^31 or more rows with merge() or to create a merged data frame of that size now gives a clearer error message.

getParseData() could return incorrect values for the parents of some elements. (Reported by Andrew Redd.)

Unserializing (including load() and readRDS() ) could silently return incorrect numeric values from ASCII saves if there was a read error.

Auto-printing would re-evaluate its argument when trying to dispatch to a print method. This is now avoided when possible.

mcmapply() was only parallelizing if the number of jobs was bigger than the number of cores. It now parallelizes if the number of jobs is more than one.

R is now trying harder to not cleanup child processes that were not spawned by mcparallel() on platforms that provide information about the source process of the SIGCHLD signal. This allows 3rd party libraries to manage the exit status of children that they spawn without R interfering.

The built-in help server did not declare the encoding for the ‘DESCRIPTION’ or other text files to be the package encoding, so non-ASCII characters could be displayed incorrectly.

(Windows Rgui console.) Unbuffered output was sometimes not output immediately if the prompt was not on the last line of the console.

system() returned success on some platforms even if the system was unable to launch a process. ( PR#15796 )

Hexadecimal constants such as 0x110p-5L which were incorrectly qualified by L were parsed incorrectly since R 3.0.0, with a slightly garbled warning. ( PR#15753 )

tools::Rd2ex(commentDontrun = FALSE) failed if the block had only one line.

anyDuplicated() silently returned wrong values when the first duplicate was at an index which was too large to be stored in an integer vector (although a lot of RAM and patience would have been needed to encounter this).

For a formula with exactly 32 variables the 32nd variable was aliased to the intercept in some C-level computations of terms, so that for example attempting to remove it would remove the intercept instead (and leave a corrupt internal structure). ( PR#15735 )

Misguided attempts to use chull() with non-finite points now give an error (related to PR#15777 ).

R CMD build will fail with an error if one of the packages specified in the VignetteBuilder field is not installed. (Without loading those packages it cannot be ascertained which files are intended to be vignettes. This means that the VignetteBuilder packages have to be installed for package checking too.) (Wish of PR#15775 .)

(Windows.) Commands such as Sys.which() and pipe() which needed to find the full path to a command could segfault if the ‘long’ path name was much longer than the ‘short’ path name (which Sys.which() returns), as the behaviour of the Windows API call had changed.

The device listing from dev2bitmap() and bitmap() was truncated to 1000 characters: modern versions of GhostScript on most platforms have many more devices.

The "CRAN" filter (see available.packages() ) no longer removes duplicates other than of packages on CRAN, and does not fail if there is no CRAN repository in getOption("repos") .

pbeta(x, a, b, log = TRUE) no longer behaves discontinuously (in a small x-region) because of denormalized numbers. Also, pbeta(1-1e-12, 1e30, 1.001, log=TRUE) now terminates “in real time”.

dnbinom(x, size = <large>, mu, log = TRUE) no longer underflows to -Inf for large mu , thanks to a suggestion from Alessandro Mammana (MPI MolGen, Berlin).

enc2utf8() and enc2native() did not always mark the encoding of the return values when it was known.

The return value from options(foo = NULL) was not the previous value of the option. ( PR#15781 )

Use of save(..., envir=) with named objects could fail. ( PR#15758 )

The C code used by strptime() rejected time-zone offsets of more than +1200 ( +1245 , +1300 and +1400 can occur). ( PR#15768 )

The s (“step into”) command in the debugger would cause R to step into expressions evaluated there, not just into functions being debugged. ( PR#15770 )

pchisq(x, df, ncp, log.p = TRUE) is more accurate and no longer underflows for small x and ncp < 80 , e.g, for pchisq(1e-5, df = 100, ncp = 1, log = TRUE) . (Based on PR#15635 and a suggestion by Roby Joehanes.)

dbinom(x, n) , pbinom() , dpois() , etc, are slightly less restrictive in checking if n is integer-valued. (Wish of PR#15734 .)

Programmers who use summary() in order to extract just a component which will be reliable (e.g., $cov.unscaled ) should wrap their calls in suppressWarnings() .

The summary() method for "lm" fits warns if the fit is essentially perfect, as most of the summary may be computed inaccurately (and with platform-dependent values).

The sunspot.month dataset has been amended and updated from the official source, whereas the sunspots and sunspot.year datasets will remain immutable. The documentation and source links have been updated correspondingly.

hclust() gains a new method "ward.D2" which implements Ward's method correctly. The previous "ward" method is "ward.D" now, with the old name still working. Thanks to research and proposals by Pierre Legendre.

The handling of DF[i,] <- a where i is of length 0 is improved. (Inter alia, fixes PR#15718 .)

The rightmost break for the "months" , "quarters" and "years" cases of hist.POSIXlt() has been increased by a day. (Inter alia, fixes PR#15717 .)

The pdf() device omits circles and text at extremely small sizes, since some viewers were failing on such files.

mcparallel() gains an option detach = TRUE which allows execution of code independently of the current session. It is based on a new estranged = TRUE argument to mcfork() which forks child processes such that they become independent of the parent process.

Some functionality of print.ts() is now available in .preformat.ts() for more modularity.

sort.list(method = "radix") now allows negative integers (wish of PR#15644 ).

file.path() removes any trailing separator on Windows, where they are invalid (although sometimes accepted). This is intended to enhance the portability of code written by those using POSIX file systems (where a trailing / can be used to confine path matching to directories).

The "Date" and "POSIXt" methods of seq() allows by = "quarter" for completeness ( by = "3 months" always worked).

The message for all.equal.numeric() reports a "scaled difference" only for scale != 1 .

There are explicit checks that check.attributes is logical, tolerance is numeric and scale is NULL or numeric. This catches some unintended positional matching.

A side effect is that some previously undetected errors of passing empty arguments (no object between commas) to all.equal() are detected and reported.

The methods for all.equal() and attr.all.equal() now have argument check.attributes after ... so it cannot be partially nor positionally matched (as it has been, unintentionally).

all.equal.list() gets a new argument use.names which by default labels differing components by names (if they match) rather than by integer index. Saved R output in packages may need to be updated.

pushBack() gains an argument encoding , to support reading of UTF-8 characters using scan() , read.table() and related functions in a non-UTF-8 locale.

warning() has a new argument noBreaks. , to simplify post-processing of output with options(warn = 1) .

arima() and makeARIMA() get a new optional argument SSinit , allowing the choice of a different s tate s pace initialization which has been observed to be more reliable close to non-stationarity: see PR#14682 .

The fast argument of KalmanLike() , KalmanRun() and KalmanForecast() has been replaced by update , which instead of updating mod in place, optionally returns the updated model in an attribute "mod" of the return value.

Also, a number of other changes to reduce copying of objects; all contributed by or based on suggestions by Michael Lawrence.

Avoid duplicating the right hand side values in complex assignments when possible. This reduces copying of replacement values in expressions such as Z$a <- a0 and ans[[i]] <- tmp : some package code has relied on there being copies.

read.table() , readLines() and scan() have a new argument to influence the treatment of embedded nuls.

Some versions of the tiff() device have further compression options.

dnorm(x, log = FALSE) is more accurate (but somewhat slower) for |x| > 5; as suggested in PR#15620 .

(On Windows, by default on OS X and optionally elsewhere.) The system C function strftime has been replaced by a more comprehensive version with closer conformance to the POSIX 2008 standard.

For platforms which support it, there is also a component "gmtoff" recording the offset from GMT where known.

Printing of date-times will make use of the time-zone abbreviation in use at the time, if known. For example, for Paris pre-1940 this could be LMT, PMT, WET or WEST. To enable this, the "POSIXlt" class has an optional component "zone" recording the abbreviation for each element.

Sweave now outputs ‘.tex’ files in UTF-8 if the input encoding is declared to be UTF-8, regardless of the local encoding. The UTF-8 encoding may now be declared using a LaTeX comment containing the string %\SweaveUTF8 on a line by itself.

Complex svd() now uses LAPACK subroutine ZGESDD , the complex analogue of the routine used for the real case.

fft() now works with longer inputs, from the 12 million previously supported up to 2 billion. ( PR#15593 )

as.factor() is faster when f is an unclassed integer vector (for example, when called from tapply() ).

colSums() and friends now have support for arrays and data-frame columns with 2^31 or more elements.

The "save.defaults" option can include a value for compression_level . (Wish of PR#15579 .)

Currently time_t is usually long and hence 64-bit on Unix-alike 64-bit platforms: however in several cases the time-zone database is 32-bit. For R for Windows it is 64-bit (for both architectures as from this version).

Platforms with a 64-bit time_t type are allowed to handle conversions between the "POSIXct" and "POSIXlt" classes for date-times outside the 32-bit range (before 1902 or after 2037): the existing workarounds are used on other platforms. (Note that time-zone information for post-2037 is speculative at best, and the OS services are tested for known errors and so not used on OS X.)

There is more support to explore the system's idea of time-zone names. Sys.timezone() tries to give the current system setting by name (and succeeds at least on Linux, OS X, Solaris and Windows), and OlsonNames() lists the names in the system's Olson database. Sys.timezone(location = FALSE) gives the previous behaviour.

print.table(x, zero.print = ".") now also has an effect when x is not integer-valued.

New functions cospi(x) , sinpi(x) , and tanpi(x) , for more accurate computation of cos(pi*x) , etc, both in R and the C API. Using these gains accuracy in some cases, e.g., inside lgamma() or besselI() . (Suggested by Morten Welinder in PR#15529 .)

make.names(names, unique=TRUE) now tries to preserve existing names. (Suggestion of PR#15452 .)

Added utils::fileSnapshot() and utils::changedFiles() functions to allow snapshots and comparison of directories of files.

combn(x, simplify = TRUE) now gives a factor result for factor input x (previously user error). (Related to PR#15442 .)

The text and PDF news files, including ‘NEWS’ and ‘NEWS.2’, have been moved to the ‘doc’ directory.

There is a new family, "ArialMT" , for the pdf() and postscript() devices. This will only be rendered correctly on viewers which have access to Monotype TrueType fonts (which are sometimes requested by journals).

There is a new function find_gs_cmd() in the tools package to locate a GhostScript executable. (This is an enhanced version of a previously internal function there.)

colorRamp() and colorRampPalette() now allow non-opaque colours and a ramp in opacity via the new argument alpha = TRUE . (Suggested by Alberto Krone-Martins, but optionally as there are existing uses which expect only RGB values.)

The way the unary operators ( + - ! ) handle attributes is now more consistent. If there is no coercion, all attributes (including class) are copied from the input to the result: otherwise only names, dims and dimnames are.

The parser has been modified to use less memory.

switch(f, ...) now warns when f is a factor, as this typically happens accidentally where the useR meant to pass a character string, but f is treated as integer (as always documented).

uniroot() gets new optional arguments, notably extendInt , allowing to auto-extend the search interval when needed. The return value has an extra component, init.it .

The "table" method for as.data.frame() (also useful as as.data.frame.table() ) now passes sep and base arguments to provideDimnames() .

arrayInd(*, useNames = TRUE) and, analogously, which(*, arr.ind = TRUE) now make use of names(.dimnames) when available.

New function anyNA() , a version of any(is.na(.)) which is fast for atomic vectors, based on a proposal by Tim Hesterberg. (Wish of PR#15239 .)

tools::Rdiff(useDiff = FALSE) is closer to the POSIX definition of diff -b (as distinct from the description in the man pages of most systems).

If a file contains numeric data with unrepresentable numbers of decimal places that are intended to be read as numeric, specify colClasses in read.table() to be "numeric" .

type.convert() (and hence by default read.table() ) returns a character vector or factor when representing a numeric input as a double would lose accuracy. Similarly for complex inputs.

There is a new option --use-system-tre to use a suitable system tre library: at present this means a version from their git repository, after corrections. (Wish of PR#15660 .)

R can now optionally be compiled to use reference counting instead of the NAMED mechanism by defining SWITCH_TO_REFCNT in ‘Rinternals.h’. This may become the default in the future.

configure now tests for a C++11-compliant compiler by testing some basic features. This by default tries flags for the compiler specified by CXX, but an alternative compiler, options and standard can be specified by variables CXX1X, CXX1XFLAGS and CXX1XSTD (e.g., -std=gnu++11).

This option also switches to the version of strftime included in directory ‘src/extra/tzone’.

The included (64-bit) time-zone conversion code and Olson time-zone database can be used instead of the system version: use configure option --with-internal-tzcode. This is the default on Windows and OS X. (Note that this does not currently work if a non-default rsharedir configure variable is used.)

The version of tzcode included in ‘src/extra/tzone’ has been updated. (Formerly used only on Windows.)

More of make check will work if recommended packages are not installed: but recommended packages remain needed for thorough checking of an R build.

The package checks in make check-devel and make check-recommended are done in parallel.

The more time-consuming regression tests are done in parallel.

Except on Windows: the tests of standard package examples in make check are done in parallel. This also applies to running tools::testInstalledPackages() .

There is some support for parallel testing of an installation, by setting TEST_MC_CORES to an integer greater than one to indicate the maximum number of cores to be used in parallel. (It is worth specifying at least 8 cores if available.) Most of these require a make program (such as GNU make and dmake ) which supports the $MAKE -j nproc syntax.

The included version of LAPACK has been updated to 3.5.0.

Fake installs now install the contents of directory ‘inst’: some packages use this to install e.g. C++ headers for use by other packages that are independent of the package itself. Option --no-inst can be used to get the previous behaviour.

There is support for compiling C++11 code in packages on suitable platforms: see ‘Writing R Extensions’.

R CMD INSTALL --build (not Windows) now defaults to the internal tar() unless R_INSTALL_TAR is set.

Help for S4 methods with very long signatures now tries harder to split the description in the Usage field to no more than 80 characters per line (some packages had over 120 characters).

For consistency, entries in ‘.Rinstignore’ are now matched case-insensitively on all platforms.

is no longer recognized as valid. Use MIT or BSD_2_clause instead, both of which need + file LICENSE.

Only vignettes sources in directory ‘vignettes’ are considered to be vignettes and hence indexed as such.

The CRANextra repository is no longer a default repository on Windows: all the binary versions of packages from CRAN are now on CRAN, although CRANextra contains packages from Omegahat and elsewhere used by CRAN packages.

Within the browser, the command help will display a short list of available commands.

A new browser command f has been added, to “finish” the current loop or function.

A new browser command s has been added, to “step into” function calls.

Calls to browser() are now consistent with calls to the browser triggered by debug() , in that Enter will default to n rather than c .

The behaviour of the code browser has been made more consistent, in part following the suggestions in PR#14985 .

Where supported, tools::texi2dvi() limits the number of passes tried to 20.

R CMD check --use-gct can be tuned to garbage-collect less frequently using gctorture2() via the setting of environment variable _R_CHECK_GCT_N_.

tools::checkFF() reports on .C and .Fortran calls with DUP = FALSE if argument check_DUP is true. This is selected by R CMD check by default.

R CMD check customizations such as _R_CHECK_DEPENDS_ONLY_ make available packages only in LinkingTo only for installation, and not for loading/runtime tests.

The flags returned by R CMD config --ldflags and (where installed) pkg-config --libs libR are now those needed to link a front-end against the (shared or static) R library.

R CMD Sweave and R CMD Stangle now process both Sweave and non-Sweave vignettes. The tools::buildVignette() function has been added to do the same tasks from within R .

R CMD build --no-vignettes is defunct: R CMD build --no-build-vignettes has been preferred since R 3.0.0.

R CMD check --no-rebuild-vignettes is defunct: R CMD check --no-build-vignettes has been preferred since R 3.0.0.

R CMD check --as-cran warns about a false value of the ‘DESCRIPTION’ field BuildVignettes for Open Source packages, and ignores it. (An Open Source package needs to have complete sources for its vignettes which should be usable on a suitably well-equipped system).

Functions suppressForeignCheck() and dontCheck() have been added to allow package authors to suppress false positive reports.

checkFF() (called by R CMD check by default) can optionally check foreign function calls for consistency with the registered type and argument count. This is the default for R CMD check --as-cran or can be enabled by setting environment variable _R_CHECK_FF_CALLS_ to registration (but is in any case suppressed by --install=no). Because this checks calls in which .NAME is an R object and not just a literal character string, some other problems are detected for such calls.

For consistency, R CMD build now matches entries in ‘.Rbuildignore’ and ‘vignettes/.install_extras’ case-insensitively on all platforms (not just on Windows).

Only vignettes sources in directory ‘vignettes’ are considered to be vignettes by R CMD check . That has been the preferred location since R 2.14.0 and is now obligatory.

allocVector3 has been added which allows custom allocators to be used for individual vector allocations.

Calls to SET_VECTOR_ELT() and SET_STRING_ELT() are now checked for indices which are in-range: several packages were writing one element beyond the allocated length.

The function LENGTH() now checks that it is only applied to vector arguments. However, in packages length() should be used. (In R itself LENGTH() is a macro without the function overhead of length() .)

The included LAPACK subset now contains ZGESDD and ZGELSD .

The never-documented remapping of prec() to fprec() in header ‘Rmath.h’ has been removed.

ftrunc() in header ‘Rmath.h’ is now a wrapper for the C99 function trunc() , which might as well be used in C code: ftrunc() is still needed for portable C++ code.

The remapping of rround() in header ‘Rmath.h’ has been removed: use fround() instead.

Remapping in the ‘Rmath.h’ header can be suppressed by defining R_NO_REMAP_RMATH.

(Windows only) A function R_WaitEvent() has been added (with declaration in header‘R.h’) to block execution until the next event is received by R .

The workaround of setting R_OSX_VALGRIND has been removed: it is not needed in current valgrind.

.C(DUP = FALSE) and .Fortran(DUP = FALSE) are now deprecated, and may be disabled in future versions of R . As their help has long said, .Call() is much preferred.

Many methods are no longer exported by package stats. They are all registered on their generic, which should be called rather than calling a method directly.

The long-deprecated use of \synopsis in the Usage section of ‘.Rd’ files has been removed: such sections are now ignored (with a warning).

Partial matching when using the $ operator on data frames now throws a warning and may become defunct in the future. If partial matching is intended, replace foo$bar by foo[["bar", exact = FALSE]] .

.find.package() and .path.package() are defunct: only the versions without the initial dot introduced in R 2.13.0 have ever been in the API.

Arguments EISPACK for eigen() and LINPACK for chol() , chol2inv() , solve() and svd() are ignored: LAPACK is always used.

The clipping region for a device was sometimes used in base graphics before it was set.

model.matrix() assumed that the stored dimnames for a matrix was NULL or length 2, but length 1 occurred.

printCoefmat() called from quite a few print() methods now obeys small getOption("width") settings, line wrapping the "signif. codes" legend appropriately. ( PR#15708 )

R would try to kill processes on exit that have pids ever used by a child process spawned by mcparallel even though the current process with that pid was not actually its child.

The dendrogram method of as.dendrogram() was hidden accidentally, ( PR#15703 ), and order.dendrogram(d) gave too much for a leaf d . ( PR#15702 )

In rare cases printing deeply nested lists overran a buffer by one byte and on a few platforms segfaulted. ( PR#15679 )

The bug fix to aggregrate() in PR#15004 introduced a new bug in the case of no grouping variables. ( PR#15699 )

The implicit S4 generics for primitives with ... in their argument list were incorrect. ( PR#15690 )

? applied to a call to an S4 generic failed in several cases. ( PR#15680 )

Some bugs in TRE have been corrected by updating from the git repository. This allows R to be installed on some platforms for which this was a blocker ( PR#15087 suggests Linux on ARM and HP-UX).

Extra checks have been added for unit resolution and conversion in grid, to catch instances of division-by-zero. This may introduce error messages in existing code and/or produce a different result in existing code (but only where a non-finite location or dimension may now become zero).

NOTE for anyone poking around within the graphics engine display list (despite the warnings not to) that this changes what is recorded by grid on the graphics engine display list.

Bug fix for pushing viewports in grid (reported by JJ Allaire and Kevin Ushey).

Where time zones have changed abbreviations over the years, the software tries to more consistently use the abbreviation appropriate to the time or if that is unknown, the current abbreviation. On some platforms where the C function localtime changed the tzname variables the reported abbreviation could have been that of the last time converted.

pbeta() and similar work better for very large (billions) ncp .

nls() with no start argument may now work inside another function (scoping issue).

Error messages involving non-syntactic names (e.g., as produced by `\r` when that object does not exist) now encode the control characters. (Reported by Hadley Wickham.)

Calling lm.wfit() with no non-zero weights gave an array-overrun in the Fortran code and a not very sensible answer. It is now special-cased with a simpler answer (no qr component).

Finalizers are marked to be run at garbage collection, but run only at a somewhat safer later time (when interrupts are checked). This circumvents some problems with finalizers running arbitrary code during garbage collection (the known instances being running options() and (C-level) path.expand() re-entrantly).

available.packages() is better protected against corrupt metadata files. (A recurring problem with Debian package shogun-r: PR#14713 .)

iconv(to = "utf8") is now accepted on all platforms (some implementations did already, but GNU libiconv did not: however converted strings were not marked as being in UTF-8). The official name, "UTF-8" is still preferred.

strptime() and the format() methods for classes "POSIXct" , "POSIXlt" and "Date" recognize strings with marked encodings: this allows, for example, UTF-8 French month names to be read on (French) Windows.

strptime() now checks the locale only when locale-specific formats are used and caches the locale in use: this can halve the time taken on OSes with slow system functions (e.g., OS X).

KalmanForecast(fast = FALSE) is now the default, and the help contains an example of how fast = TRUE can be used in this version. (The usage will change in 3.1.0.)

read.table() , readLines() and scan() now warn when an embedded nul is found in the input. (Related to PR#15625 which was puzzled by the behaviour in this unsupported case.)

The backtick may now be escaped in strings, to allow names containing them to be constructed, e.g. `\`` . ( PR#15621 )

On a Unix-alike Sys.timezone() returns NA if the environment variable TZ is unset, to distinguish it from an empty string which on some OSes means the UTC time zone.

There is some support to produce manuals in ebook formats. (See ‘doc/manual/Makefile’. Suggested by Mauro Cavalcanti.)

The HTML version of ‘An Introduction to R’ now has links to PNG versions of the figures.

There is a new function, La_version() , to report the version of LAPACK in use.

write.table() now handles matrices of 2^31 or more elements, for those with large amounts of patience and disc space.

A packaging of the Perl script and modules for texinfo 5.2 has been made available at http://www.stats.ox.ac.uk/pub/Rtools/ .

On Windows there is support for making ‘.texi’ manuals using texinfo 5.0 or later: the setting is in file ‘src/gnuwin32/MkRules.dist’.

The included version of PCRE has been updated to 8.34. This fixes bugs and makes the behaviour closer to Perl 5.18. In particular, the concept of ‘space’ includes VT and hence agrees with POSIX's.

install.packages(dependencies = value) for value = NA (the default) or value = TRUE omits packages only in LinkingTo for binary package installs.

The new field SysDataCompression in the ‘DESCRIPTION’ file allows user control over the compression used for ‘sysdata.rda’ objects in the lazy-load database.

Remapping of prec() and trunc() in the ‘Rmath.h’ header has been disabled in C++ code (it has caused breakage with libc++ headers).

The long undocumented remapping of rround() to Rf_fround() in header ‘Rmath.h’ is now formally deprecated: use fround() directly.

approx() and approxfun() now handle infinite values with the "constant" method. ( PR#15655 )

pbeta(x, a, b, log.p = TRUE) sometimes underflowed to zero for very small and very differently sized a , b . ( PR#15641 )

In locales where the abbreviated name of one month is a partial match for the full name of a later one, the %B format in strptime() could fail. An example was French on OS X, where juin is abbreviated to jui and partially matches juillet . Similarly for weekday names.

The count of observations used by KalmanRun() did not take missing values into account.

getSrcref() did not work on method definitions if rematchDefinition() had been used.

Plotting symbol pch = 14 had the triangle upside down on some devices (typically screen devices). The triangle is supposed to be point up. (Reported by Bill Venables.)

In some extreme cases (more than 10^15 ) integer inputs to dpqrxxx() functions might have been rounded up by one (with a warning about being non-integer). ( PR#15624 )

deparse() now deparses complex vectors in a way that re-parses to the original values. ( PR#15534 , patch based on code submitted by Alex Bertram.)

Using Sys.setlocale to set LC_NUMERIC to "C" (to restore the sane behavior) no longer gives a warning.

The code for date-times before 1902 assumed that the offset from GMT in 1902 was a whole number of minutes: that was not true of Paris (as recorded on some platforms).

Running R code in a tcltk callback failed to set the busy flag, which will be needed to tell OS X not to ‘App Nap’.

The bug fix in 3.0.2 for PR#15411 was too aggressive, and sometimes removed spaces that should not have been removed. ( PR#15583 )

rowsum() has more support for matrices and data frames with 2^31 or more elements. ( PR#15587 )

As a result of the 3.0.2 change about ‘the last second before the epoch’, most conversions which should have given NA returned that time. (The platforms affected include Linux and OS X, but not Windows nor Solaris.)

Some translations in base packages were being looked up in the main catalog rather than that for the package.

hcl() now honours NA inputs (previously they were mapped to black).

Several potential problems with compiler-specific behaviour have been identified using the ‘Undefined Behaviour Sanitizer’ in conjunction with the clang compiler.

The bmp() device was not recording res = NA correctly: it is now recorded as 72 ppi.

c() and related functions such as unlist() converted raw vectors to invalid logical vectors. ( PR#15535 )

HTML display of results from help.search() and ?? sometimes contained badly constructed links.

Double-clicking outside of the list box (e.g., on the scrollbar) of a Tk listbox widget generated by tk_select.list() no longer causes the window to close. ( PR#15407 )

Saved vignette results (in a ‘.Rout.save’ file) were not being compared to the new ones during R CMD check .

The validmu() and valideta() functions in the standard glm() families now also report non-finite values, rather than failing.

qcauchy(p, *) is now fully accurate even when p is very close to 1. ( PR#15521 )

The nonsensical use of nmax = 1 in duplicated() or unique() is now silently ignored.

Illegal characters in the input caused parse() (and thus source() ) to segfault. ( PR#15518 )

Sweave() did not restore the R output to the console if it was interrupted by a user in the middle of evaluating a code chunk. (Reported by Michael Sumner.)

Several functions did not handle zero-length vectors properly, including browseEnv() , format() , gl() , relist() and summary.data.frame() . (E.g., PR#15499 )

Errors in vignettes were not always captured and displayed properly. ( PR#15495 )

getGraphicsEvent() did not exit when a user closed the graphics window. ( PR#15208 )

namespaceImportFrom() needed to detect primitive functions when checking for duplicated imports (reported by Karl Forner).

aggregate() could fail when there were too many levels present in the by argument. ( PR#15004 )

Removing subclass back-references when S4 classes were removed or their namespace unloaded had several bugs (e.g., PR#15481 ).

str(..., strict.width = "cut") did not handle it properly when more than one line needed to be cut. (Reported by Gerrit Eichner.)

plot.lm() would sometimes scramble the labels in plot type 5. ( PR#15458 and PR#14837 )

rasterImage() and grid.raster() now give error on an empty (zero-length) raster. (Reported by Ben North.)

replayPlot() now checks if it is replaying a plot from the same session.

dbeta(x, a, b) with a or b within a factor of 2 of the largest representable number could infinite-loop. (Reported by Ioannis Kosmidis.)

tools::pkgVignettes() gains argument check ; if set to TRUE , it will warn when it appears a vignette requests a non-existent vignette engine.

utils::modifyList() gets a new argument keep.null allowing NULL components in the replacement to be retained, instead of causing corresponding components to be deleted.

Processing Sweave and Rd documents to PDF now renders backticks and single quotes better in several instances, including in \code and \samp expressions.

There is a new read-only par() parameter called "page" , which returns a logical value indicating whether the next plot.new() call will start a new page.

termplot() now has an argument transform.x to control the display of individual terms in the plot. ( PR#15329 )

The initialization of the regression coefficients for non-degenerate differenced models in arima() has been changed and in some examples avoids a local maximum. ( PR#15396 )

Dataset npk has been copied from MASS to allow more tests to be run without recommended packages being installed.

formatC(x) no longer copies the class of x to the result, to avoid misuse creating invalid objects as in PR#15303 . A warning is given if a class is discarded.

read.dcf() no longer has a limit of 8191 bytes per line. (Wish of PR#15250 .)

Code for the negative binomial distribution now treats the case size == 0 as a one-point distribution at zero.

Methods invoked by NextMethod() had a different dynamic parent to the generic. This was causing trouble where S3 methods invoked via lazy evaluation could lose track of their generic. ( PR#15267 )

When parse() finds a syntax error, it now makes partial parse information available up to the location of the error. (Request of Reijo Sund.)

seq() and seq.int() give more explicit error messages if called with invalid (e.g., NaN ) inputs.

If an invalid/corrupt .Random.seed object is encountered in the workspace it is ignored with a warning rather than giving an error. (This allows R itself to rely on a working RNG, e.g. to choose a random port.)

Various functions in stats and elsewhere that use non-standard evaluation are now more careful to follow the namespace scoping rules. E.g., stats::lm() can now find stats::model.frame() even if stats is not on the search path or if some package defines a function of that name.

New assertCondition() , etc. utilities in tools, useful for testing.

The tools::getVignetteInfo() function has been added to give information about installed vignettes.

unlist(x) now typically returns all non-list x s unchanged, not just the “vector” ones. Consequently, format(lst) now also works when the list lst has non-vector elements.

There is now support for the LaTeX style file ‘zi4.sty’ which has in some distributions replaced ‘inconsolata.sty’.

tail(warnings()) now works, via the new `[` method.

col2rgb() now converts factors to character strings not integer codes (suggested by Bryan Hanson).

str(x) is considerably faster for very large lists, or factors with 100,000 levels, the latter as in PR#15337 .

The example() and tools::Rd2ex() functions now have parameters to allow them to ignore \dontrun markup in examples. (Suggested by Peter Solymos.)

sum() for integer arguments now uses an integer accumulator of at least 64 bits and so will be more accurate in the very rare case that a cumulative sum exceeds 2^53 (necessarily summing more than 4 million elements).

This file contains news for R >= 3.0.0: news for the 0.x.y, 1.x.y and 2.x.y releases is in files ‘NEWS.0’, ‘NEWS.1’ and ‘NEWS.2’. The latter files are now installed when R is installed. An HTML version of news from 2.10.0 to 2.15.3 is available as ‘doc/html/NEWS.2.html’.

R CMD build makes more use of the ‘build’ sub-directory of package sources, for example to record information about the vignettes.

LaTeX style file upquote.sty is no longer included (the version was several years old): it is no longer used in R . A much later version is commonly included in LaTeX distributions but does not play well with the ae fonts which are the default for Sweave vignettes.

R CMD check optionally checks for non-standard top-level files and directories (which are often mistakes): this is enabled for --as-cran.

objects imported by ::: calls which do not exist.

objects imported by :: which are not exported.

objects imported via ::: calls where :: would do.

packages declared in Depends not imported via the ‘NAMESPACE’ file (except the standard packages). Objects used from Depends packages should be imported to avoid conflicts and to allow correct operation when the namespace is loaded but not attached.

packages which are used in library() or requires() calls in the R code but were already put on the search path via Depends.

namespaces declared in Imports but not imported from, neither in the ‘NAMESPACE’ file nor using the :: nor ::: operators.

packages declared in more than one of the Depends, Imports, Suggests and Enhances fields of the ‘DESCRIPTION’ file.

R CMD check does more thorough checking of declared packages and namespaces. It reports

on a Linux system and record that value rather than the frequently-changing full path such as ‘/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.25.x86_64’.

R CMD javareconf now supports the use of symbolic links for JAVA_HOME on platforms which have realpath . So it is now possible to use

On Unix-alike systems, R CMD INSTALL now installs packages group writably whenever the library ( lib.loc ) is group writable. Hence, update.packages() works for other group members (suggested originally and from a patch by Dirk Eddelbuettel).

checkFF() (used by R CMD check ) does a better job of detecting calls from other packages, including not reporting those where a function has been copied from another namespace (e.g., as a default method). It now reports calls where .NAME is a symbol registered in another package.

R CMD build now weaves and tangles all vignettes, so suggested packages are not required during package installation if the source tarball was prepared with current R CMD build .

R CMD build (with the internal tar ) checks the permissions of ‘configure’ and ‘cleanup’ files and adds execute permission to the recorded permissions for these files if needed, with a warning. This is useful on OSes and file systems which do not support execute permissions (notably, on Windows).

R CMD check looks for command gfile if a suitable file is not found. (Although file is not from GNU, OpenCSW on Solaris installs it as gfile .)

R CMD check --as-cran checks the line widths in usage and examples sections of the package Rd files.

More of the installation and checking process will work even when TMPDIR is set to a path containing spaces, but this is not recommended and external software (such as texi2dvi ) may fail.

Configuring with --disable-byte-compilation will override the ‘DESCRIPTION’ files of recommended packages, which typically require byte-compilation.

Since javareconf (see above) is used when R is installed, a stable link for JAVA_HOME can be supplied then.

The included version of xz utils's liblzma has been updated to 5.0.5.

The included version of zlib has been updated to 1.2.8, a bug-fix release.

The included version of PCRE has been updated to 8.33.

The minimum version for a system xz library is now 5.0.3 (was 4.999). This is in part to avoid 5.0.2, which can compress in ways other versions cannot decompress.

The macros used for the texinfo manuals have been changed to work better with the incompatible changes made in texinfo 5.x .

The default ‘version’ of Bioconductor for its packages has been changed to the upcoming 2.13, but this can be set by the environment variable R_BIOC_VERSION when R is installed.

The limit of 500 S3method entries in a NAMESPACE file has been removed.

Version requirements for LinkingTo packages are now recognized: they are checked at installation. (Fields with version requirements were previously silently ignored.)

License X11 is deprecated: use MIT or BSD_2_clause instead.

License BSD is deprecated: use BSD_3_clause or BSD_2_clause instead.

R CMD INSTALL has a new option --no-byte-compile which will override a ByteCompile field in the package's ‘DESCRIPTION’ file.

Installation is aborted immediately if a LinkingTo package is not installed.

eval and applyClosure are now protected against package code supplying an invalid rho .

Note that ‘Rdefines.h’ is not kept up-to-date, and ‘Rinternals.h’ is preferred for new code.

‘Rdefines.h’ has been tweaked so it can be included in C++ code after ‘R_ext/Boolean.h’ (which is included by ‘R.h’).

Functions readNEWS() and checkNEWS() in package tools are deprecated (and they have not worked with current ‘NEWS’ files for a long time).

plclust() is deprecated: use the plot() method for class "hclust" instead.

The unused namespace argument to package.skeleton() is now formally deprecated and will be removed in R 3.1.0.

‘An Introduction to R’ has a new chapter on using R as a scripting language including interacting with the OS.

plot() for TukeyHSD objects did not balance dev.hold() and dev.flush() calls on multi-page plots. ( PR#15449 )

The symbol set by tools::Rd2txt_options(itemBullet=) was not respected in some locales. ( PR#15435 )

all.equal(check.names = FALSE) would ignore the request to ignore the names and would check them as attributes.

Closing an x11() device whilst locator() or identify() is in progress no longer hangs R . ( PR#15253 )

lgamma(-x) is no longer NaN for very small x.

Packages using the methods package are more likely to work when they import it but it is not attached. (Several parts of its C code were looking for its R functions on the search path rather than in its namespace.)

file.show() and edit() are now more likely to work on file paths containing spaces. (Where external utilities are used, not the norm on Windows nor in R.app which should previously have worked.)

system() and system2() are better protected against users who misguidedly have spaces in the temporary directory path.

R CMD LINK did not know about sub-architectures.

R CMD rtags works on platforms (such as OS X) with a XSI-conformant shell command echo . ( PR#15231 )

If x is a symbol, is.vector(x, "name") now returns TRUE , since "name" and "symbol" should be synonyms. (Reported by Hervé Pagès.)

Errors in the encoding specified on the command line via --encoding=foo were not handled properly. ( PR#15405 )

All the (where necessary cut-down) vignettes are installed if R was configured with --without-recommended-packages.

Unary + on a logical vector did not coerce to integer, although unary - did.

R is now better protected against people trying to interact with the console in startup code. ( PR#15325 )

integrate() reverts to the pre-2.12.0 behaviour: from 2.12.0 to 3.0.1 it sometimes failed to achieve the requested tolerance and reported error estimates that were exceeded. ( PR#15219 )

model.matrix() now works with very long LHS names (more than 500 bytes). ( PR#15377 )

The parser now enforces C99 syntax for floating point hexadecimal constants (e.g., 0x1.1p0 ), rather than returning unintended values for malformed constants. ( PR#15234 )

On systems where mktime() does not set errno , the last second before the epoch could not be converted from POSIXlt to POSIXct . (Reported by Bill Dunlap.)

read.dcf() re-allocated incorrectly and so could segfault when called on a file with lines of more than 100 bytes.

kmeans(algorithm = "Hartigan-Wong") now always stops iterating in the QTran stage. ( PR#15364 ).

The jpeg driver in Sweave created a JPEG file, but gave it a ‘.png’ extension. ( PR#15370 )

deparse() now deparses raw vectors in a form that is syntactically correct. ( PR#15369 )

log() , signif() and round() now raise an error if a single named argument is not named x . ( PR#15361 )

mclapply() and mcparallel() with silent = TRUE could break a process that uses stdout output unguarded against broken pipes (e.g., zip will fail silently). To work around such issues, they now replace stdout with a descriptor pointed to ‘/dev/null’ instead. For this purpose, internal closeStdout and closeStderr functions have gained the to.null flag.

svd() returned NULL rather than omitting components as documented. (Found by Radford Neal; PR#15360 )

Two warning/error messages have been corrected: the (optional) warning produced by a partial name match with a pairlist, the error message from a zero-length argument to the : operator. (Found by Radford Neal; PR#15358 , PR#15356 )

The Fortran routine ZHER2K in the reference BLAS had a comment-out bug in two places. This caused trouble with eigen() for Hermitian matrices. ( PR#15345 and report from Robin Hankin)

Parsing code was changing the length field of vectors and confusing the memory manager. ( PR#15345 )

package.skeleton() was not starting its search for function objects in the correct place if environment was supplied. (Reported by Karl Forner.)

ftable(a) now fixes up empty dimnames such that the result is printable.

qr.coef() and related functions did not properly coerce real vectors to complex when necessary. ( PR#15332 )

If multiple packages were checked by R CMD check , and one was written for a different OS, it would set --no-install for all following packages as well as itself.

plot(hclust(), cex =) respects cex again (and possibly others similarly). (Reported by Peter Langfelder.)

On Windows, the installer modified the ‘etc/Rconsole’ and ‘etc/Rprofile.site’ files even when default options were chosen, so the MD5 sums did not refer to the installed versions. (Reported by Tal Galili.)

R CMD config failed in an installed build of R 3.0.1 (only) when a sub-architecture was used. (Reported by Berwin Turlach.)

The help for setClass() and representation() still suggested the deprecated argument representation= . ( PR#15312 )

On Windows, file.info() failed on root directories unless the path was terminated with an explicit "." . ( PR#15302 )

help.request() could not determine the current version of R on CRAN. ( PR#15241 )

The remaining instances in which serialization to a raw vector was limited to 2GB have been unlimited on a 64-bit platform, and in most cases serialization to a vector of more than 1GB will be substantially faster.

When loading a serialized object encounters a reference to a namespace which cannot be loaded, this is replaced by a reference to the global environment, with a warning.

load() now has a verbose argument for debugging support, to print the names of objects just before loading them.

The default method of image() will plot axes of the class of xlim and ylim (and hence of x and y if there is a suitable range() method). Based on a suggestion of Michael Sumner.

count.fields() is now consistent with scan() in its handling of newlines in quoted strings. Instead of triggering an error, this results in the current line receiving NA as the field count, with the next line getting the total count of the two lines.

mcparallel has a new argument mc.interactive which can modify the interactive flag in the child process. The new default is FALSE which makes child processes non-interactive by default (this prevents lock-ups due to children waiting for interactive input).

The old behaviour can be obtained with the new options --no-user-files and --no-site-files.

On Windows finding the personal files may require the environment variable HOME set.

R CMD config now make use of personal ‘Makevars’ files under ‘~/.R’ and a site file ‘Makevars.site’, in the same way as R CMD SHLIB and R CMD INSTALL . This makes the utility more useful in package configure scripts.

Alternatives to the site and user customization files ‘Makevars.site’ and ‘~/.R/Makevars’ can be specified via the environment variables R_MAKEVARS_SITE and R_MAKEVARS_USER respectively. These can be used to suppress the use of the default files by setting an empty value (where possible) or a non-existent path.

The internal HTTP server no longer chokes on POST requests without body. It will also pass-through other request types for custom handlers (with the method stored in Request-Method header) instead of failing.

write.table() did not check that factors were constructed correctly, and so caused a segment fault when writing bad ones. ( PR#15300 )

The trace() method for reference generator objects failed after those objects became function definitions.

Binary operations on equal length vectors copied the class name from the second operand when the first had no class name, but did not set the object bit. ( PR#15299 )

lsfit() produced an incorrect error message when argument x had more columns than rows or x had a different number of rows than y . (Spotted by Renaud Gaujoux.)

summaryRprof() would only read the first chunksize lines of an Rprof file produced with line.profiling=TRUE . By default, this is the first 100 seconds. ( PR#15288 )

splinefun(method="monoH.FC") now produces a function with first argument named x and allows deriv=3 , as documented. ( PR#15273 )

In R 3.0.0, when help() found multiple pages with the same alias, the HTML display of all the selections was not produced. ( PR#15282 )

The return value when all workers failed from parallel::mclapply(mc.preschedule = TRUE) was a list of strings and not of error objects. (Spotted by Karl Forner and Bernd Bischl.)

as.dendrogram() 's hclust method uses less memory and hence gets considerably faster for large (n ~ 1000) clusterings, thanks to Daniel Müllner. ( PR#15174 )

supsmu() could read/write outside its input vectors for very short inputs (seen in package rms for n = 4 ).

dirname("") is now "" rather than "." (unless it segfaulted).

Calling file.copy() or dirname() with the invalid input "" (which was being used in packages, despite not being a file path) could have caused a segfault.

In R 3.0.0, identify() and locator() did not record information correctly, so replaying a graph (e.g., by copying it to another device) would fail. ( PR#15271 )

Saved graphics display lists are R version-specific. Attempting to load workspaces containing them (or some other version-specific objects) aborted the load in R 3.0.0 and earlier; now it does a partial load and generates a warning instead.

contourLines() now checks more comprehensively for conformance of its x , y and z arguments (it was used incorrectly in package R2G2 ).

unzip(list = TRUE) returned Names as a factor and not a character vector (as documented) for the internal method. (Noticed by Sean O'Riordain.)

On Windows in R 3.0.0, savePlot() failed because of an incorrect check on the argument count.

cat() with sep a character vector of length greater than one and more than one argument was using separators inconsistently ( PR#15261 ).

Quotes were handled differently when reading the first line and reading the rest, so read.table() misread some files that contained quote characters ( PR#15245 ).

citation(pkg) dropped the header and footer specified in the ‘CITATION’ file ( PR#15257 ).

Profiling of built-in functions with line.profiling= TRUE did not record the line from which they were called.

str(d) no longer gives an error when names(d) contain illegal multibyte strings ( PR#15247 ).

The active binding to assign fields in reference classes has been cleaned up to reduce dependence on the class' package environment, also fixing bug in initializing read-only fields (inspired by a report from Hadley Wickham).

as.POSIXct.numeric was coercing origin using the tz argument and not "GMT" as documented ( PR#14973 ).

Negative numbers for colours are consistently an error: previously they were sometimes taken as transparent, sometimes mapped into the current palette and sometimes an error.

64-bit Windows builds of R are by default limited in memory usage to the amount of RAM installed: this limit can be changed by command-line option --max-mem-size or setting environment variable R_MAX_MEM_SIZE.

It is now possible for 64-bit builds to allocate amounts of memory limited only by the OS. It may be wise to use OS facilities (e.g., ulimit in a bash shell, limit in csh ), to set limits on overall memory consumption of an R process, particularly in a multi-user environment. A number of packages need a limit of at least 4GB of virtual memory to load.

There is a subtle change in behaviour for numeric index values 2^31 and larger. These never used to be legitimate and so were treated as NA , sometimes with a warning. They are now legal for long vectors so there is no longer a warning, and x[2^31] <- y will now extend the vector on a 64-bit platform and give an error on a 32-bit one.

Packages need to be (re-)installed under this version (3.0.0) of R .|||

