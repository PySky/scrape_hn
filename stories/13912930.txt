A static website usually has a common layout and unique content across pages. Changing the layout means changing every page - and it does happen, perhaps you have to add a javascript tracking code or correct a minor typo - a daunting task for something so trivial. It's really no wonder that most developers use SSI or php includes to ease this task.I'm going to show you an alternate way of separating your content from the actual layout without using any server side code, by using XSLT.Before venturing any further, here is what you should know:Pros:- No server side coding. Just copy the code on any server and it will work. Your server will still have to display the proper index file though (index.xml).- It's fast. Especially if you're running a server that handles static files very fast such as lighttpd or nginxCons:- SEO impaired. It's xml so it's easier to parse, yet it will probably rank lower because the XSL code may not be properly parsed by all search engines- limited to browsers that support XSLT. Unless you are concerned about Links or Konqueror this is a non issue. Major browsers that support it include: Firefox, IE6+, Safari, Chrome, OperaIf you're still with me let's begin.Create an xml file named index.xml. Paste the following code:The content tag represents the unique code that it will change from page to page while the actual layout will be handled by the xsl file defined on the second row.Create a file named layout.xsl and paste the following code:Look over the xsl output statement. It's set to html in order for the browsers to render the xml file as an html; additionaly we set a doctype. This is particulary important for Internet Explorer. Omitting the doctype will trigger quirks mode.Inside the content div we get the actual page content. You probably noticed the use of the "copy-of" element. The difference between it and "value-of" is that it copies the entire node, preserving the html tags inside, unlike the latter.Let's style the page.As it turns out static layouts are not that static. The page title should change across pages, and the navigation menu should highlight the current page item.Inside our index.xml file, we'll add these properties. I'm assigning them as attributes, but these could had very well been tags.Next, back in our xsl file, inside the head tags add the title:For the menu we'll have to add the selected class for current navigation item:Create the about.xml and contact.xml files by using the index.xml file.This wraps it up.While this approach does have it's fair share of downsides I think it's an interesting way of code separation that may be worth taking a closer look.|||

A static website usually has a common layout and unique content across pages. Changing the layout means changing every page - and it does happen, perhaps you have to add a javascript tracking code or correct a minor typo -...