PX8 is an Open Source Fantasy Console (128x128 pixels) in Rust, by using a cartridge that contains the code/gfx/music. The code could be in Python/Lua, or you could create directly everything in pure Rust by using it as a library.

It is still in development, but it is usable and the main features are:

It works on all platforms (Linux/OSX/Windows), in the browser (via Emscripten), and on tiny hardware like Raspberry Pi 2/3.

The console is inspired from the awesome Pico-8, so there is a compatibility mode (not 100%, and it is not the goal of the project) available with Pico-8 console and cartridges (P8/PNG).

The time for each frame is slow (10ms) in the GIF, and doesn't correspond to the speed of the game.

You can get directly the latest version via git:

Or you can get latest binaries for multiples platforms directly on itch.io:

and old binaries could be obtain for free.

You will need multiple things:

Please enable the GL Driver (7 - Advanced Options -> Ac - GL Driver -> Yes) via:

Right now you need to export the DYLD_FALLBACK_LIBRARY_PATH env variable for the python support, e.g:

The first thing to do is to install Rust, so please go to rustup and follow all instructions.

You could build PX8 with cargo directly, in release mode for example, with the support of Python and Lua.

By default the resolution will 128x128 but you can change the default values by specifying the values of the env variables PX8_SCREEN_WIDTH + PX8_SCREEN_HEIGHT during the compulation:

If you want to use the gfx_rs renderer (WIP):

You can force opengl with SDL via the '-o' option:

You must follow the following guide to install Emscripten.

You can see example of PX8 + Emscripten in the demos repository. You could also see live example from your browser:

Each pixel can be access from 0 to 128 (or the new defined width/height) :

You should be able to run it directly by providing the path of the cartridge:

You could run the API demos:

You can edit the GFX in the cartridge by using the specific '-e' option, and alternate between the run mode and the editor with 'F6':

and you can save the GFX with 'F5'.

With the '-s' option you can change the size of the console, so you can increase it (2/4/8/10).

You can also use the fullscreen option by using '-f' option.

You can add the '-o' option to force SDL to use OpenGL

You could load a PICO8 cartridge file by using the '-m pico8' option to convert the Lua code.

PX8 will call 3 functions, at startup or during the runtime:

After that you can use the API to do your game. There is no limitation of what you can do in Python or Lua languages.

By default I don't do any modification in the Python or Lua interpreter, so you are free to create threads, load native files, etc

You will be able to find more technical documentation in the wiki

You can create a classical Python program, all you need is to define the previous functions (_init, _update, _draw), and you can import any packages.

More details here about each function with the arguments: API|||

PX8 - Open source Fantasy Console in Rust (with Python and Lua)