Like it or not, the speed a webpage loads has a major impact on how likely people are to spend time on your site. Obviously, a snappy user experience isn’t everything (useful content will always be king) but a sluggish load time is very likely to make them close the tab and forget all about you.

Modern web frameworks like Rails make life a lot easier when producing complex web apps. The syntax is clean, the expressions easy to read, and the framework handles a lot of the boilerplate and drudgery in an unobtrusive and intuitive way. However, many critics would say that the price you pay for the convenience of such tools is that your web app is doomed to be sloooooow….

And (I’m sorry to admit) there’s some truth in it.

Ruby is a language optimised to make programmers happy, but machines have a lot of hoops to jump through in order to run code written in it. Compared to compiled languages, it’ll always have the interpreter overhead; as a dynamic language, the interpreter has a lot of additional work to do at runtime to determine the type of data it’s dealing with; the garbage collection still affects runtime a great deal; and Ruby (at least, the standard MRI implementation) doesn’t support true thread concurrency.

Luckily for us, none of those points are show stoppers for one major reason:

Worst case scenario, with zero cached data and pessimistic load times:

At this point, we’re already past the 1-second mark and we’ve only just finished retrieving the document. Next, the browser needs to:

It’s at this point from a user’s perspective that the page has visibly finished loading. There may be other resources loaded behind the scenes, and actions carried out by JavaScript but at this point the user can see and interact with the document.

Clearly, there’s a lot of room for improvement here…

To see all this in action, I recommend installing Chrome, if you don’t already have it and checking out the Network section of the developer tools (View > Developer > Developer Tools). Click the red record button and then load a page to see what’s happening behind the scenes.

Using Chrome’s dev tools, you can see where the pain points are in your app’s page load. With the following pointers, hopefully you can make some gains and shave off some time.

We’ll tackle the optimisations in two broad sections: server side, and client side.

Now you’ve made some tweaks, see how your Rails site performs with Google’s free analysis tool, Page Speed Insights. This’ll offer you up more hints as you work through it.

So there we go! Nothing revolutionary, but each step here should hopefully help shave off some loading time and make things feel a lot snappier.|||

Like it or not, the speed a webpage loads has a major impact on how likely people are to spend time on your site. Obviously, a snappy user experience isn’t everything (useful content will always be…