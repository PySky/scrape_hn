Make working with faster and less error-prone

No more muddling around searching for names of types and no more surprises at runtime if a font name was mistyped. This library is simply one extension to and one with a case for each system font on iOS. Custom font support is also available, please keep reading for details!

Instead of the base constructor for :

You can now simply start typing the name of the font enum and let code completion help you:

There is also a handy (and way cooler) extension to the enumeration that allows the creation of objects with a specified size like so:

Custom Fonts can be added with the help of the protocol. Simply create your own based enumeration that adapts the and add a case per font that you want to add like so:

If you use Carthage to manage your dependencies, simply add UIFontComplete to your :

If you use Carthage to build your dependencies, make sure you have added to the "Linked Frameworks and Libraries" section of your target, and have included in your Carthage framework copying build phase.

If you use CocoaPods to manage your dependencies, simply add UIFontComplete to your :

Fonts available on iOS are surely subject to possible change, and when they do the enum in this library will need to be updated as well. If you would like to help maintain or improve this library please feel free to do so.

UIFontComplete is free software, and may be redistributed under the terms specified in the LICENSE file.|||

UIFontComplete - Make working with UIFont faster and less error-prone.