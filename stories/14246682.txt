Host your code online in as many public and private repositories as you want. Free for 5 users.

You’d prefer the class definition, right? Let’s take a deeper look at how we built our code aware search to provide the most relevant search results at a fast pace.

To compare this live, you can search for the common class “QueryBuilders” on the Elasticsearch repo. In GitHub, it shows up as the 6th result on the 18th page (at time of writing). In Bitbucket Cloud, the class definition shows up as the first result.

Code aware search outperforms traditional for statically typed languages like Java that tend to repeat type names when importing, declaring, and instantiating types. However Bitbucket Cloud’s code aware search is also highly effective for a range of other popular languages including JavaScript, Python, Ruby, and PHP, among others.

Since code aware search is built for source code, we also index  . and _ that are commonly used in identifiers. This means you can get more precise results for compound search terms such as class, function, and variable names like “foo_bar.baz”.

you to restrict search results by using modifiers and operators. You can use modifiers to filter by a particular language or file extension (like “ext:css” or “lang:ruby”) or limit search to specific repos (repo:elasticsearch). Projects can use operators (like AND, OR, and NOT) to narrow down or broaden results in case you get too many.

For a full list of the capabilities and search query considerations with code search in Bitbucket Cloud, check out our documentation.

During the Beta, 25% of all Bitbucket repositories have had their code indexed and are ready to start searching. If your code hasn’t been indexed, Head to the search bar in Bitbucket’s side navigation and click “View code search results”, then “Enable code search” on the search results page.

Have more specific questions about this post? Reach out to us on Twitter to get the information you need.|||

Bitbucket Cloud's semantic code search analyzes code syntax, ensuring definitions matching your search are prioritized over usages.