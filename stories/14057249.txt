The journey from prototype to an actual product is long and erratic. The process frequently exposes tradeoffs that weren’t apparent when the concept was conceived. Breakthroughs enable solutions that hadn’t been considered. This can challenge assumptions on which the concept rests, forcing rethinking and revisions. It’s neither easy nor predictable but it’s a beautiful journey.

This process used to take place behind closed doors. The advent of crowdfunding changed this. A new generation of companies like Minut now test market viability at a very early prototype stage. In doing so we expose the ups and downs of going from prototype to product to a wider audience. This is the story of one such journey: Point, a Kickstarter campaign funded two years ago on the promise to bring its backers a softer approach to home security.

Minut is a startup based in Malmö, a city on the Swedish side of the Öresund strait embedded in the Copenhagen metropolitan area. It’s a tech hub in a region which has had an outsize influence on the industry. It’s not just the heritage from telecom giants like Ericsson and Nokia or the more recent success with Spotify and Skype, but a friendly ecosystem of startups and small companies that frequently garners worldwide attention.

Our community is clearly Scandinavian but lends heavily from the global startup culture. Traditional Scandinavian design thinking mixes well with Californian optimism and ambition.

When we started the Kickstarter journey we were a small team of first-time founders. We received crucial support from Hax, the hardware accelerator in Shenzhen. We also relied on our local startup community. The importance of community is hard to overstate. It’s an extension of the team that gives access to the collective experiences of people who have been on similar journeys before. Now, in large part thanks to all the support we’ve had, we’re starting to look like a real company.

People want peace of mind knowing that their home is safe. We see proof of this in the large markets for home security systems and surveillance cameras. But these are really the only two options people have. Cameras are invasive and don’t belong at home. Home security systems tends to be complex, comprising keypads, codes, gateways and a multitude of sensors often requiring professional installation. We shouldn’t have to face these choices. There is a middle ground between overbearing surveillance and being completely unaware of what’s happening at home. This is our niche. We call it Soft Security.

Point started as a vague concept of security for Airbnb hosts. The wider idea of Soft Security took form when we participated in the hardware accelerator, Hax, under the mentorship of Ben, Cyril, Duncan and Sean. Hax is based between Shenzhen and San Francisco which gave us access to both people in Silicon Valley and the Shenzhen ecosystem for prototyping and manufacturing. This environment enabled us to quickly iterate on and explore different designs for Point.

Point was to be small, beautiful, unintrusive and deliver peace of mind. You’d be able to see whether people had arrived at home, notified if a window broke, if there were loud noises or an alarm had gone off. Security, but without surveillance. Given the resources at our disposal, Point was the closest we could get to the concept of Soft Security.

Our team brought together people from academia, Apple and the Nordic telecom giants. We were used to working with a whole different set of constraints, but we also had new tools at our disposal. One of those tools was Kickstarter.

If a store is a place where you purchase things, Kickstarter is a store of stories. You can as a backer buy into an idea and help creators bring this idea to life. It’s frequently misunderstood as a storefront for the latest products. Having visited and worked with the people at Kickstarter we know they’re trying hard to dispel this notion. Kickstarter is a non-profit and we always got the impression that they’re taking their mission very seriously, but this misconception still lingers among first-time backers.

For us Kickstarter was a vehicle to test the market viability of Point and fund the first production run. It also helped us start building a small community of people who really loved the idea and provided important early feedback. Kickstarter was an enabler and it’s hard to imagine how we would have arrived where we are now without them.

Preparing the Kickstarter campaign took us about three months. In this time we defined, designed and made a proof of concept for Point. We prepared a manufacturing schedule. We put together our bill of materials and found out fulfilment costs. We calculated our power budget, dimensioned the batteries and made a strategy for IP. The goal was to establish good estimates for costs and schedule so we knew what to promise.

Minut was still a shoe-string operation run by people with no experience in marketing or PR, but Soft Security clearly resonated with backers and the media. After being covered by CNN, TechCrunch and New Scientist even our local newspaper wrote about us. We ended up raising several times our goal.

Like many creators in similar situation before us, this success forced us to quickly revise our plans. Point was still a prototype and far from a product prepared for mass manufacturing. We needed a supply chain and distribution network to cope with the higher volumes. Mailing packages by hand was clearly not cutting it anymore. In retrospect we underestimated the difficulties of setting up a global supply chain.

Our campaign concluded in December of 2014. Several thousand Points were pre-ordered at prices reflecting the fact that if we failed, backers might end up with nothing. The following month we were back in China to start setting up production. Our optimistic plan was to make a small run of beta-units, assemble them by hand and send to those backers who had opted to get prototypes without the plastic enclosure to test. Getting prototypes in the hands of backers this early was a good plan. We started shipping these units in June, and it quickly exposed us to a lot of different wifi environments. This is when we started seeing trouble with the network performance, which would delay Point by several months. We used a reference design with a chipset from a large chipset manufacturer in use by most large companies. Using a design from a proven manufacturer is however no guarantee that things work as well as they should.

We were stymied by wifi problems for many months. Eventually we designed our own antenna, simplifying the reference design and made a new radio front-end. This solved some of the problems but far from everything. Like most complex problems it was like peeling an onion. It wasn’t until we found a severe bug in the network stack that we started getting somewhere. We wrote a detailed analysis and sent to our supplier. They were able to solve the problem and released a patch to the software. This was an unexpected problem which set us back months. Sometimes easy things turns out hard.

Once we had this under control we could start purchasing components for manufacturing. While you can seemingly get any component under the sun from Digikey shipped to your doorstep in a matter of days in the US, the availability, selection and lead times look completely different in Shenzhen. You have to design with component availability in mind. If one component gets delayed the manufacturing process stops. In our case we made a poor choice of microphone. It turned out not to be in wide use and our supplier ended up needing several months longer than expected to deliver. Once the microphones arrived, manufacturing could start and shipments commenced. The first units reached backers in December, six months behind schedule.

We decided to stagger the shipments over five months in order to keep the customer support load under control. This was not an entirely popular move with backers. We also had an extra delay with bulk shipment bound for America. Customs decided to do a random inspection. Once it was released a truck driver delivered the shipment to the wrong warehouse. It was eventually recovered, but a lot of people in the US had to wait months to get their Points.

These three events; problems with the network stack, problems with microphone availability and our choice to stagger the shipments were the main reasons Point was delayed.

Once Point started arriving with backers we encountered the next serious issue. Another bug in the network stack prevented our automatic firmware updates in many network environments. Fixing it required a flawless transfer of a small patch leading most backers to have to repeat the sequence several times. We worked hard getting the package size down to kilobytes to improve the chances of success. In the end, the vast majority of users were able to update their Points. This bug, affectionately called “Firmware 0”, remains a cause of frustration.

Due to all the time spent hunting bugs in the network stack Point wasn’t feature complete when it first shipped. At this stage we were five people on the team who had never before shipped a product together, so any diversion of resources made a large impact on our speed.

After concluding the shipments in the spring we’ve worked hard through the autumn and winter to catch up and deliver updates to the Points now out in the field. We’ve continuously improved all aspects of the system with tremendous help from our community. While improvements to the backend and smartphone application will continue we’ve now reached a stage with the firmware on Point that is fairly stable and won’t see much further improvements. Some of the features in the latest firmware will be exposed in the second version of the Point app (slated for spring). We feel that now is a good time to revisit our promises from the campaign and see where we delivered and where we came short.

One of the key aspects of Point is that it can recognize different types of sounds. It works a bit similar to voice recognition but for other sounds like breaking windows or alarms. Our main challenge is to make this work on the very small processor in Point. The processor needs to be small for Point to be able to run on batteries, but while 32K of RAM famously ought to be enough for anybody it certainly enforces some creativity on the engineers. These features are shipping in Point today and the main caveat is that we found that for detecting glass break we needed a much higher sampling rate than we had thought. This increases the power consumption significantly. Because of this limitation it’s not on by default but users can turn it on for when they’re away.

Promise #2: Point can detect smoke and other airborne hazards

In addition to be able to recognize the sound of a smoke alarm, we wanted to be able to verify that it was actually caused by real smoke. When we surveyed the market for these kinds of sensors we were quite disheartened. Existing designs were prone to false alarms, not very precise and drifted over time. If you’ve bought an air quality sensor in the last few years and used it for more than six months chances are it doesn’t actually give accurate data anymore. At the core of this problem is a single type of sensor that is used throughout the industry. If you bought something from a startup, or even many established players, on the inside you will find the same dust sensor which has severe problems with calibration drift and in practice requires a fan.

We thought we could do better and set out to invent a new kind of sensor. Instead of relying on fans, optics and isolated chambers we approached the problem with signal processing.

While we got very promising results in a lab environment our sensor does not work well in the field.

The hardware is in place in shipped Points, but the plastic has a serious flaw in that it leaks too much light and often saturates the sensor when the light environment changes. The reason this was not discovered before is simple and somewhat embarrassing. We hadn’t tested it outside of a controlled environment that happened not to expose the sensor to quickly shifting light.

This means we can only get data from the sensor intermittently and we don’t know when it’s good or bad. In retrospect, it was optimistic to think that we could significantly improve on the state of the art, but we gave it a pretty good attempt. Future versions of Point will have a more traditional sensor focused on smoke detection. The air quality sensor technology we developed lives on and when the underlying silicon improves we will make another effort to take it to production.

On this front we clearly failed. We put up a good fight but underestimated the effort needed.

In many cases it makes sense to act on the events Point detects. Is the humidity in the nursery too low? Point should be able to turn on a humidifier. The best solution out there for this kind of automation is IFTTT. It’s not perfect. The latency is quite long since it’s based on cloud-to-cloud communication, but it works and ties together a lot of different solutions on the market. IFTTT integration for Point has been in review for some time and will be released to everyone as soon as we’re allowed to.

We also promised an integration with Lockitron. It makes a lot of sense to combine Point with a smart lock, especially for Airbnb hosts. Lockitron however also had their fair share of delays. This meant that there are very few Lockitron users who are also Point customers. Because of this we decided to put this feature on the back-burner.

Promise #4: You set your own rules for how Point responds

This should have been easy, but again, our anaemic processor made the simple act of even playing a sound somewhat difficult. An elusive bug that caused a buffer overflow in the routine reading the sound from storage caused Point to hang approximately every twentieth time the chime rang. This took much longer than expected to find and fix. Eventually these features were rolled out and today Point can both shine and chime. Push notifications have been working since the start.

After some initial problems with humidity measurements, these features have been solid. It’s really incredible how much can be determined from the humidity in a home. When you’re away the humidity won’t change much, but simple everyday acts like showering and cooking will change it drastically. If you’ve been using Point for a while you’ve probably learnt to identify these events yourself from looking at the data.

We recently added detection of rapidly rising temperature. It’s useful to distinguish a false fire alarm from the real thing.

Tracking people coming and going from just looking at the data is also a popular feature, especially among Airbnb hosts. Hosts can now know that their guests have arrived safely, or when they have left, to prepare the place for the next guest.

During our campaign a small but vocal group of people asked for an app for Windows Mobile. When our backers got access to the API, they wrote a web front end, a terminal interface and even a Windows app. So there have certainly been wishes for different ways to use Point. Rather than spread ourselves too thinly we chose to focus on iOS. Our Android app is still lagging behind. This will continue to be true for some time. We’re still learning and iterating on the front-end so having two distinct UI paradigms to work with is not a good use of resources. Android is a priority, but it deserves to be a native app that pays homage to the platform and we’re not quite there yet.

In a good environment Point gets up to a year’s battery life. This is a major achievement for a product with a feature set this rich and with such a small form factor. Power consumption is one of the most important aspects of product design. It’s often the main constraint that sets the space of what’s possible.

Designing Point for running on batteries didn’t come without its challenges. We have had to move sound analysis to the very edge of the device in order to keep an extremely low sleep current. We had to design our own protocol and key exchange to ensure both best practices in security and fast connection times.

Some of these practices for preserving power pushes Point to the edge of the wifi standard. This takes its toll in terms of compatibility and we still have problems with certain routers. Customers seldom understand the difference between Point and their smartphone connecting. They rightly expect that if one device works then others should too. We’re continuing to strive towards living up to that expectation and ensure compatibility with all but the most obscure routers.

As a general rule it’s best to under-promise and over-deliver. People and companies alike are judged on outcome in relation to expectations rather than real performance. In crowdfunding there is an added interesting dynamic. Promising a lot can lead to more sales in the short term, but promising too much will inevitably end in disappointment. As evidenced by cases such as Zano and Skarp many consumers can’t tell what’s plausible. This is a real problem and something we need to better address if we want crowdfunding to have a future.

As creators we are optimists. We need to show vision and tell a story that could one day become reality if enough people wanted it to. It’s a delicate balance between promising enough to garner attention but not more than what we can deliver. We will leave it for others to judge whether we struck this balance right with Point.

Going through Kickstarter and sharing our plans and pains for the world to follow has been a tremendous journey. Point wouldn’t have existed without the support of our backers. Given the choice we would do it all over again. We can’t wait to share what comes next!|||

The journey from prototype to an actual product is long and erratic. The process frequently exposes tradeoffs that weren’t apparent when the concept was conceived. Breakthroughs enable solutions that…