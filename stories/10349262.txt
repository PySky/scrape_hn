A modular Yeoman generator to create or update node modules. It's composed of several subgenerators, relatively unopinionated, usable by themselves. Most but not all input values are remembered.

will ask you which subgenerators to execute, then executes those in order as listed below. Those you successfully ran before will be disabled by default. Run any of them separately with . For example: to just setup Travis.

Create , , install test framework (tape, tap, mocha, grunt, cake, or ava), add file (MIT, BSD2 or BSD3). If a already exists, it will be merged, used for default answers and for sort order of the top-level fields. At deeper levels, like dependencies, nom behaves like npm and sorts lexicographically.

Create public or private GitHub project, named "module-name" or "node-module-name". Unless local git already has configured remotes. Asks for access token and repository owner (which defaults to the owner of the token), skips creation if the repository already exists, adds URLs to and adds remote origin.

Add for node 0.10 and iojs, setup GitHub hook. The tool asks for username and password.

Add for node 0.10 and iojs, setup GitHub hook. Asks for access token.

Create a CLI app (with meow) and add a field to . Asks for name and path.

Add with common sections and shield.io badges for npm and david. If you did the travis and/or appveyor setup, badges for those services will be added as well.

Create an ES5 or ES6 gulpfile and directory. Installs and if ES6, .|||

node-generator-nom - A modular Yeoman generator to create or update node modules.