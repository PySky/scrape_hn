Kapo is a swiss-army knife for integrating programs that do not have their own method of presenting their status over a network with those that need it. Examples might be:

When a program is executed under a JSON-speaking HTTP server is started and the state of the process is reported to whomever requests it.

This server will respond correctly to HEAD requests. The open socket will function as an indicator of aliveness. The body is a JSON document reflecting process state.

Requests could be as simple as inferring the process is alive if a socket can be opened to as complex as parsing the JSON schema and performing selective actions based on the state reported therein.

can be run in one of three modes: , and .

The first is the most useful as a container , especially in tandem with the flag to inject some chaos.

The second will prop up a failing process by continually restarting it if it fails (with an optional wait interval), reporting interesting facts like the last return code and start time on the status listener.

The third, , is for use in tandem with your preferred process supervisor: it'll infer the state of the process from the process list of the operating system. By default will match all processes in the process list that match the binary name given as the argument. Passing limits the scope to just that process.

The utility of all of this is probably best illustrated via some examples:

Should the worker on any given node die the ELB will instruct the ASG to kill the node and another will be provisioned to replace it.

A slightly less expensive variant that resurrects worker processes if it can is:

A human or computer can query the state of workers:

As all good proponents of the SRE model know, forcing failures by periodically killing execution units, forcing circuit breakers to fire, and reguarly refreshing your running environment are vital. can be used as a container to force containers to have a random TTL:

Switch arguments can be configured by setting an appropriately named environment variable:

The listener exposes basic runtime metrics via expvar for use with expvarmon.|||

kapo - Wrap any command in a status socket