Once a company has more than 1 department developing code, a problem inevitably arises: How do you share source code that's mutually used? There are many different thoughts on the matter, but one that's starting to gain a significant amount of attention is "InnerSource". PayPal defines InnerSource as: 

 

"InnerSource takes the lessons learned from developing open source software and applies them to the way companies develop software internally. As developers have become accustomed to working on world class open source software, there is a strong desire to bring those practices back inside the firewall and apply them to software that companies may be reluctant to release. For companies building mostly closed source software, InnerSource can be a great tool to help break down silos, encourage internal collaboration, accelerate new engineer on-boarding, and identify opportunities to contribute software back to the open source world." 

 

In this talk I cover how to get from where you are ("Hey, we've got some source code that multiple people find useful!"), where you're going ("Look, we're more popular than ReactJS"), and some hurdles along the way ("Oh shoot, it looks like there is already a library to convert FLAC to MP3s..."). I give real-world examples of doing it right, and leave with some takeaways that people can immediately implement at their own companies.|||

Once a company has more than 1 department developing code, a problem inevitably arises: How do you share source code that's mutually used? There are many diffeâ€¦