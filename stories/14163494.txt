Documentation on steroids with Sphinx, GitHub, Travis-CI and Platform.sh!

Documentation is often the first entry point to your product, this is why you should care about it.

A well-written documentation adds value to your product and increases your reputation. It reduces the need of support and makes people enjoy their journey with your product.

Even if investment on documentation quality is worth it, it’s difficult and time consuming. At Akeneo, we’ve been using a new process since weeks to simplify the maintenance and make contributions to the documentation easier.

In the documentation world there are two established languages to write and describe documentation: reStructuredText and Markdown.

At first sight RST and Markdown look alike: both are markup languages that emphasize plain-text readability.

While Markdown is intended to be used as a format for the Web, reStructuredText is more extensible, adds semantic, and is intended to write technical documentation.

This is why we chose Markdown for the API documentation and reStructuralText for the technical one.

The most widely used tool to generate a documentation from reStructuredText is Sphinx. Sphinx is written in Python and thus is available in every platform (Windows, Mac OSX and GNU/Linux).

The command generates the configuration file and the structure of the documentation.

Once the configuration is all set, you can build the HTML documentation by running  .

And this is it! You can now open in a web browser and discover what Sphinx has built from your RST files located into the directory.

Sphinx can generate documentation in many formats such as LateX or PDF. You can refer to the “builders” documentation for the full list of supported formats.

There are two other features that make Sphinx able to generate very unique documentations:|||

A well-written documentation adds value to your product and increases your reputation. It reduces the need of support and makes people enjoy their journey with your product. Even if investment on…