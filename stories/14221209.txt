Today we're announcing the next major release of Git LFS: v2.1.0, including new features, performance improvements, and more.

With Git LFS 2.1.0, get a more comprehensive look at which files are marked as modified by running the command.

Git LFS will now tell you if your large files are being tracked by LFS, stored by Git, or a combination of both. For instance, if LFS sees a file that is stored as a large object in Git, it will convert it to an LFS pointer on checkout which will mark the file as modified. To diagnose this, try for a look at what's going on:

Git LFS 2.1.0 introduces support for URL-style configuration via your or . For settings that apply to URLs, like or , you can now scope them to a top-level domain, a root path, or just about anything else.

To better understand and debug network requests made by Git LFS, version 2.1.0 introduces a detailed view via the environment variable:

The Git LFS API has long supported an property in both SSH authenticate as well as Batch API responses. This introduced a number of issues where an out-of-sync system clock would cause LFS to think that objects were expired when they were still valid. Git LFS 2.1.0 now supports an property to specify a duration relative to your computer's time to expire the object.

The LFS team is working on a migration tool to easily migrate your existing Git repositories with large objects into LFS without the need to write a command. We're also still inviting your feedback on our File Locking feature.

In addition, our roadmap is public: comments, questions, and pull requests are welcomed. To learn more about Git LFS, visit the Git LFS website.

That was a quick overview of some of the larger changes included in this release. To get a more detailed look, check out the release notes.|||

