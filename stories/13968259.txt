It is a point of pride for me how I type. I am proud of the fact that I can sit in this here chair, stare at the screen, and let the words flow effortlessly. I very rarely look at the keyboard, and when I do, I have a word that describes this state. It is an interruption.

Productive work is the successful chaining together of uninterrupted minutes. The longer the chain, the higher the productivity. Interruptions break the chain.

In week #3 of actively using the 15” MacBook Pro, I am delighted by its build quality. I love its weight. Last night, I found myself admiring the machining of the aluminum notch that allows me to open the computer. I type deftly on this hardware.

I am also equally deft at randomly muting my music, unintentionally changing my brightness or volume level, and jarringly engaging Siri.1

It is maddening. And it’s not improving.

However, the essential law of technology is evolve or die. This means it is worth my time to deconstruct the Touch Bar to infer design intent. To do this, we must answer the basic question: “What is a button?”

Let’s start with my brief definition of an efficient button:

To understand this definition, let’s test it against buttons, button-containers, and button-like-things:

A keyboard button. Your classic button. It’s got an edge you can both see and feel. It’s in a fixed location. When you push it, you normally see the result immediately. This is a button.

The home button on the iPhone. This button has gone through significant mechanical and design changes and is another classic button. As the iPhone is a far more mobile device than a keyboard, the importance of the perceptible boundary that makes it findable is increased. Close your eyes, grab your phone and unlock it. No problem, right? Keep those eyes closed and launch Safari. No fair using Siri.

Minor point. On the newer iPhones, you don’t push and physically move the button. The button doesn’t move, but it gives you the impression it does with haptic feedback. To fully experience this, “press” the button an iPhone with a dead battery. Apple has done an admirable job creating the impression of a satisfying button press.

The Force Trackpad. It has a perceptible edge, it is always in an expected location, and you do press it. However, the Trackpad serves a multitude of functions. Its purpose changes based on application, the number of fingers on the Trackpad, and the gymnastics those fingers perform whilst on the Trackpad. There is an argument that mechanically it’s a button, but due to its myriad functionality, I would say it’s not a button, but a Trackpad.

The Apple TV remote. I’m bringing this one up because the Apple TV buttons are a frequent source of frustration for me. When you look at my button definition, the flaw is clear. The Apple TV buttons are just fine provided that you understand which end of the remote, the container, is pointed where. It’s when the bottom of the remote is pointed forward, and your fingers start to the explore the remote when you realize, “Something’s wrong” and you glance at the remote to orient yourself.

The Apple TV remote has a pleasant feel in my hand. It’s by far the most visually appealing remote that I own. It offers a sensible set of useful button options. However, this grace is interrupted each time I have to stop and ask, “How am I holding it?” The buttons are fine; the flaw is that to work, you must visually inspect the remote. Even my worst remotes with their plethora of buttons easily convey which end should be pointed forward.

The Touch Bar The Touch Bar buttons fail my definition in a couple of ways. I’m going to give it partial credit for the perceptible boundary because, yes, you can look at the bar and see the buttons. However, try the close your eyes test and turn up the volume on your MacBook Pro. How’s your brightness looking? Did Siri say hi?

When you combine this difficulty in tactile findability with the fact that the buttons on the Touch Bar are gleefully changing position when you move from application to application, it appears the Touch Bar has more in common with the Trackpad than the keyboard. The buttons on the Touch Bar are most certainly buttons; my issue is with their container.

In the history of keyboards, I have never been as inept as I’ve been with the Touch Bar keyboard. I’ve been finishing this piece for the last hour and I’ve been keeping track of the number of times I’ve accidentally hit a Touch Bar button, and that number is nine. The total number for this article is likely 5x the number.

Developers were the ones who originally raged on the Touch Bar because it contained one of their most frequently used keys – the escape key. The absence of the clear feedback of a physical key press is a violation of perhaps the most important word in my definition we have not explored “efficiency.”

The Touch Bar is gorgeous but is inefficient.

Apple’s job has always been to courageously lead the charge on design. Apple has a strong defensible opinion regarding where we should go versus where we’ve been. The Touch Bar hits common Apple Design high points. It cleanly integrates the keyboard and extends it. The gentle animations with occasional splashes of color are a joy to share with others.

Apple, I am with you on this design journey. I am cool with the dongle explosion that accompanied the MacBook Pro because your opinion is one universal port and I get that. The future is shaped by those who lead.

However, the role of a well-designed keyboard is to stay the hell out of the way. A good keyboard is a tool designed to be unnoticed because its job is to get the ideas out of my head, through my fingers, and into the computer as quickly and efficiently as possible.

It’s called a Mac Book Pro. Pro. For professionals. I’ve worked under the assumption that professionals were interchangeable with developers. After multiple weeks of usage, I can’t see how a developer or a writer would choose the Mac Book Pro.|||

