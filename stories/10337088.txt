User name should have minimum 6 characters|||

This tutorial will help to resize a custom view by dragging of view&#39;s side and provide drag functionality also. here is the step by step code.step 1- create a xml file res/activity_main&lt;linearlayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;    xmlns:tools=&quot;http://schemas.android.com/tools&quot;    android:layout_width=&quot;match_parent&quot;    android:layout_height=&quot;match_parent&quot;    android:orientation=&quot;vertical&quot; ;    button        android:id=&quot;@+id/button&quot;        android:layout_width=&quot;200dp&quot;        android:layout_height=&quot;100dp&quot;        android:text=&quot;button view&quot; ;    absolutelayout        android:id=&quot;@+id/boardlayout&quot;        android:layout_width=&quot;match_parent&quot;        android:layout_height=&quot;match_parent&quot;        android:background=&quot;@drawable/board&quot;        android:gravity=&quot;center&quot;        android:padding=&quot;20dp&quot;;    &nbsp;step 2- create a activity import android.app.activity;    import android.content.clipdata;    import android.os.bundle;    import android.util.log;    import android.view.dragevent;    import android.view.motionevent;    import android.view.view;    import android.view.view.onclicklistener;    import android.view.view.onlongclicklistener;    import android.view.view.ontouchlistener;    import android.view.viewgroup;    import android.view.viewgroup.layoutparams;    import android.widget.absolutelayout;    import android.widget.button;    import android.widget.imageview;    import android.widget.relativelayout;    public class dragdrop extends activity implements onlongclicklistener,    view.ondraglistener,onclicklistener,ontouchlistener{        private view imageview;        private int height;        private int width;        private absolutelayout boardlayout;        private view layout;        private relativelayout relativelayoutrectangleview;        private imageview triangleview,circleview,rectangleview;        private string image_rectangle = &quot;rectangle&quot;;        //boolean drag;        float x,y;        boolean temp;        private absolutelayout absolutelayout,absolutelayout2;        private absolutelayout containview ;        private button button;        int heightlayout,widthlayout;        private float newx = 0;        private float newy = 0;        private float oldx = 0;        private float oldy = 0;        private float dx = 0;        private float dy = 0;        @override        public void oncreate(bundle savedinstancestate) {            super.oncreate(savedinstancestate);            setcontentview(r.layout.activity_main);            // set ondraglistener on the view where to drop the dragged item            boardlayout=(absolutelayout)findviewbyid(r.id.boardlayout);            boardlayout.setondraglistener(this);            button=(button)findviewbyid(r.id.button);            button.setonclicklistener(this);        }        @override        public boolean ondrag(view v, dragevent event) {            // defines a variable to store the action type for the incoming            // event            final int action = event.getaction();            // handles each of the expected events            switch (action) {            case dragevent.action_started:                // invalidate the view to force a redraw in the new tint                v.invalidate();                // dragged data.                return true;            case dragevent.action_drag_entered:                // invalidate the view to force a redraw in the new tint                v.invalidate();                return false;            case dragevent.action_location:                x = event.getx();                y = event.gety();                if(x&gt;widthlayout  &amp;&amp; y&gt;heightlayout){                    temp = true;                }                // ignore the event                return false;            case dragevent.action_drag_exited:                //v.invalidate();                return false;            case dragevent.action_drop:                // gets the item containing the dragged data                clipdata dragdata = event.getclipdata();                // gets the text data from the item.                final string tag = dragdata.getitemat(0).gettext().tostring();                view view = (view) event.getlocalstate();                viewgroup viewgroup = (viewgroup) view.getparent();                viewgroup.removeview(view);                x = event.getx();                y = event.gety();                view.setx(x-(view.getwidth()/2));                view.sety(y-(view.getheight()/2));                containview = (absolutelayout) v;                containview.addview(view);                view.setvisibility(view.visible);                // invalidates the view to force a redraw                v.invalidate();                // returns true. dragevent.getresult() will return true.                return true;            case dragevent.action_drag_ended:                //drag=false;                v.invalidate();                return false;            default:                break;            }            return false;        }        @override        public boolean onlongclick(view v) {            string tag = v.gettag().tostring();            clipdata dragdata = clipdata.newplaintext(&quot;tag&quot;, tag);            // instantiates the drag shadow builder.            view.dragshadowbuilder myshadow = null;            //v.setbackgroundresource(0);            if(tag.equals(image_rectangle)){                v.setvisibility(view.invisible);                myshadow = new view.dragshadowbuilder(relativelayoutrectangleview);            }            // starts the drag            v.startdrag(dragdata, myshadow, v, 0);            return false;        }        @override        public void onclick(view v) {            createcustomview();        }        private void createcustomview() {            absolutelayout=new absolutelayout(this);            absolutelayout.setlayoutparams(new layoutparams( layoutparams.wrap_content, layoutparams.wrap_content));            relativelayoutrectangleview = new relativelayout(this);             relativelayoutrectangleview.setlayoutparams(new layoutparams( layoutparams.wrap_content, layoutparams.wrap_content));            relativelayoutrectangleview.getlayoutparams().height=100;            relativelayoutrectangleview.getlayoutparams().width=100;            rectangleview=new imageview(this);            rectangleview.setlayoutparams(new layoutparams( layoutparams.wrap_content, layoutparams.wrap_content));            relativelayoutrectangleview.settag(image_rectangle);            rectangleview.getlayoutparams().height=300;            rectangleview.getlayoutparams().width=300;            rectangleview.setimageresource((r.drawable.rectangle));            relativelayoutrectangleview.setonlongclicklistener(this);            relativelayoutrectangleview.setbackgroundresource(r.drawable.rectangle);            relativelayoutrectangleview.setontouchlistener(this);            viewgroup.layoutparams la_pm = rectangleview.getlayoutparams();            relativelayout.layoutparams lp = new relativelayout.layoutparams(la_pm);            //relativelayoutrectangleview.addview(rectangleview,lp);              absolutelayout.addview(relativelayoutrectangleview);            boardlayout.addview(absolutelayout);        }        @override        public boolean ontouch(view v, motionevent event) {            if(event.getaction() == motionevent.action_down){                width =v.getwidth()/2;                height =v.getheight()/2;                // construct a rect of the view&#39;s bounds                oldx=event.getx();                oldy=event.gety();                log.d(&quot;oldx&quot;, oldx+&quot;&quot;);                log.d(&quot;oldy&quot;, oldy+&quot;&quot;);                //log.d(&quot;height and width&quot;, height+&quot;&quot; + width+&quot;&quot;);            }            if(event.getaction() == motionevent.action_move){                newx=event.getx();                newy=event.gety();                dx=newx-oldx;                dy=newy-oldy;                if(oldx&gt;width){                    if(newx&gt;oldx){                        absolutelayout.layoutparams params = (absolutelayout.layoutparams) v.getlayoutparams();                        // relativelayoutcircleview.getlayoutparams().height=relativelayoutcircleview.getheight()-50;                        v.getlayoutparams().width=v.getwidth()+math.abs((int)dx);                        v.setlayoutparams(params);                     }else if(newx&gt;oldx){                        absolutelayout.layoutparams params = (absolutelayout.layoutparams) v.getlayoutparams();                        // relativelayoutcircleview.getlayoutparams().height=relativelayoutcircleview.getheight()-50;                        v.getlayoutparams().width=v.getwidth()-math.abs((int)dx);                        v.setlayoutparams(params);                     }                    //if(dx==0){                    if(newy&gt;height){                        if(dy&gt;0){                            log.d(&quot;size of height&quot;, &quot;increaseingggggggg&quot;);                            absolutelayout.layoutparams params = (absolutelayout.layoutparams) v.getlayoutparams();                            // relativelayoutcircleview.getlayoutparams().height=relativelayoutcircleview.getheight()-50;                            v.getlayoutparams().height=v.getheight()+math.abs((int)dy);                            v.setlayoutparams(params);                        }else if(dy&lt;0 ){                            absolutelayout.layoutparams params = (absolutelayout.layoutparams) v.getlayoutparams();                            // relativelayoutcircleview.getlayoutparams().height=relativelayoutcircleview.getheight()-50;                            v.getlayoutparams().height=v.getheight()-math.abs((int)dy);                            v.setlayoutparams(params);                         }                    }                    else if(newy0){                            absolutelayout.layoutparams params = (absolutelayout.layoutparams) v.getlayoutparams();                            // relativelayoutcircleview.getlayoutparams().height=relativelayoutcircleview.getheight()-50;                            v.getlayoutparams().height=v.getheight()-math.abs((int)dy);                            v.setlayoutparams(params);                         }else if(dy&lt;0){                            absolutelayout.layoutparams params = (absolutelayout.layoutparams) v.getlayoutparams();                            // relativelayoutcircleview.getlayoutparams().height=relativelayoutcircleview.getheight()-50;                            v.getlayoutparams().height=v.getheight()+math.abs((int)dy);                            v.setlayoutparams(params);                        }                    }                    //}                }else if(oldxheight){                            if(dy&gt;0){                                absolutelayout.layoutparams params = (absolutelayout.layoutparams) v.getlayoutparams();                                // relativelayoutcircleview.getlayoutparams().height=relativelayoutcircleview.getheight()-50;                                v.getlayoutparams().height=v.getheight()+math.abs((int)dy);                                v.setlayoutparams(params);                            }else if(dy&lt;0 ){                                absolutelayout.layoutparams params = (absolutelayout.layoutparams) v.getlayoutparams();                                // relativelayoutcircleview.getlayoutparams().height=relativelayoutcircleview.getheight()-50;                                v.getlayoutparams().height=v.getheight()-math.abs((int)dy);                                v.setlayoutparams(params);                             }                        }                        else if(newy0){                                log.d(&quot;size of height&quot;, &quot;decreaseingggggggg&quot;);                                absolutelayout.layoutparams params = (absolutelayout.layoutparams) v.getlayoutparams();                                // relativelayoutcircleview.getlayoutparams().height=relativelayoutcircleview.getheight()-50;                                v.getlayoutparams().height=v.getheight()-math.abs((int)dy);                                v.setlayoutparams(params);                             }else if(dy&lt;0){                                absolutelayout.layoutparams params = (absolutelayout.layoutparams) v.getlayoutparams();                                // relativelayoutcircleview.getlayoutparams().height=relativelayoutcircleview.getheight()-50;                                v.getlayoutparams().height=v.getheight()+math.abs((int)dy);                                v.setlayoutparams(params);                            }                        }                    }// end of dx==0 if                    else{                        if(newx&gt;oldx){                            if(dx&gt;0){                                absolutelayout.layoutparams params = (absolutelayout.layoutparams) v.getlayoutparams();                                // relativelayoutcircleview.getlayoutparams().height=relativelayoutcircleview.getheight()-50;                                v.getlayoutparams().width=v.getwidth()-math.abs((int)dx);                                v.setlayoutparams(params);                             }                        }else if(newx