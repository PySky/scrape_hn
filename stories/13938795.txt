The clause is useful to implement the following use cases:

Row pattern matching was introduced by SQL:2016 with three optional features: R010 is the basis: this feature requires the clause as explained above with the aggregate functions , , , , . R020 allows using patterns in the clause to define frames. R030 supports all aggregate functions for row patterns (e.g. , â€¦).

The character is used as placeholder in JDBC but is also a valid literal in the clause (e.g., for non-greedy matching). Per default, the Oracle JDBC driver treats each as bind parameter. To use as literal in the clause, the Oracle JDBC driver supports two methods:

This is a standard JDBC feature that disables any client side interpretation of the SQL string. It doesn't work for and thus disallows the use of bind variables. The Oracle JDBC driver support a proprietary escape syntax for the question mark: . This character sequence can be used in the clause instead of a question mark. This method works for s.|||

Pattern matching over multiple rows. MATCH_RECONGNIZE filters, groups or analyzes matching rows in Oracle 12c.