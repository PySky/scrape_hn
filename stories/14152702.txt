If you are a knowledge worker of any kind, you are intimately and painfully aware that many projects are derailed or destroyed by miscommunication. Often this isn’t the result of any malicious behavior or even attributable to any specific person or event. You look back with frustration and vow to try harder or do better the next time but why is it so difficult in the first place?

It all usually starts with a bright idea bouncing around inside our head, but in the beginning it is rarely more than an abstract concept. Over time a full mental model gets built as it grows and evolves. And then the real difficulty begins. How does this mental model of our abstract idea get accurately converted to words and pictures so that we can share it with others? Frequently, the answer is not very well. Even if we do a great job of conveying our idea, each other person on our team must then convert our words and pictures into their own unique mental model of the idea. What are the odds that all these mental models of the same idea are aligned?

The team eventually agrees on some words and pictures that describe all the tasks that they believe are needed to complete the project. Everyone gets to work bringing it all to life but any time there are handoffs from one person to another, discrepancies are discovered. Then at a random status meeting, people discover that certain use cases were not considered. In the following month, word comes down from above that the customer has some new requirements and new deadlines for the project. The team continues to rally and does the best they can to deliver on the original vision of the project. Frequently these projects end up over budget, past the deadline and still don’t fully deliver what the customer really asked for in the first place.

The truth is that projects frequently have unclear objectives, not enough resources, deadlines that are too short, inevitable changes, poorly defined roles within the team, personality conflicts, etc. And what’s worse is that we often find ourselves repeating the same mistakes over and over, even across different projects. So we decide to fix this issue once and for all. We agree to make sure objectives are always clear, we always have enough resources, the timeline is long enough, team members have clear roles, we embrace agile processes to address change, we practice empathy, etc. To implement these fixes, we usually double down on process and meetings. Pretty soon we have daily stand-ups, weekly status updates, requirements reviews, design reviews, one-on-one meetings with team leaders, QA bug review sessions and iteration post-mortems. In the end though, we are really just trying to overcome our bad communication skills with constant over-communication.

In reality, projects almost never have a constant and clear vision. Deadlines will always be too short and new requirements will always emerge. It is easier to make assumptions than do extra work to define roles. Getting on the same page is hard and staying there is even harder. Team dynamics will always play a role in what gets done and by whom. We are creatures of habits and sometimes it is hard to not be ourselves. The problem is that the only way to get better at something is to practice its fundamentals. It can’t be something we have to do on top of our constant struggle to keep our projects on track. We need a simple way to improve to learn these skills.

The challenge is that we need to improve our communication skills and also convert them into good habits. We need a way to practice easily and often but in a way that doesn’t consume lots of time. It must exist outside of our project deadlines and allow us the safety to make mistakes. We need to build empathy between teammates and allow people to try different roles, so that everyone can learn to lead. And most importantly, we need a simple way to define success so that we can celebrate each small win and build positive momentum for our team that will translate into success for our projects.

With this in mind, I set off to build a tool that will enable teams to practice communication with the following goals. It must require lots of coordination and communication and use the tools we use today for communicating. It must be simple to learn (less than 15 minutes) and using the tool must be quick (less than 5 minutes). It must allow team members to take different roles and it should force teams to build a shared vocabulary. It must have a clear and attainable goal so that our teams can build confidence. Oh, and it should be fun! You can check it out at http://mmunicate.co

This MVP version is live and it is completely free to use. Next on the list is to make it mobile friendly and add more difficulty levels. Most of the levels that are live today are pretty easy. I’d be glad for any and all feedback.|||

If you are a knowledge worker of any kind, you are intimately and painfully aware that many projects are derailed or destroyed by miscommunication. Often this isn’t the result of any malicious…