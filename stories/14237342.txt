Note: The plugins and middleware based on casbin can be found at: https://github.com/casbin

casbin is a powerful and efficient open-source access control library for Golang projects. It provides support for enforcing authorization based on various models. By far, the access control models supported by casbin are:

In casbin, an access control model is abstracted into a CONF file based on the PERM metamodel (Policy, Effect, Request, Matchers). So switching or upgrading the authorization mechanism for a project is just as simple as modifying a configuration. You can customize your own access control model by combining the available models. For example, you can get RBAC roles and ABAC attributes together inside one model and share one set of policy rules.

The most basic and simplest model in casbin is ACL. ACL's model CONF is:

An example policy for ACL model is like:

What casbin does NOT do:

It means uses as the model and as the policy.

Note: you can also initialize an enforcer directly with a file path or database, see section for details.

The model and policy can be persisted in casbin with the following restrictions:

We think the model represents the access control model that our customer uses and is not often modified at run-time, so we don't implement an API to modify the current model or save the model into a file. And the model cannot be loaded from or saved into a database. The model file should be in .CONF format.

The policy is much more dynamic than model and can be loaded from a file/database or saved to a file/database at any time. As for file persistence, the policy file should be in .CSV (Comma-Separated Values) format. As for the database backend, casbin should support all relational DBMSs but I only tested with MySQL. casbin has no built-in database with it, you have to setup a database on your own. Let me know if there are any compatibility issues here. casbin will automatically create a database named and use it for policy storage. So make sure your provided credential has the related privileges for the database you use.

Below shows how to initialize an enforcer from file:

Below shows how to initialize an enforcer from database. it connects to a MySQL DB on 127.0.0.1:3306 with root and blank password.

In casbin, both the above file and database storage is implemented as an adapter. You can use your own adapter like below:

An adapter should implement two methods: and . To keep light-weight, we don't put all adapters' code in this main library. You can choose officially supported adapters from: https://github.com/casbin and use it like a plugin as above.

You may also want to reload the model, reload the policy or save the policy after initialization:

This project is licensed under the Apache 2.0 license.

If you have any issues or feature requests, please contact us. PR is welcomed.|||

casbin - An authorization library that supports access control models like ACL, RBAC, ABAC