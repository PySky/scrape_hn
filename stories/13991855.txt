DNSCrypt is a protocol that authenticates communications between a DNS client and a DNS resolver. It prevents DNS spoofing. It uses cryptographic signatures to verify that responses originate from the chosen DNS resolver and haven't been tampered with. It is an open specification, with free and opensource reference implementations, and it is not affiliated with any company nor organization. Free, DNSCrypt-enabled resolvers are available all over the world A couple companies, organizations and individuals are operating public recursive DNS servers supporting the DNSCrypt protocol, so that all you need to run is a client. A constantly updated list of open DNSCrypt resolvers can be downloaded to replace the default CSV file shipped with the dnscrypt-proxy client. If you are running your own public DNS resolver in order to help make the Internet a more secure place, please submit a pull request to have your resolver added to the list of public DNS resolvers.

DNSCrypt itself is not a product, but a protocol that anyone can implement. Portable implementations are also available, on top on which graphical user interfaces and convenient tools have been built. Choose your platform to discover some of the available options: Windows - macOS - Linux / BSD - Android - iOS or run the software on a router. Firewall setup: although some resolvers may prefer a different port, the default port used by the DNSCrypt protocol is 443. Outgoing queries to this port on both TCP and UDP should be allowed by your firewall. Simple DNSCrypt is an an all-in-one, easy-to-use, standalone client. DNSCrypt WinClient is the original DNSCrypt user interface for Windows. dnscrypt-proxy is the reference client implementation and works natively on Windows, from Windows XP to Windows 10. It runs as a service, and does not provide a graphical user interface; its installation and its configuration require typing commands. This remains an excellent option for advanced users. Important: We are aware of fake packages pretending to be DNSCrypt Windows clients, that actually contain malware/PUP. Do not download anything that pretends to be a DNSCrypt client from torrents, links in Youtube videos or unofficial download locations. DNSCrypt-OSXClient is an easy-to-use, full-featured, self-contained graphical user interface for macOS. dnscrypt-proxy is the reference client implementation and works natively on recent macOS versions. Users familiar with the command-line can use Homebrew to install the software. The Yandex web browser is a free, fast and secure web browser. It scans files and website for viruses, blocks fraudulent webpages, protects your passwords and bank card details, and keeps your online payments safe from theft. The Yandex web browser also features built-in support for the DNSCrypt protocol. Running DNSCrypt on Android currently requires a rooted device. If you don't know how to root an Android device, the xda-developers forum is a good place to start. If you want to change the DNSCrypt resolver to use, unzip the archive, edit the variable in . Keep the content as a ZIP file, with the original structure. Upload the ZIP file to the device, into or any location you can write to. Make sure that you have a custom recovery such as TWRP or CWM. The easiest way is to download and install TWRP Manager from the Google Play Store. Reboot in recovery mode and install the ZIP file. Dowload and install Universal Init.d from the Google Play Store. Follow the instructions until you see . The DNSCrypt proxy should be running at this point, but your device may still use the previous DNS settings. Download and install DNS Changer fron the Google Play Store. In order to actually use DNSCrypt, enter as the primary DNS resolver. In order to stop using DNSCrypt, leave this field empty. DNS changes may not be visible immediately. Android has its own DNS cache, and web browsers such as Chrome have another layer of DNS caching. In order to clear Chrome's DNS cache, enter in the URL bar, and press Clear host cache. Relevant discussions: How to install DNSCrypt on Android The dnscrypt-proxy source code can be cross-compiled for Android using the provided scripts. It might also soon be part of the Cyanogen Mod. For jailbroken iOS device, GuizmoDNS is an app to change DNS settings (for 3G/4G and Wifi), with support for DNSCrypt. It is available on Cydia. The command-line client is also available on Cydia. However, the version on Cydia might not be the latest one. Official pre-compiled binaries of the latest version are available on the DNSCrypt download page. The DNSCrypt source code can also be compiled out of the box for iOS devices, using the provided script. With the introduction of the Network Extension Framework in iOS 9, it may be possible to write a DNSCrypt client app that would run everywhere, without requiring a jailbroken device. Modern open router firmwares such as Tomato Shibby and other Tomato variants include a DNSCrypt client out-of-the box. The dnscrypt-proxy client is also available on OpenWRT which has a wiki page on using DNSCrypt on OpenWRT. dnscrypt-proxy can also be found in Entware. It can also be compiled for any Linux-based target, running an Intel, Mips or ARM CPU. The most popular client DNSCrypt implementation is dnscrypt-proxy. It can be used on its own, or through one of the graphical user interfaces listed above. dnscrypt-proxy implements the latest revision of the protocol and works on many platforms, including Windows, macOS, Linux, OpenBSD, FreeBSD, NetBSD, Android and iOS. It can be extended with plugins. For more information on dnscrypt-proxy, please refer to the dedicated wiki. DNSCrypt-Loader is a console-based tool to manage the DNSCrypt proxy client on Linux. It requires a minimal amount of dependencies, has an always up-to-date list of resolvers, and can automatically change the DNS settings to use DNSCrypt. Pcap_DNSProxy is a very fast DNS proxy. It includes a DNSCrypt client implementation. Take control of your DNS traffic Aside from implementing the protocol, common DNSCrypt clients give a lot of control on the DNS traffic. Use dnscrypt-proxy, Simple DNSCrypt, and OSXClient to: Review the DNS traffic originating from your network in real time, and detect compromised hosts and applications phoning home Locally block ads, trackers, malware, spam, and any website whose domain names or IP addresses match a set of rules you define. Prevent queries for local zones from being leaked. Reduce latency by caching resposes and avoiding requesting IPv6 addresses on IPv4-only networks. Force traffic to use TCP, to route it through TCP-only tunnels or Tor. Files (source code tarballs, precompiled binaries, list of resolvers) can be verified with the Minisign tool and the following command:

If you are running your own private or public recursive DNS server, adding support for the DNSCrypt protocol can be done by installing DNSCrypt-Wrapper, the reference server-side DNSCrypt proxy. DNSCrypt-Wrapper can be compiled from the source code. OSX users can also use Homebrew to install it: . The proxy is compatible with any DNS resolver software, including Unbound, PowerDNS Recursor and BIND. A Docker image for dnscrypt server is also available, and is the easiest and fastest way to deploy a DNSSEC-validating, DNSCrypt-enabled caching DNS server. It includes a pre-configured Unbound server, dnscrypt-wrapper, and all the scripts required to perform key rotation and supervision. Another option is dnsdist, a highly DNS-, DoS- and abuse-aware loadbalancer. Its goal in life is to route traffic to the best server, delivering top performance to legitimate users while shunting or blocking abusive traffic. dnsdist can act as a DNSCrypt server when compiled with . unbound, a validating, recursive, and caching DNS resolver, can also act as a DNSCrypt server when compiled with . Refer to DNSCrypt Options section in for configuration options.

DNSCrypt is typically deployed using a pair of DNS proxies: a client proxy and a server proxy. The client side of DNSCrypt is a proxy to which regular DNS clients can connect to. Instead of using your ISP's DNS settings, you can just configure your network settings to use or whatever IP address and port you configured the DNSCrypt client to listen to. The client proxy translates regular DNS queries into authenticated DNS queries, forwards them to a server running the server DNSCrypt proxy, verifies the responses, and forwards them to the client if they appear to be genuine. The server side of DNSCrypt receives DNS queries sent by the client proxy, forwards them to a trusted DNS resolver, and signs the responses it receives before forwarding them to the client proxy. The DNSCrypt protocol uses UDP and TCP ports 443, which are less likely to be filtered by routers and ISPs than the standard DNS port. The local network is usually the most vulnerable network segment against active attacks such as DNS spoofing. The DNSCrypt server can run on the router, along with a modern DNS resolver. Clients can then run the client code of DNSCrypt, leveraging the router DNS resolver. |----- Most vulnerable to attacks ------| |-- Most vulnerable to modification --| dnscrypt client dnscrypt server Laptop/workstation/phone/tablet --------> home router --------> ISP --------> the Internet |--------- Secured by DNSCrypt ---------| |------------- Secured by DNSSEC --------------| Alternatively, companies, organizations and individuals are running public DNS resolvers supporting the DNSCrypt protocol. These can be used as an alternative to running a DNSCrypt server and a DNS resolver on the router. For maximum protection, DNSCrypt client can run on every client device: |----- Most vulnerable to attacks ------| |-- Most vulnerable to modification --| dnscrypt client dnscrypt server Laptop/workstation/phone/tablet --------> home router --------> ISP ----------> the Internet --------> public DNS resolver |----------------------------------- Secured by DNSCrypt -------------------------------------------| |--- Secured by DNSSEC ---| |--- Most vulnerable to logging ---| Or if you totally trust the local network, the DNSCrypt client can run on the router instead: |----- Most vulnerable to attacks ------| |-- Most vulnerable to modification --| dnscrypt client dnscrypt server Laptop/workstation/phone/tablet --------> home router --------> ISP ----------> the Internet --------> public DNS resolver |------------------ Secured by DNSCrypt --------------------| |--- Secured by DNSSEC ---| |--- Most vulnerable to logging ---| Finally, you can run your own DNSCrypt server on a remote, trusted network, to get full control over what the resolver is doing and logging: |----- Most vulnerable to attacks ------| |-- Most vulnerable to modification --| dnscrypt client dnscrypt server Laptop/workstation/phone/tablet --------> home router --------> ISP ----------> the Internet --------> private DNS resolver |----------------------------------- Secured by DNSCrypt -------------------------------------------| |--- Secured by DNSSEC ---| Please note that DNSCrypt is not a replacement for a VPN, as it only authenticates DNS traffic, and doesn't prevent third-party DNS resolvers from logging your activity. By design, the TLS protocol, as used in HTTPS and HTTP/2, leaks websites host names in plain text, so DNSCrypt is not enough to hide this information.

Using DNSCrypt in combination with a DNS cache For optimal performance, the recommended way of running DNSCrypt is to run it as a forwarder for a local DNS cache, such as Unbound or PowerDNS-Recursor. A caching resolver can provide high availability, by forwarding queries to multiple upstream DNSCrypt client proxies, configured with different providers. dnscrypt-proxy instances and the caching resolver can safely run on the same machine as long as they are listening to different IP addresses or different ports. If your DNS cache is Unbound, all you need is to edit the unbound.conf file and add the following lines at the end of the server section: The first line is not required if you are using different IP addresses instead of different ports. The lines indicate addresses and ports of dnscrypt clients to use as upstream resolvers. Then, start the two client proxies, listening to different local ports (40 and 41 in this example). Pay attention to the fact that some resolvers do not support the DNS security extensions (DNSSEC). If Unbound is configured to perform DNSSEC validation in combination with an upstream server that does not support DNSSEC, queries will fail. Either use only DNSCrypt resolvers with support for DNSSEC, or disable DNSSEC support in Unbound by commenting out the line in its configuration. A local caching resolver can also be extremely useful to forward queries for CDNs or internal domains to a specific resolver.

DNSCrypt is totally free, but if the project is useful to you, a donation to support my work would be very appreciated: Individuals and organizations running DNSCrypt-enabled resolvers may also have a donation link. Please check it out on their own website. If you use them regularly, your contribution would also help them to keep providing a great service for free.|||

Home of the DNSCrypt project, a protocol to improve DNS security. Download DNSCrypt clients, the DNSCrypt server proxy, and read the specifications here.