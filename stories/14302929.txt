The following theory, or rather algorithm, arose as a result of the analysis of my own personal, organisational deficiencies. Thus, its aim is to aid individuals, that observe the same issues in themselves. The fundamental idea behind this theory is that tasks can be efficiently completed and organised, by layering them in tiers and structuring them as a tree. By utilising a “Divide and conquer” strategy, seemingly complex tasks can thereby be recursively broken up into smaller sub-tasks to build a hierarchical model. This model then serves as a visual and mental aid and possibly optimally increases one’s daily efficiency by removing the non-presence of a linear and pragmatic task management.

In order to ease the process of describing this solution, it shall henceforth be referred to as the “Task-tree theory” (Abb.: 3xT).

It is important to mention, that this theory merely advises on how to implement this solution for oneself. On which scale somebody applies the 3xT to themselves is absolutely up to that very individual.

Prior to setting up the task-tree and filling it with tasks, one has to accomplish a certain amount of self reflection. Especially when implementing the task-tree theory as advised in this blog post, it is essential that one has hypothetical or even practical goals, which they wish to reach. This implies that to a degree, a person, intending to use this solution, has to plan its life and set itself objectives. This plan serves as the data “input” for the algorithm, used to derive the task-tree.

An optimal format for the task tree, would be to label the different tiers on one side and place each task/node within horizontal “lanes”, each lane corresponding to one tier. Within a lane, only chronological dependencies can exist. This implies that all tasks within one lane share the same importance and no sub-tasks can be within the same lane as their parent. Adding a deadline to each task greatly increases the 3xT’s practicality.

Three different possible dependencies can exist between tasks:

Hierarchical dependencies:

 

 A solid black line is used to connect a node with its sub-tasks.

Optional tasks:

 

 Tasks that are not necessarily required to complete a parent task, but better the outcome, can be connected via a dotted line.

Chronological dependencies:

 A dashed line is used to define a chronological dependency between two tasks within the same lane. This can be used to indicate that although two tasks share the same importance, one has to be completed, in order to start the next task.

NOTE: Tasks are not meant to be layered chronologically, but according to their dependencies.

Possibly the most important aspect of the 3xT is the tiered structure of the tree. As explained earlier, hierarchical dependencies cannot exist within one tier, which implies that the number of tiers of the tree is equal to its height.

In traditional information technology (and apparently nature), a tree always possesses a root. Since a root task seems trivial, it will be left out in the proposed model. Should one insist on having a single root, it could be labelled e.g. “Life success”.

Due to there being no actual root, the top-most tier is comprised of all “life goal” level tasks.

Starting with tier 0, each task is split into sub-tasks. These tasks share the same importance regarding the completion of their parent task. Recursively repeating this process ultimately results in a tree structure that gives an exact overview of one’s “TODO’S”.

In order to get a more detailed idea of this algorithm, it is advised to take a glimpse at the example graphic above.|||

The following theory, or rather algorithm, arose as a result of the analysis of my own personal, organisational deficiencies. Thus, its aim is to aid individuals, that observe the same issues in themselves. The fundamental idea behind this theory is that tasks can be efficiently completed and organised, by layering them in tiers and structuring them…