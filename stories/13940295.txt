You might not need WordPress

Conception of Static Site Generators is as follows: they do not need any special hosting environment. The only requirement is Node.js based task run in console which compiles the installation to static HTML files, which can be deployed anywhere. Page elements are separated into partial files and uses basic logics of template engines like iterations or conditions. There is still separation of display and data , but data is stored in a files instead of a database. Data files can be in HTML or Markdown format. When you want to write a new blog post or create another subpage, you create a file which is processed through template layer and it becomes a part of the generated static HTML page.

You might have heard about Static Site Generators before. As a response to more and more complex CMS implementations, new trend appeared on a web development world that reminds me old times, when whole page were written in pure static HTML.

In this article i would like to present how to build a small WordPress’like site that will take little effort and avoid the cons described above. A fusion of a few technologies will be used which work very well together.

There are a few aspects which make WordPress not so ideal. Let’s specify them one by one:

Today we will talk about building small sites with content management interface where programming skills are not necessary to update or edit the content, for example, an agency page or simple publishing platform such as a blog or magazine. Because projects like this are not too big and probably have a small budget, you need a lean solution. What came to mind at first is WordPress. Everyone uses it! But is this currently the best choice? WordPress has become so popular that people do not even consider alternative solutions. However, each year, newly improved tools are constantly being developed.

Selection of the most popular Static Site Generators:

You can find more at https://www.staticgen.com.

With Static Site Generators you can run a graceful site with minimalistic code structure and have the ability to integrate any javascript library as easily as you would do that on Codepen. You can also convert any static page bought on a template store to fully edit a site without too much effort.

You still need coding skills for moderation because there is no built in authorization system and administration interface. But stop… we told you about CMS before. Not a toy for development geeks! Do not worry, there are prepared solutions for that. We will discuss them later but for now, let’s move to the next step.

This part could also have the name — You might not need even a hosting server.

Storing your git repository on the GitHub has various benefits. Thanks to the GitHub Pages, you are able to publish content of your repo for free under the github.io domain or any other domain. The primary purpose of the GitHub Pages is to host public repositories in one of their branches (master or gh-pages) which makes it a perfect place to host static sites. But there is more. GitHub Pages have built in Jekyll integration which automatically regenerates your site if it discover a Jekyll file structure inside your repository. So when you chose Jekyll as your Static Site Generator, you can edit files on your computer or even directly from the GitHub interface and they will be automatically deployed after pushing the changes.

So you have deployment issues solved — continuous integration out of the box. Now, the last thing left is CMS. Editing things from UI without touching a git and Jekyll.

For this moment there are few Content Management Systems dedicated for Jekyll:

They allow you to set up forms with custom fields for creating and editing content, building page structures and managing editorial workflow. Updated changes become visible after a couple of minutes or seconds, after GitHub finishes the new build.

Prose is the most promising editor. It is relatively easy to configure and offers reasonable user interface. The Jekyll Admin project is also free but its capabilities are still severely limited. Others are paid solutions — you can try them as well but i decided to stay with Prose. Its configuration is like a continuation of Jekyll.

Markdown and HTML files on the project contain text and formatting but data may also be an image. Prose has the ability to set up a media folder and has an image upload widget built into a WYSiWYG editor, therefore uploading image into content is not a problem.

Things become worse when it comes to placing an image onto another section of the page other than the primary content or displaying it alone on a listing of article teasers. However, it is a matter of time to solve this and there are some prepared workarounds. I will focus more on this topic in the future.

After the development phase is done, the project has to go live. Since the page is already hosted on GitHub Pages, the only task is to set it up on a final custom domain. To give someone access to the content editor, they must have their own account on GitHub and authorized on prose.io. Then, it needs to be added to the project’s collaborators to give access to the repository. If someone can use Facebook, they should deal with it as well.

That is all for now. I hope this article will encourage some of you to do your own research on the topic of Static Site Generators. Is there a place on the market for them? Of course! It is exactly when you are not sure whether your project is big enough to implement CMS solution. It may also replace some cases where WordPress, Joomla or Drupal is normally used which may speed up the development of small projects and improve their quality because simpler code and technology stack means greater opportunity to avoid chaos.

If you are interested in the topic, stay tuned and visit MVP Space blogs. The next article will be a step by step guide on how to set up a Jekyll site with GitHub Pages and Prose as a content management interface.

And of course if you already have any experiences with Static Site Generators, please write your thoughts in the comments.|||

Today we will talk about building small sites with content management interface where programming skills are not necessary to update or edit the content, for example, an agency page or simple…