Tony Hoare has called null references his “billion dollar mistake”. Dealing with nulls and their consequences have created a large number of bugs, and eaten a lot of developer time. It’s certainly bad enough when you understand nulls and why they exist, but Benjamin Soddy inherited code from someone who absolutely didn’t.

First, there’s our new type, the :

Not quite FileNotFound territory. Based on this code alone, you might think that this is some legacy .NET 1.1 code, back before .NET had nullable value types, and thus there was no way to set a boolean to null.

You’d be wrong, however. Because as a sibling to , we have the class :

I’m no expert on the subject, but the comments alone read to me like poetry.

Like the Helper.GetSafeInteger,

 but returns a negative one instead of zero which may be a valid number,

 the value,

 Like the Helper.GetSafeInteger,

 but returns a negative one instead of zero which may be a valid number,

 the value,

 Converts the null bool to byte bool,

 the boolean,

 Converts the byte bool to null bool to,

 the byte bool

Benjamin junked this code, but is still a legend around his office. “Are you sure you aren’t ing this?” is the polite way of saying “your code is bad and you should feel bad” during code-reviews. “I found a ,” is called out when someone trawls through legacy code, in the same tone of voice as a lifeguard finding a “floater” in the pool.|||

