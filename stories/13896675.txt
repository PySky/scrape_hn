You’ll often see instructions for creating and using disk images on Unix systems making use of the command. This is a strange program of obscure provenance that somehow, still manages to survive in the 21st century.

Actually, using is almost never necessary, and due to its highly nonstandard syntax is usually just an easy way to mess things up. For instance, you’ll see instructions like this asking you to run commands like:

Guess what? This is exactly equivalent to a regular shell pipeline using and shell redirection:

That weird argument in the version isn’t actually doing anything special—all it’s doing is instructing the command to use a 4 MB buffer size while copying. But who cares? Why not just let the command figure out the right buffer size automatically?

Another reason to prefer the variant is that it lets you actually string together a normal shell pipeline. For instance, if you want progress information with you can combine it with the command:

There’s an obscure option to GNU to get it to display a progress meter as well. But why bother memorizing that? If you learn the trick once, you can use it with any program.

If you want to create a file of a certain size, you can do so using other standard programs like . For instance, here are two ways to create a 100 MB file containing all zeroes:

The command is useful for lots of things, not just creating disk images. Therefore it’s a better investment of your time to learn than it is to learn . In fact, you probably already know how to use it.

I will confess: there are some interesting options that has, which aren’t easily replicated with or . For instance, you can use to convert a file between ASCII and EBCDIC encodings. So if you find yourself doing that a lot, I won’t blame you for reaching for . But otherwise, try to stick to more standard Unix tools.|||

