In these six lines, we created a full-text search query on multiple fields with an autocompletion and highlighting support. Not to mention the searchbox UI widget to display the results.

Let’s see how to do this in our above declared DataSearch component.

Now every time you search, ReactiveSearch will add the query context of these two components along so that only results that match all are shown. What happens if the price filter’s value changes by a user action? The next search query will use that updated value to filter results. We call this concept reactive chaining! The library handles this for you.

See DataSearch component’s documentation to read more on what you can do with it.

If all of this sounds too good to be true, see it for yourself in this interactive tutorial to build a Hacker News search app.

Or go straight to the docs — opensource.appbase.io/reactive-manual.

Bookmark the project on Github so you can find it when you need to build that awesome search!|||

We’re excited to launch Reactive Search — a UI & data components library for building amazing search experiences. It lets you build search focused UIs similar to Amazon’s, Yelp’s or Airbnb’s. How do…