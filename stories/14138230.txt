On the first day of 1993, id Software published a press release announcing Doom. A first-person shooter designed to capitalize on the popularity of the studio's previous game, Wolfenstein 3D, Doom promised "revolutionary programming and advanced design" for players who stepped into the boots of soldiers pitted against hell's demons. More than that, id's enthusiastic young team boasted of 256-color VGA graphics, an engine able to render three-dimensional graphics in real-time, a panoply of textures to diversify surfaces, and cooperative and competitive play for up to four players over local area networks.

"This is the first game to really exploit the power of LANs and modems to their full potential," the press release gushed. "In 1993, we fully expect to be the number one cause of decreased productivity in businesses around the world."

Id's team had the enthusiasm, the technical savvy, and the creative drive. All that stood in their way of total world domination was one minor detail. They had to write the game.

"The engine for Doom was running even in January [1993], the very first month we were working on it," said John Romero, co-founder of id Software and co-creator of Wolfenstein 3D, Doom, and Quake.

Doom's canonized engine lived up to its prospects. The tech was an evolutionary leap beyond Wolfenstein 3D's orthogonal halls, single-floor levels, and corridors more brightly lit than the fluorescent bulbs that illuminate office cube farms. Floors could be chopped up into multiple segments, stairs extended between platforms of differing heights, elevators shuttled players between floors, walls curved to create sinuous pathways, and lighting ranged from blinding to pitch-black and every setting in between.

All those advancements amounted to nothing without DoomEd, the level editor Romero and fellow id co-founder and coding prodigy John Carmack authored together. Working on NeXTSTEP, a graphical operating system light years ahead of command-line systems like DOS, Carmack programmed the data structures that demarcated a level's parameters—namely sectors and lines—while Romero implemented support for points of view, textures, ceilings, and floors.

With DoomEd complete, Romero cracked his knuckles and dug in.

"By the end of January the engine was running," Romero continued. "The editor probably took, I'd say four months to make, and it was not modified after that. I basically made it and then started working on levels."

Every level has two titles. "Hangar" is the Christian name for Doom's inaugural level. Doom's most devoted fans tend to disregard those descriptors in favor of the game's easy-to-follow syntax: E#M#, shorthand for episode and map number. To them, "Hangar" is and always will be E1M1.

Several factors elevate E1M1 as one of Doom's most popular maps, if not the most popular. Rooms vary in height and width. Items form a breadcrumb trail, guiding new players along the path to the exit. Two of its three secrets are easy to find, while the third requires some thought.

E1M1 is the apotheosis of Doom's level design, and there's a good reason for that. "You should make your first level last because you've created your design language," Romero explained. "You've been using it and refining it. If you're going to get people excited about your game immediately, the first level is where you do it. You're going to be using the latest, up-to-date design skills and language to create that beginning part of the game and introduce players, in any way you can, to all the cool stuff that's to come."

By the time Romero got around to crafting E1M1, he spoke DoomEd as fluently as he spoke English. The level players explored on release was his first draft. Romero made only one change. From the starting point, move forward and follow the curvature of the hall to an industrial door. In Doom's depiction of the future, doors don't swing open; they slide up and emit high-pitched squeals. Throw it open and enter the computer room, wall-to-wall terminals occupied by Sergeants (zombies toting shotguns) and the aptly named Zombieman, undead soldiers packing pistols.

Prior to version 1.9 of the game, patched in February 1995, the computer room did not exist. "That room was kind of a hallway that had a couple of pillars in the center that were a dark-green color," Romero said, "and the ground was just brown, and it led into the next area with the zig-zag [bridge]. That was the only room where I basically said, 'This looks like crap. I need to make it look better.'"

Romero nailed E1M1's first room much earlier, although it went through its fair share of iteration. Tom Hall, then id Software's principal designer, had players starting in a small room facing a table littered with playing cards. No table object existed; instead, Romero or another designer would paste a texture depicting playing cards onto a crate. Hall, who envisioned wanted Doom to tell a proper story beyond Wolfenstein 3D's "shoot everything that moves" objective, the table had been abandoned mid-game because an alarm had sent soldiers running for their weapons.

"We didn't do that," Romero explained, "because that would have forced the player to do something instead of letting the player learn how to play that kind of a game. It wouldn't have given the player time to explore the environment and look around; it would have thrown them into an action scene like a lot of movies do, except you sit there and watch a movie. This was the first time people had seen an engine like this and they just wanted to look around."

Romero's slant on E1M1's first room exudes a calm-before-the-storm ambience. Players find themselves in a wide room bordered by grimy walls and computer terminals. Ahead, four pillars surround a recessed floor covered in blue carpeting. A mangled corpse rests near the center of the recessed area, its bloody entrails contrasting sharply with the floor's blue texture. The player's eye locks on to the body, exactly as Romero planned.

"He's dead in front of you; that means there's something bad happening, versus it just being a clean area."

Every room and hallway of E1M1 follows that old writer's axiom: "show, don't tell." To the left of the starting room, a side chamber contains stairs that trail up to a podium where a green suit of armor sits. Fighting their way through the computer room, players enter a chamber flooded with slime. A bridge zigzags across, but the way forward is impeded by zombies on the ground and, high up on a ledge, a leathery-skinned Imp, who brings a friend if players selected a higher difficulty level.

Usually, that lone Imp spots players before they spot it. It greets them by hurling a fireball. Most new players step to the side and stare in wonder as the projectile sails through the air and explodes against the wall in a burst of cinders.

"It was kind of crazy, putting the Imp in there, but it was kind of cool because it was the first time you could see his fireball flying through the air toward you," Romero said. "People had not seen that, either. We loved it, too. We had been making all the levels in the game for months and we wanted to make sure the player could see that this is a thing that will happen a lot more later on."

E1M1 doesn't pull out all the stops, but it comes close. Rooms with ceilings of variable height, long staircases, an Imp sniping from atop a ledge, and three secrets—just enough material to whet the player's appetite without playing every card in DoomEd's hand. "That's basic ramping: how do you get the player, at the very beginning, to learn things and then see something cool and see something cool? But don't blow it all at once; a few levels into the game and they'll have seen it all," said Romero.

Players who survive the slimy chamber pass through another door and enter a dimly lit room. Enemies are barely visible, vague forms shambling toward them. Just ahead is a door marked with an exit sign—and inside, on higher difficulty levels, waits an Imp, perfectly positioned to slash at the player's face as soon as they rush in.

Designers of contemporary games would call the Imp's placement a jump scare. Romero thought of it that way. He was keen to play to Doom's blend of action of horror. "After fighting, you'd get to do some exploration," he said of the game's pacing. "Otherwise the levels would be a blur. You need time to learn them, look around to see what you can see, and hopefully see a monster, shoot him, and not be able to attack you back—stuff like that to [reward] the player for exploration."

Doom's staccato rhythm of fighting and exploring was calculated. Romero drove players from areas such as an open-air elevated courtyard in E1M3 into a murkier chamber where a blue card rests on a pedestal. Naturally, players make haste for the card. Touching it triggers a scene straight out of a horror movie: the lights go out, a door behind the player grates open, and a mob of Imps silhouetted by sickly yellow light come slithering out of a secret chamber.

Players who keep their wits about them should notice a well-placed lamp through the darkness, marking the passage where they came in.

"The first time you get it," Romero said of the blue key, "if you turn when you hear the [door] hissing, you see a dimly lit room behind the silhouettes coming toward you, which is really cool. That's why I put the bright lights in the corner: you know where the exit is and can get out of there."

E1M1 flows perfectly as a single-player level, but it shines in multiplayer, too. It's spacious enough to accommodate four players in deathmatch, yet intimate enough that two players won't have to wait long to find action in a one-on-one contest. Despite prominent mention in the press release, multiplayer was a famously late addition.

"We designed everything to be single-player until the last couple of months, when we actually put multiplayer in the game," Romero recalled. "Then we had to go through and add multiplayer starting points, weapons, and balance all the levels."

Balancing levels for cooperative and deathmatch play was as simple as firing up DoomEd and sprinkling in weapons and enemies—such as the rocket launcher found in E1M1's courtyard, near the pond of toxic ooze that holds blue power armor—set to appear only in multiplayer.

"We're talking a couple of days," Romero said of rigging the game's 27 single-player maps for deathmatch and co-op play. "It was pretty quick. We just knew that that was going to be a world killer."

E1M1 represented peak Doom level design. E1M2, also known as "Nuclear Plant," was the opposite, at least at first.

"Doom E1M2 is the level that had the most work done on it, since I started it pretty early," Romero said. "In fact I decided to think about how we were going to make levels for this game. We had no idea. We were making Wolfenstein-type stuff for months because it was hard to get out of that mindset. That was all we had seen. We had these cool abilities in this engine, and we needed to really think about how we were going to use them."

Romero broke ground on E1M2 in April of '93. He started by building pieces. A wide set of stairs curves up and around 90 degrees, leading to a hallway that opens into a cavernous room. Romero played with his room's lighting until the room's contours were barely distinguishable—a counterpoint to Wolfenstein 3D's blinding spaces.

"I made the room dark. I made tall areas," Romero said. "There weren't any monsters in the map at this time, during development of the game. It was too early for monsters, but I pictured there would be monsters up there, so I made those areas brighter. I went in and got the scale right, all that stuff, and thought it looked really cool."

Romero called in Tom Hall and a few other designers to show off his creation. They were floored. The room's walls were angled so that there were no corners, only angles near where corners would be.

"When you're making levels, you create this checklist, detailed rules for your game," said Romero. "The number-one rule was: if you could make this room in Wolfenstein, you have failed. Whenever we were making any room, it shouldn't exist in Wolfenstein. If it could, you need to alter it and make it cooler because nobody wants to see the last game in [your current] game. That was the rule even later on. When we were making Quake, the rule was that if you could make this room in Doom, you've failed."

Over time, Romero's shadowy space in E1M2 became one of Doom's most infamous areas. Expanding on it, Romero stretched out the preceding hallway, filled it with toxic waste, cranked up the lights, and planted blue vials of health along a bridge over the ooze that ended at a box of shotgun shells sat on the elevator.

Bright lights, safe passage over toxic waste, and a box of shells out in the open? Astute players grew nervous.

"This all leads up to something," Romero said. "You're in a room at the top of these stairs with just a little path over the slim. There's some health, and then some shotgun shells. So it's like, 'They always give me this stuff when bad things are going to happen.'"

The siren's call of the box of shells proves too tempting. Players race forward to grab it. Touching the elevator sends it plummeting down into the pitch-black room that Romero had created, only enemies swarm its depths, captained by Imp sentries raining down fireballs from alcoves set high up on walls.

"That was another instance of me thinking, I bet they won't expect this to happen," Romero described, "going down into and seeing a huge room, and getting attacked while you're coming down, versus just taking a big elevator down, and then it opens into a room. I thought it was more interesting to show the whole room as you're going down, and to be vulnerable that way."

Happy with his proof of concept, Romero added other pieces. Just before the winding staircase that leads to his death trap, an opening to the right reveals another slime-covered space notable for a single pillar in the center. The side of the pillar that players see upon entering the room is plain, but behind it is a switch. Flipping it causes a faint squeal—a door, or perhaps a secret panel, yawning open.

It's the latter, evidenced by a huge gap in a previously solid wall across from the slime room. Step through the gap, and players pass out of dazzling corridors and into a warren of corridors, most of which are blanketed in darkness. All summed up, the secret area is roughly the same size as the passages players are meant to explore.

"That level had a lot more work done on it than any other level," Romero said. "It wasn't bigger than E1M7, but it did have a really huge secret area, which is that big maze. What I wanted to do there was to show people that when you find a secret, it's not necessarily a little room or something necessarily inconsequential. It could be a huge chunk of the map that could be even more fun to play than the [main] part."

Far back in the maze is a short corridor where a light fades on and off. Players turn a corner into the hallway and are accosted by a pair of Imps. Panicked, players fire blindly—and then, above shrieks and grunts, another telltale creak of a panel sliding away.

"You're going to be shooting," Romero said, "and I was hoping a stray bullet would hit a wall and that would cause it to open, and you'd be like, 'How did that happen? It must have been me shooting the wall.' That was another, 'Wow, you can do that too? This is a secret inside of a secret.' E1M2 shows, here's a secret that's bigger and cooler that's bigger and cooler than any secret I've seen before, and here's a secret within a secret to get a really cool weapon."

Past the false wall and up a set of stairs, players emerge in a (mercifully) lit room with a pillar. Atop the pillar, lowered by a switch, rests a chainsaw, marking the first appearance of the iconic weapon. Set in the wall beside the pillar, a window looks into a closet-sized room inhabited by an Imp. Players grab the chainsaw, find their way out of the maze, and head up the curving stairs. Less than halfway up, they may notice an alcove on the left. Stepping into it causes a lift to drop them into that closet-sized space, where the Imp greets them warmly.

That closet serves a dual purpose. If players didn't know about the chainsaw before, they can drop into the closet and look out into the chainsaw room. "Secrets are just so cool," Romero said, laughing. "We carried them into Commander Keen and into Wolfenstein, but they were barely in Wolfenstein. We decided that in Doom, it would be secrets everywhere. Then it became a checklist item: do you have four secrets in your level?"

Is four secrets too many? Romero doesn't think so. In fact, depending on the size of the level and where designers plant them, four might not be enough. "I think you have to think about, Is that really a secret? If there are so many secrets, does this one really count, or is it expected?"

E1M2's nest of secrets gave Romero plenty of opportunities to finetune his approach to deciding when, where, and how to hide them. "They mostly [were signaled by] a texture that seemed out of place or different," he explained. "There were still secrets that you couldn't tell, just to make them super secrets. The secrets we wanted people to find, we made sure there was a visual difference. In Wolfenstein, we had that sometimes, but it wasn't consistent. With Doom, we were trying to be more consistent with how we placed secrets."

Signs hanging askew or textures that don't quite match provide tacit instruction to players. However, teaching players to look for secrets and venture into side areas was equally important. Each and every off-the-beaten-path region in Doom's maps contains items of value: health packs, ammo boxes, armor shards, or—the prize among prizes—a new weapon.

Sprinkling power-ups was an assignment Romero and other designers approached by making sure that players came out of optional paths better than before they went in. E1M2 drives this lesson home in spades, from the dark and claustrophobic maze that rewards inquisitive players with a chainsaw, to another secret-inside-a-secret, a spacious courtyard where Sergeants protect a chaingun and a Soul Sphere that adds 100 to the player's health.

"One of the things we did when we were balancing and designing games was every level was designed with a pistol-start in mind," Romero said. You should be able to play and finish every single level in the game if you start with the pistol, because if you die, you're going to start back with a pistol anyway. So what we did a lot of times is put some powerful stuff sometimes near the beginning of the level. If you find it, then you're going up to the proper guns for the area you're in."

id Software followed Doom with Doom 2: Hell on Earth in 1994. By 1995, Romero and the others felt compelled to go back to the original and add fourth episode, Thy Flesh Consumed, to exhibit the design skills they had refined while working on Doom 2.

Late one night, Romero sat down at his NeXTSTEP and booted DoomEd. He was in charge of building E4M2, and had the perfect level flow in mind. "First of all, Episode 4 was supposed to be expert level, the hardest episode," he remembered. "American [McGee] opened with a really great map that was so cool and difficult, and I thought, This has to follow that and get everybody used to: 'this is some hard shit.' I decided to say, 'I have six hours to do this.' I started at midnight because I do my best work at night. I got done at 6:00 a.m., and the whole map was [imagined] in the editor as I was playing it."

E4M2 begins by dumping players into the proverbial frying pain and all but throwing them into literal fire. Two Sergeants march in place, facing away from players. Opening fire is ill-advised: Across the level, Imps fling fireballs and Cacodemons spit wads of lightning. Players have a few ways to proceed. They can race forward, but the Sergeants are sure to notice. Another option: sit back and wait. Doom's enemies are notoriously quarrelsome. Cacodemons and Imps will throw their projectiles even if players are standing right behind a Sergeant. The zombie will get hit, rightfully and royally pissed, and respond in kind.

Whatever they decide, players must act fast or get roasted in the line of fire.

"I was scoping it while I was making it," Romero reflected, "and thought, This is as big as it's going to get; I can't get bigger than this. It's a relatively small map, but it's hard to get through. American started his level quiet. It didn't start out with explosions, so I wanted to start my level with action happening right now."

E4M2 breaks down into four parts. Beyond the starting platform, players breach a chamber on the left where they have to raise a floor to create a winding staircase leading up to the top, where a Baron of Hell guards a teleporter. Far to the right are white walls mottled by pulsing cracks of lava. All the way across the level, a final platform hosts a Cyberdemon, lying in wait for players who run blindly toward the exit nearby.

Progression necessitates risk. E4M2 is like a house on stilts, all of its architecture perched on pillars and platforms high above a burning floor that saps their health.

"You can see the end from the beginning, but you can't get there yet," Romero said. "You've got to go through these side areas before you can get to the end. It's hard to run and jump and not fall into lava. There are little, tight turns, and immediately a Baron of Hell in the next room, and a Cyberdemon up on top, and there are Cacodemons all around in this small space, and you're trying to solve a puzzle and just not die."

By the time they completed it, most players likely agreed that E4M2 had earned its proper title, "Perfect Hatred," a hundred times over.

"For the original Doom, some of the names came from Tom [Hall] coming up with initial names: the Hangar, Command Station. Those are Tom's names," he remembered. "Episodes 2 and 3 was Sandy Petersen naming those: Mt. Erebus, Phobos Anomaly, and all that. For Episode 4, [artist] Kevin Cloud came up with a big list of things we could name from. He thought it would be cool if we had these biblical [phrases] we could pull from. 'Oh, Against Thee Wickedly? Hell yeah!' I thought that was cool. I loved 'perfect hatred,' so those were my two levels."

It took John Romero six hours to build E4M2. Twenty-two years later, feeling the urge to brush up on his level-design skills, he sat down to build an alternative to Doom's E1M8. "I chose that level because I didn't make the original E1M8; I asked [designer] Sandy Petersen to make it. We were getting near the very end of the project, and I didn't have that much time, so he did it in a day or something."

Dozens of more advanced games and editors had come and gone since Doom's heyday. Romero would have used one had he felt so inclined, but for him, Doom's toolset was the path of least resistance. He still knew it—he would always know it—and it would let him bypass the slow process of learning new tools and cut straight to building maps.

Romero designed his alternate E1M8, "Tech Gone Bad," as the inverse of Sandy Petersen's. Petersen's level was dark, moody, and punctuated by a battle against two Barons of Hell—a sort of final-boss encounter that put a bow on Episode 1, which id gave away for free as shareware. Romero's map is more open and crowded with enemies.

"At the end of the game, for me, I wouldn't want the game to end, but it's cool that the end level is so huge and fun to get through," said Romero. "When you're done with it, you'll feel like you really went through something—although the original E1M8 might have helped sell the game more; it ended so quickly and you were left wanting more."

Romero's E1M8 was even more frenetic than E4M2. Unless players append it to their Doom version of choice and build up their arsenal by playing through Episode 1's preceding levels, they'll set foot in Romero's E1M8 carrying only a pistol and the Doom marine's hairy fist. The trick, Romero explained, is to get to a safe place, pick off a Sergeant, steal his gun, and then weave in and out of cover, sniping monsters and looting them for ammo.

It's doable, but barely, pushing id's pistol-start mission statement to its limits. "I figured that by this time, people are really good. If you start out and go to the right, then go left around the candelabra in a room, you're basically not getting hit by any fireballs. You just pick off the guys, then you run over and pick up a shotgun and blow everyone away. You can do it without getting hurt much, but you have to stand behind that candelabra. Otherwise it's open season."

Doom 2 shook up its predecessor's formula by adding nearly a dozen new monsters, the fan-favorite super shotgun, and 30 maps divided into episode-sized chunks. Though it contained its share of space stations and dens of hell, its earth-themed levels channeled the original game's abstraction. Doom 2's cities consisted of futuristic buildings arranged in urban sprawls that bear only a passing resemblance to realistic environments.

Setting aside hidden mazes and chainsaw rooms, the original Doom's progression broke down to a simple formula. Find colored key cards, unlock doors, rinse and repeat until the level ends. Romero and other designers at id baked Doom 2 with that same recipe, but from new angles.

"You don't want to do the same thing over and over again," Romero said of Doom 2. "It always comes down to keys and locks, so how do we do that but represented in a different way so the game is not just more of the same thing. It needed to feel like there was some extra element in there."

Map 11, "Circle of Death," is one of Romero's contributions. Players begin on the outskirts of a circular platform, and solving the level calls for players to explore smaller rooms adjacent to the ring.

"Off of that ring, going out and exploring," said Romero. "That's the progression: going out from the center in different ways, coming back, and going out again. I think people understand: you get to the end of a little era, and there's nothing else to explore so you've got to come back to the middle. Then you see, 'Oh, I've got that [key] card.' You kind of know the next step is somewhere from the center. I thought it had a pretty good progression."

At a certain juncture through Map 11, players will enter a courtyard identifiable by two gnarled trees to either side. Stairs hug the walls, and heading up either set deposits players near a cage that springs up to reveal the Arch-vile, one of the game's new monsters and arguably its deadliest thanks to its ability to resurrect slain enemies.

"We didn't actually plan which level the Arch-vile would be in," Romero said, "other than that he's probably going to come in somewhere around halfway through the game because he's a pretty powerful guy like the Revenant is. I put him up there because it made sense to keep him constrained to a room and not just running around resurrecting the whole level as you ran away from him. I thought that was a good way to keep him in a cage."

The approach leading to the Arch-vile is one occasion where Doom 2 plays to its roots in action-horror design. By Romero's admission, Doom 2 leans into action and exhibits far fewer horror set pieces and levels than the original. That was a product of id listening to its fan base. Most Doom players favored nonstop action, so the developers gave it to them.

Still, Romero enjoyed punctuating Map 11's otherwise frantic combat by springing the Arch-vile on unsuspecting players. Trigger-happy players could make the encounter more difficult by accidentally shooting at the demon from below, waking him up and causing him to emit his throaty growl.

"You think, What is going on? Then you get up there, it's a dark room and there are other monsters, and there's fire everywhere. It's really scary. I thought it was really good because you're that hallway and room are hard to move around in."

Map 20, another Romero special, is Doom 2 twist on a gladiatorial arena. Through the first door, players set foot in a vast hall. Go in a little further, and two wide platforms descend from the ceiling. A Cyberdemon stands on one; on the other, a Spider Mastermind shrieks upon setting eyes on players. Both bosses unload. Players can fight back, but in this instance, movement proves more effective than shooting. Sprint behind one to put it in the other's line of fire, and within seconds the bosses redirect their fury and firepower on each other, leaving players free to flip a switch and escape to the next room.

"The idea is to learn that room as fast as possible, and even better, getting around them while they're fighting each other to flip that switch, which is crazy," said Romero. "The trick is to make them start fighting each other because I don't want the player to get attacked by both of them. It was a big deal to make sure they're fighting each other, and you get to witness some crazy stuff, and you can't get out of there unless you go to where they're at, so it's even scarier. There are all sorts of ways you can handle it, so I thought, Let's see what the player decides to do."

Map 30, the final stage, was not created by John Romero, but his presence is felt nonetheless. Kevin Cloud got it in his head to play a prank. He whipped up a likeness of Romero's severed head—flowing black mane and all—and stuck it on a bloody spike, then stashed it behind the towering Icon of Sin, Doom 2's final boss that spans an entire wall.

Cloud figured most players would never notice. Clipping through walls was only possible if players typed in a cheat code, and even then the Icon's onslaught of attacks would distract players from even thinking to ghost through its vulpine face to see what, if anything, lurked behind it.

Romero was not most players. "I found that out accidentally, when I was hooking up audio. I saw my head was there. There's no reason to have a graphic there because no one would ever see it, so when I saw my head there I immediately knew they were trying to sneak in an Easter egg... but in a non-obvious way."

Romero loved Cloud's Easter egg, and thought of a way to one-up him. If his head was in the final boss, players were, in essence, attacking him; the Icon of Sin was a mask to disguise the player's true adversary. "So to win the game, you have to kill me, not the Icon of Sin," he reasoned. "Maybe I am the Icon of Sin."

He went to Bobby Prince, the game's composer, and ran an idea by him. Romero would speak the line To win the game, you must kill me, John Romero, and then Prince would work his magic. "I told him, 'Okay, we're going to record this, then pitch-shift it down and reverse it. It's got to sound evil.' He did all of that really quickly and it sounded amazing, so I stuck that in for when my head sees you. It makes that sound on first sighting, and it sounds like this big evil thing on the wall is talking to you, and it just sounds [terrifying]."

Now it was Romero's turn to stifle laughter. He had turned the tables on Cloud by staying mum on the fact that he knew about his buddy's prank. All he had to do was wait for the game to be released, and some player would hear the boss speak and deduce that it had been played in reverse. Word would get out, and Cloud would realize Romero had known about his bloody head all along.

"But the very next day after putting the sound in there, American McGee comes into the office, heard it, and went, 'Oh, backwards scary thing? Let me reverse it.' Then we told everybody and it was over, but we left it in because it was funny."

John Romero's excitement over breakthroughs that occurred during the original Doom's development are the stuff of gaming legend. The most famous anecdote was the day John Carmack tested his network code by running Doom on two computers and entering a deathmatch. Pressing a key on one keyboard, he turned to look at the second monitor and saw his first character moving around. Romero nearly exploded with excitement and sat down to challenge his programming cohort right then and there.

Then there was the time Hall and Carmack surprised Romero by remaking the first level of Super Mario Bros. 3 for PC. The demo, which substituted Romero's Dangerous Dave character for Nintendo's plumber, incorporated code that Carmack had written to scroll the screen smoothly to the right—a technical feat Nintendo had popularized on NES, but that had to date been thought impossible to do on computers.

At the time, Romero and the others worked at Softdisk magazine writing games for the publication's monthly demo disk. Romero took one look at Hall's and Carmack's demo—appropriately titled "Dangerous Dave in Copyright Infringement"—and declared that the demo was too good to share with the magazine; it was time to start their own company. A short time later, id Software was born, and their first game, a 2D sidescroller called Commander Keen sold according to the shareware strategy pioneered by Apogee founder Scott Miller, put the fledgling company on the map.

Romero looks back fondly on those and other anecdotes. But there's another standout moment, one he was fortunate enough to repeat dozens of time while designing Doom.

"There was a point when I was playing—I believe this was after Sandy [Petersen] got on board; maybe late August or early September—and there were these levels that he's been making, and I haven't seen them before. I got to play them. I'm playing the game and I don't know what's going to happen because these are levels I haven't made."

It's a rare treat for a programmer to be surprised by his or her own game. Even if they did not design a certain weapon, monster, puzzle, or level, they know the code. What goes on behind the curtain holds no mystery to them; they are the wizards, and the game casts the spells they commanded it to perform.

"You hear these sounds echoing in the background because you activated monsters and they're wandering around in the dark," Romero continued. "Then I could tell how scary the game was going to be because it was a level I hadn't made. I knew the code, but those monsters were doing unpredictable things as far as I was concerned. That was really cool: to feel a little bit of what people were going to feel even though I was used to playing the game. But if I could feel that at that point, when we were almost done with it, I knew it was going to be pretty great."

Likening Doom's player-character to a racecar and its maps to tracks is a solid analogy, in the right context. Doomguy is no Formula One car, and E1M1 is no Australian Grand Prix. The game's abstract maps have more in common like the war-torn settings of Carmageddon, its protagonist a tricked-out war machine armed to the teeth. The developers at id had made a special point of touting Doom's arsenal in the press release they threw together in early 1993, promising to scratch itchy trigger fingers with a veritable armory of machine guns, missile launchers and—especially tantalizing—"mysterious supernatural weapons." To Doom players who had followed the game's development from that first press release to its network-crippling arrival in December 1993, the only thing mysterious about supernatural weapons was their absence in the final product. John Romero was glad to dispel confusion. "We had this demonic hand that was called the Dark Claw. That was going to do some kind of evil attack. We decided not to do that." The Dark Claw worked more or less how its name indicated. Doom's artists painted a demonic hand that could be severed from monsters and wielded by players. That component is alive and well in "Sergeant Mark IV's" Brutal Doom mod, which lets players employ the Revenant's homing missiles and the Mancubus brute's flamethrowers among other otherworldly armaments. For organizational reasons, id left the Dark Claw on Doom's bloody cutting-room floor. For us, it was about: do you remember what you thought about when you were looking at the back of the box? Make sure that you make that. Fulfill that dream. "We decided to keep it to seven keys," Romero explained. "The BFG is the really cool, ultimate weapon, and that was enough for us." Confining Doom's weapons to the first seven numerical keys on the player's keyboard was crucial to balancing the game. Players should never have to strain to reach a key, or look down at their desk in the middle of a firefight. In the same vein, id's team endeavored to arrange weapons by purpose rather than in a hierarchy. "With Doom 1, the weapon design was really important," Romero explained. "It was important that new weapons never nullify previous weapons in any way. There should be no reason why you wouldn't want to use a previous weapon." Consider the pistol and the chaingun. Both consume the same bullets, squeezing either trigger prompts the game's code to play the same sound effect, DSPISTOL, and both guns inflict between five and 15 damage. The only difference is in how they dish out pain. Fire once, and the pistol expends a single shot. The same action looses two bullets from the chaingun. Hold down the fire button and the chaingun shreds even the toughest demon until players let off the trigger. Why, then, should players ever bother pressing the 2 key to draw their pistol if they have a chaingun at their disposal? "Even the chaingun, which uses pistol shots, doesn't nullify the pistol because it shoots fast, and you might be down to your last shots and you need to shoot just a couple of times. That keeps the pistol useful," Romero said. In Doom, even the weakest weapons serve a purpose. Some write off the fist as a last resort. Pick up a Berserk Pack, however, and the fist packs a literal punch of between 20 and 200 damage—10 times its normal value. Up close, the gnashing teeth of the Pinky prove ineffective against the chainsaw's steel links. It's less practical against most other demons, especially those with ranged attacks such as the Imp, who has ample opportunity to throw fireballs as players rush up to them, or the Baron of Hell, who slashes at players while the chainsaw chews away. Doomguy's life bar was built to outlast Imps, but a race between their chainsaw and the Baron's claws rarely ends in the player's favor. The chainsaw may seem like a one-trick pony, but one of the game's toughest monsters falls prey to its close-range capabilities. Cacodemons face players at all times once engaged—except when players bury a chainsaw in their scaly flesh, causing them to expose their backs as if attempting to fly away. Romero confirmed that the behavior is emergent, the result of a glitch as opposed to purposeful design. All players have to do in response is to keep walking forward with their finger clamped down on the attack button, making that "1" key useful all through Doom and Doom 2. Getting up close and personal with a Cacodemon is a risky endeavor that should only be attempted when no other monsters are around to harass players. Still, it's a risk worth taking. Carving up a Cacodemon conserves rockets and energy cells, which are in shorter supply than bullets and shotgun shells. "Both the chainsaw and the shotgun were added at the same time because of Evil Dead," Romero said. "We loved the movies. Evil Dead 2 is a remake of Evil Dead, basically, and those were awesome weapons. The thing about Evil Dead that really matched out game was that our game was really dark humor. That movie is all dark humor and horror, and we felt like our game was a little like Evil Dead, so those weapons made perfect sense." If any weapon could be said to define the original Doom, it would be the shotgun. Every Doom player's most trusted sidearm, the shotgun is flexible enough to be effective in most scenarios. Powerful enough to take down an Imp in one shot at close range and a Pinky in three, accurate enough to snipe monsters and explosive barrels from afar, and while its rate of fire is on the slow side, it's not so slow that brandishing it against a dozen enemies is a death sentence. Fans have extolled the shotgun's versatility for decades, but they would be remiss if they neglected to admit how it appeals on a purely aesthetic level. The echoing boom of its report, the bloom of fire as pellets explode outward, and sheen of polished steel and wood as the shell ejects, the player's gloved hands cock the hammer, and a new shell slides into place. Doom's shotgun is more than a weapon. It's an institution, the template from which virtually every other FPS shotgun is derived. Romero confirmed that id's developers knew as much long before consumers adopted it. "It was just the right balance between something like a rocket launcher, which is too much, and a pistol, which is not enough," he said. "In doing a sequel, the idea for Doom 2 was, what's the best part of that first game? When you make a sequel, make those first parts better." With Doom 2, id Software revamped the original game's level design and added nearly a dozen monsters to its bestiary. The team approached weapons more conservatively, adding a single new weapon: the combat shotgun, known affectionately as the super shotgun. We'd already double-used the 1 key for the chainsaw and fist, so we decided to double-use the 3 key for the shotgun and super shotgun. We're keeping it simple: we're not doing a whole bunch of new weapons, just doing the one we think everybody will love. Nearly three times more powerful than its single-barreled brother, the super shotgun fires twin barrels for between 100 and 300 damage depending on proximity. Yet it complements rather than supplements the shotgun. Firing twin barrels means twice as much ammo expended per shot and an even wider spread of pellets, rendering the regular shotgun more efficient for sniping. "We felt the shotgun was the best weapon in the game," Romero explained. "We have these seven keyboard keys we don't want to mess with. Seven is a good number; it's like a phone number. We'd already double-used the 1 key for the chainsaw and fist, so we decided to double-use the 3 key for the shotgun and super shotgun. We're keeping it simple: we're not doing a whole bunch of new weapons, just doing the one we think everybody will love." Supernatural weapons fell by the wayside in favor of the development team's desire to invent the ultimate weapon. The BFG 9000 reigns supreme in terms of raw firepower, but id didn't want players to jump right from real-world fare like shotguns and chainguns straight to the pinnacle of futuristic tech. "The thing about Doom was that we were going to mix some weapons we had already, with near-future-type weapons," said Romero. "So the player is shooting something they understand, and then they can look forward to some even cooler stuff. " The rocket launcher accounts for one leg of that bridge. It's based on bazookas used during World War II, and that alone makes firing it a thrill. To most players who experienced Doom for the first time in 1993, shooting missiles was something they read about in a textbook. A computer game sold on floppy disks made it possible. The plasma rifle is the next and final step in the progression toward id's big freaking gun. It operates similarly to a chaingun, spraying a stream of laser energy that puts players on even footing with heavyweights like Barons of Hell, and the Cyberdemon and Spider Mastermind bosses. Hefting the BFG 9000 for the first time, most players can't help gawking in wonder. It is, indeed, like a chunk of metal ripped from the hull of a spaceship. The weapon's maiden implementation, a spread of green-and-red energy balls, ended up a tad too futuristic. "We thought it looked like Christmas when it came out, and it also slowed the game way down because we're talking about hundreds of these sprites that would fly out. That would hurt the frame rate," explained Romero. As a workaround, id rolled the Christmas ornament-like orbs into a huge green orb that obliterates all but the toughest enemies in a single blast. Enemies outside the player's direct line of fire do not escape unscathed. Upon making contact with a monster or any surface, the giant orb generates lots of smaller orbs that automatically appear and inflict massive damage on using a technique known as ray tracing. Ray tracing traces light's path in a virtual space and simulates its collision with objects. Instead of manifesting all the individual energy blasts, firing the BFG causes 40 invisible projectiles to fly out in a cone-shaped area in front of the player and connect with monsters. As soon as the single, visible blast makes contact with any object, the 40 projectiles strike their targets. "The second version of it is the one that you see, and it's doing what the original would have done if those little balls had hit everything: basically we just throw out a bunch of tracers in the room and do massive damage to everything," Romero said. In writing Doom, id Software had one goal: to make the best game in the world. That ambition guided them during every step of the development process, right down to their determination to craft a panoply of weapons that served players well from the first second of Doom through the last. Romero believes that id achieved its goal. He gleaned pride and satisfaction when the shareware version of the best game in the world graced the covers of magazines and the demo disks packaged in their plastic wrapping. He still views it as the best game ever, but not just because of its weapons, or its levels, or any one thing. "You go to the store, you see a box, you read the back, and you're like, 'Oh my god, this looks so great,'" said Romero. "Then a lot of times you install it, play it, and you feel let down, and they marketed it so well on the back of the box. For us, it was about: do you remember what you thought about when you were looking at the back of the box? Make sure that you make that. Fulfill that dream. Our box wasn't as cool of a marketing box as EA's or LucasArts' boxes, but we let the game speak for itself." You'd be forgiven for playing Brutal Doom for the first time and coming away with the impression that you just played the most gratuitous, over-the-top violent video game ever made. Trailers announcing new versions of the mod, first published in 2010, drive this impression home. Firing a BFG blast into a horde of Imps triggers an explosion of blood that makes Johnny Depp's death scene in A Nightmare on Elm Street look tame. Wipe away all the mutilated limbs and buckets of blood, and Brutal Doom has a lot more to offer. Its feature set is so thorough, its changes so sweeping and evolutionary, that John Romero said back in 2013 that id "would've destroyed the game industry" had id Software released it instead of the original Doom back in the early 1990s. As a Brutal Doom buff, I was excited to catch up with the mod's creator, Marcos "Sergeant Mark IV" Abenante. The Sarge was kind enough to dissect some of the game's changes both huge and nuanced, explain how Brutal Doom caters to equally players who prefer a moodier, slower pace, as well as those who revel in sending demons back to hell in doggy bags, and share his thoughts on his mod's excessive violence stealing the spotlight from its more impressive features. What led to your interest in designing Doom mods? Making mods for Doom was a childhood dream. I wanted to make "my own Doom" since I played it the first time on my Sega Saturn back in the late '90s. Around 2009 when I played Doom mods for the first time I got instantly hooked by the great customization capabilities of the engine and how easy was to mod it. Brutal Doom is one of the most expansive mods ever created. Among other features, you overhauled the game's arsenal, gave enemies new attacks, changed or replaced power-ups, and painted levels in blood. How did the mod start? Did you think of one feature that snowballed, or did you have an all-or-nothing mindset from the beginning? A year before, I made a mod called ArmageDoom (yeah, silly name) which contained new maps, monsters, a new plot, and a lot of stuff, but it proved to be way too ambitious for a first time mod. It was a mess of unfinished features. There were others gameplay mods at that time that tried to overhaul Doom such as Beautiful Doom and Polished Skull, but none of them satisfied me, so I decided to make a new simpler and smaller mod to improve my intimacy with the engine. I wanted to make a mod that would make the regular game look, sound, and play the way [that left me] completely satisfied, then transfer these systems to a bigger mod. The initial concept of Brutal Doom was just a mod to test a headshot system, and a unified blood and gibs system with some basic physics. People loved it right when the first version came out, there were several people hosting servers on day one. So I kept adding more and more stuff. Turns out that the visual effects of Brutal Doom are way too detailed to fit my initial vision of ArmageDoom. I didn't design Brutal Doom expecting people to use it on maps that puts more than 30 or 40 enemies on the screen at the same time, so I could go overboard with the gibs and particles. On ArmageDoom you would often fight 200 or 300 enemies, with like 30 friendly marines at your back in battles that would look like something out of Starship Troopers or Warhammer 40k. So if I had to restart working on that mod, I would need to go back and start a whole new gore system from scratch. There was a limitation in the original game's engine that made all guns have the same spread pattern—5.6 degrees to the sides, no vertical spread—so id Software accidentally made one of the most realistic shotguns in history of videogames. Was there a particular reason you targeted the classic Doom games as opposed to 2004's Doom 3? I got a bit disappointed with Doom 3. It was a cool game, but definitely not a cool Doom game. So I started to add to Classic Doom all the stuff I wanted to see in Doom 3. Classic Doom provides arguably the most well-rounded arsenal in FPS games. How did you approach tweaking weapons that had been balanced for over two decades? The original game had a progressive weapon policy. You get the chaingun, which is basically a pistol that fires faster and can snipe things with two shots at once. You get the super shotgun, which fires more pellets per shell than the regular shotty, and makes the regular shotty only useful if you are out of chaingun ammo. For BD, I have a policy that no guns should be deemed deprecated when you get a bigger gun. Every gun has an unique characteristic with its advantages and disadvantages. The assault rifle, which replaces the pistol, exemplifies that point. John Romero explained how, speaking to your example, the pistol is still useful after you get the chaingun because it's good for chipping away at monsters. Drawing from my own experience, though, I rarely used weapons below the shotgun. That wasn't the case with the assault rifle; I use it frequently, even on later levels. Yes, the rifle still remains the most useful weapon for dealing with zombies even after you find the rest of the arsenal. Some custom maps pits you against strong opponents with just your starting loadout and a shotgun, so the rifle is designed in a way that a competent player can use it to quickly kill a Mancubus or even a Baron of Hell. The weapon is balanced with its need to reload and reduced accuracy when firing on full-auto. Doom's pistol and chaingun did the same amount of damage. The only difference was their rates of fire. How did you want to differentiate the AR and chaingun? On BD. each bullet fired from the rifle deals 20 percent more damage than the bullets fired by the chaingun. The rifle has a longer barrel, and a gun with a longer barrel makes the projectile spin faster before coming out, reaching a higher muzzle velocity even if it's firing the same type of ammunition. This added to a great accuracy: two degrees spread when firing from the hip, one degree when firing while aiming down the sights, no spread when firing on semi-auto in both ways, against 4 degrees of spread on the chaingun. And it makes it extremely effective against zombies on close quarters, and imps and lost souls on long distances. A rifle becomes pretty useless against a group of Pinky demons because it lacks the fire rate to slow them down; they will easily corner you with their speed boost and bite you while you are reloading. The chaingun lost its sniping capabilities of the original game—but still fires more accurately when on full auto—and performs better against large groups of enemies due its higher fire rate and its lack of need to reload, and is the only weapon that can stunlock flying enemies. This is important in BD, as flying enemies have the ability to quickly circle-strafe the player when they get out of their pain states.  Due its wind-up time, the chaingun becomes a bad weapon of choice for clearing out corridors with confrontations far from each other. A zombie will mostly fire at you, or an imp will leap at you before your gun even starts firing and walking around with the barrels rotating will make noise and ruin any potential ambush chances you could get. Doom's shotgun is almost perfect. It strikes a comfortable ratio of power to speed, and is useful at short, medium, and long ranges. Given all that, did you see any room for refinement, or perhaps modernization? Doom 2 introduced the super shotgun, which made the original shotgun completely obsolete. The original shotgun fires seven pellets while the super shotgun fires 20 pellets—it magically fires three more pellets per shell—with the double horizontal spread, and an added 7.1 degrees vertical spread while the original shotgun has zero vertical spread. The Super Shotgun not only deals more damage per shell, but also fires them faster. The original shotgun fire has a 37-frame cooldown before each shot—the game logic runs at 35 fps, so it's roughly one second—while the Super Shotgun's fire animation takes 57 frames. That makes 28.5 frames for each shell. So the super shotgun doesn't just fire three pellets more per shell, but also fires them faster, and the double spread is not enough to compensate that. My solution to rebalance them was to enforce the shotgun's original purpose over the addition of the super shotgun. It's a common mistake in video games to make shotguns inaccurate over long distances, when in real life, a buckshot can effectively put down a deer 50 meters away, and probably take down a human at much longer distances. There was a limitation in the original game's engine that made all guns have the same spread pattern—5.6 degrees to the sides, no vertical spread—so id Software accidentally made one of the most realistic shotguns in history of videogames. Some mods attempt to balance the shotguns by nerfing the super shotgun and making it fire 14 pellets. Instead, I buffed the shotgun to fire 10 pellets. The shotgun is made even more accurate by reducing its spread pattern from 5.2 degrees to 2.7 degrees. now both horizontally and vertically. Now the shotgun is powerful enough to kill lost souls with a single shot, which is very satisfying, and most of times kill Pinky demons with two shots; it takes 3 shots on the original game. Out of all the bullet-based weapons, it can deliver the highest amount of stopping power at the longest range possible, and it can take down a room full of imps much safer than with a super shotgun: It is guaranteed to kill them with one shot before they can leap at you and you don't have to deal with the inconvenience of having to reload after each shot, leaving you vulnerable to the other enemies in the room. What weapon was the most difficult to modify? The BFG-9000. The part of the code that fires its tracers is hardcoded into the engine. The tracers recognize anything that can be shot as valid targets, so shoot-able gibs on the floor acts like a shield that protects enemies from the tracers, which are the weapon's signature mechanic. Current versions of GZDoom allow you to have more control over these tracers and what they can target, but Zandronum 2.1—which is built on GZDoom's code from literally five years ago—doesn't, and I refuse to abandon the Zandronum engine due its superior multiplayer. Currently the BFG basically acts like a huge rocket launcher with a large splash damage that only hits enemies. The tracers still work, but they will just hit the gibs on the floor most of the time. Hopefully when things switch to Zandronum 3.0, I will be able to fix this. The initial concept of Brutal Doom was just a mod to test a headshot system, and a unified blood and gibs system with some basic physics. I didn't realize all of the under-the-hood changes you made to weapons such as the shotgun. I only paid attention to surface details like alternate modes of fire like the chaingun's windup and the plasma rifle's charged shot. Did adding alternative modes of fire constitute creating new weapons as far as game balanced was concerned? All alternate fires in Brutal Doom works like a commercial transaction: You have to give up something to get something else. The rifle for example, is already is the most accurate weapon of the game even when firing from the hip, but when you aim down the sights you trade two-thirds of your field of view. That makes it easier for flanking enemies to attack you without you noticing, but you practically get a full auto sniper rifle. The plasma gun's "plasma shotgun" mode deals the same amount of damage as it would if you were to fire all these plasma balls with the regular automatic fire, but instead of firing them constantly, you can get into cover and wait for the volley to charge up, pop up and fire, then get back to safety to charge another volley without exposing yourself, and your payment for that is that these plasma balls are not as accurate in the regular mode. The alt fires are basically made to make the weapons become more versatile and adapt to the player's playing style. Doom has bounced between action and horror since the original game in 1993. It's an action series where some iterations lean more heavily into horror than others. I always thought Doom 2 fell on the side of pure action, and Brutal Doom felt like an extension of that, at least to me. Did you see your mod as more of an extension of one classic Doom than another? I think it's quite the opposite. The original Doom is much more action-packed than Doom 2: levels are smaller, songs have a faster tempo, you feel like a mad marine fighting for survival in a base infested by demons until you get sucked into hell and you mess things so bad that hell gets fed up with you, opens a portal back to Earth and wants you to get the fuck out. You know, this is actually the [sequel's] canon plot. Doom 2 feels more like you are exploring the ruins of Earth. Many levels such as Downtown, Suburbs, and Industrial Zone are very wide, desolate, and non-linear, with more moody songs with a slower tempo. I had very different experiences with the classic Doom games growing up. My childhood memories of playing it on the Saturn, with PSX Doom's music and slow framerate, Doom was completely a horror game, then I rediscovered it on 2009 on the PC as an action game. I know that Doom exists in two completely different forms, but my priority with Brutal Doom is to allow players to choose the way they want to play the game. You can play it fast on a skill such as Ultra-Violence, or one of the mod's custom skills such as Black Metal: You move faster, deal 50 percent more damage, and take double damage from enemy attacks. You can play as the Purist class to disable reloading, and load the "Doom Metal" collection which turns all midi songs into metal covers with actual instruments and adds into the action. Or you can play things slower, try the Realism mode which allows you to be instantly killed by two or three shots from a zombie's rifle or a single imp's fireball if you are without armor, requiring you to play extremely cautiously, and even load PSX Doom's soundtrack into it to make things more tense. It's up to you to choose the best experience that fits your taste. Gore is usually the first thing players notice about Brutal Doom. Do you feel the gore gets undue attention at the expense of other features like the overhauled arsenal? Yes. I see a lot of people refusing to play Brutal Doom because they think the added gore is too over the top and juvenile—and yet they refuse to acknowledge how absurdly over the top was the original game's gore, even for today's standards. Brutal Doom has a lot of features that makes gameplay generally speaking smoother and faster, especially in co-op. For example, in Brutal Doom the players can't telefrag each other when walking over teleports at the same time, and plasma balls and rockets will fly through each other; firing a rocket and getting killed by it because your teammate runs in front of you at the exact time it fired is #1 cause of death on crowded co-op servers. There is a feature that allows you to take a wounded zombie or imp and temporally use it as a shield so you can become a safe spot for your teammates to advance through a zone with lots of chaingunners. Version 21 will also add the ability to drop packs of ammo and a class that can carry medikits as inventory items and drop them for other players and act like some kind of medic. Brutal Doom lets players dismember enemies, such as shooting off limbs and performing headshots. That wasn't possible in the original game. How does dismemberment work? Is it as simple as some modern feature, or more than one, in a source port? The ZDoom engine and its forks are capable of spawning objects as "projectiles" at any time, by any other object. It can also have properties that allows them to bounce on walls and floors before landing. Basically the gibs in Brutal Doom—and pretty much any other Doom mod—are actually projectiles; they are not much different from a rocket or an imp's fireball, they have their "spawn" state—when it's flying in the air—and their "death" state, when it hits something. When a flying gib "dies"—hits the floor, stops bouncing—it spawns another gib that can be interacted with: shot into smaller meat chunks, kicked around, be tossed around by explosions. But even with all the improvements of the ZDoom engine, the monsters can only have one rectangular hitbox. The solution for making localized damage was to spawn several actors with their own hitboxes around the monster on every frame they move. Think of these hitboxes as meta-monsters: They have all the shoot-able properties of a Doom monster, but they are invisible, and are programmed to disappear a fraction of second after being spawned, so it can be replaced by a new hitbox at a new position as the monster moves around. When you shoot one of these hitboxes, they calculate the damage you caused to them, and transfer that damage to the monster who they belong with a multiplier. Hitting the head hitboxes transfers double damage, hitting the legs transfers half damage.  If the monster is killed by this damage transferred by the fake hitbox, it plays a different death state depending of the amount damage transferred. You can notice that firing at a zombie's head with a shotgun makes a much bigger mess than firing at it with a rifle. The damage is transferred by the same system used by explosive barrels to damage things near it: the hitbox actually "explodes" when you shoot it. There are other less complex ways of doing this such as checking the height that a blood puff was spawned relative to the floor, but these methods makes an exact transference of damage amounts difficulty, especially with shotguns. Weapons with area damage such as the rocket launcher ignores this system and plays random death animations instead. The small enemies have around three or four animations of them being tossed into the air and having their limbs ripped off by the explosion. Every death animation in a Doom mod needs to be drawn separately and coded into the game accordingly to the events that would cause such death animation to be triggered. One of my favorite changes was replacing the blur artifact with a marine ally. What prompted you to swap out an artifact, rather than add another? Did you just consider blur to be less useful than other powerups? I needed a way to include captured marines in the game. Brutal Doom is a mod that doesn't have a dedicated campaign, and is designed to run on the original levels and almost every user-made level, so I couldn't include them manually into the levels. Blur is often considered the most useless powerup in the game; it doesn't make you invisible to the monsters and instead, makes them shoot in random zig-zag patterns, which actually makes their projectiles harder to dodge. It was a rare powerup that you could be assured was found on most maps at least once, and it was a powerup that nobody would miss, so it was the best choice to make these captured marines spawn. Recently on v20 the improved enemy AI is able to lose track of the player when going a long time without being able to see it, and wander around the map looking for the player. This script allows the enemies to actually become unable to see the player when cloaked. If the player makes noise or walks too close to the monsters they will be alerted for a moment, try to fire one or two times in the zig-zag pattern, then lose track of it and start wandering around again. So the blur sphere is actually more useful now and I am thinking of ways to re-introduce it. Recently I added them as a rare powerup that can be randomly dropped by Spectres. Brutal Doom is going strong, and so is the modding community for Doom and Doom 2. What do you think accounts for such longevity? First, the game itself. Even with its sharp edges here and there, unmodded Doom still is an unique game with unmatched combat dynamics and level design. My first Doom experience was on fifth-gen consoles and I didn't experience the true fast gameplay of it properly until 2009, way after I had had enough of Call of Duty, so the "you are looking at it through nostalgia glasses" argument is not valid here. Not even other classic first person shooters of the 90s that came after it (Blood, Quake, Duke Nukem 3D) could reach the same level of perfection. Second, the modding capacities of it. The source ports are really well made; you can learn how to make a weapons mod for GZDoom or Zandronum in a few weeks, learn how to make a map in just a few days, and there are very well organized documentation of the engines at the ZDoom wiki and it's really easy to get into it.  When you get a game with unique mechanics that nobody ever succeeded at copying, a simple yet rich backstory full of spin-off possibilities, and the easiest to mod ever engine ever made, you get yourself a game that people will play for decades. During the latest nights and longest weekends of 1993, id Software's developers shrugged off fatigue. Junk food energized the id team's bodies, but their shared passion for how Doom was shaping up invigorated their minds and spirits. John Romero was especially excited. Doom would be the greatest game ever, and the 27 levels he and the team would be storing on floppy disks and sealing inside the game's lurid-red box were just the beginning. "What we did was, probably two weeks after the game, we released the level specs—sector def and line def information—so people knew what it meant and how the map files were created," Romero said. The only thing Romero loved more than playing Doom was playing levels someone else on the team had made. Thanks to id's foresight, he would soon be swimming in an endless supply of space stations, spawning vats, and hellholes. There was just one thing missing: a level editor. Romero had co-authored DoomEd for id's level designers, but the program conformed to routines and processes specific to NeXTSTEP computers. Doom was easy to have fun with it in whichever way you have fun: it's easy to make levels, it's easy to deathmatch, it's easy just to pick up and play it, it's been supported for years. Releasing the source code was the best thing we ever did. Along with level specs, id released a free node builder that players could use to design modifications, or mods. Doom's engine organizes levels in a tree made up of nodes and sub nodes, and every node corresponds to data for individual areas in a level. All summed up, nodes define a level's structure; the node builder would be able to render the nodes  in a specific order to turn out a playable map, like a game of connect-the-dots that only turns out correctly if all the dots are in the right places and filled out in sequence. "I knew that people would be wanting to make levels, which is why we put all that info out there. I knew they would have to write their own [editor]," Romero continued. Id Software's gift of free data, tools, and source code comprises the gift that keeps on giving to the Doom community. Innumerable level designers have harnessed that information to make Romero's dream of dreams come true: Twenty-three years and counting since Doom's release in December 1993, new maps sprout up daily. Some creators bend or even break id's rules to create something wholly original and far outside what the developers ever expected to see from their tech. Some color inside the lines—to be creative, to flex their level-making muscles, or to show that there's still plenty of gas left in Doom's tank. Still other designers earned money and launched careers thanks to id's forward-thinking generosity. While browsing newsgroups late one night, Romero learned that a team of modders had been collaborating on a 32-level campaign for Doom 2—known as a total conversion, or TC—called TNT Evilution. The news post he had found was an announcement: Team TNT, as they were known, would publish their TC the very next day as a free download. "One thing I thought should be happening was people making money from the amount of work they had put into making mods and levels and stuff," Romero said. "When everyone's putting free levels out there on the 'net, no one's going to pay for [content] from some unknown team. Who knows if [publishers] would want to publish that stuff. We found out later that people would do that, but at the time I just saw it and was like, 'These guys need to make some money from this.'" Romero emailed Ty Halderman, Team TNT's lead designer, and asked if there was any way he could put the brakes on the TC's release. In exchange, Romero gave his word that he could help Halderman and his team see their work on store shelves. "He was like, oh my god! He contacted everybody; it was around 30 level designers. There were all sorts of political things going on because they'd wanted to release it for free, but [the creators] were like, 'But id would publish it. We'd get our name on an id title.' They all decided that, yes, they do want to see their game in stores and be part of the id series of released titles. They did stop the release of it, and we got everybody else signed up." Around the same time, Romero discovered another team of modders, Dario and Milo Casali. The brothers were working on a TC called The Plutonia Experiment, another 32-level campaign. Romero saw an even bigger opportunity. He packaged TNT Evilution and Plutonia together, and id's publisher at the time branded the total package Final Doom and sold it as a standalone game. "I thought that there were a lot of new ideas that we never would have made on our own," Romero explained. "It was ideas that people were doing out in the level-design scene anyway, and some new stuff. These people had released other mods out there before. There was a lot of stuff out there, and these guys paid attention to it and were very good. Team TNT and the Casali brothers achieved fame throughout the Doom community, but they are only some out of a worldwide community of Doom modders whose work has been venerated by peers. Viggles, Scwiba, and Skillsaw—who preferred to be called by their online handles—are three of those who, like Romero, Halderman, and countless others who take pleasure in bringing their wildest ideas to life in the form of nodes, sectors, and line definitions. When Viggles was 13 years old, a friend from school got hold of an alpha version of Doom and invited him over to play. The feeling he experienced was new to him within the context of video games. His hobby had made him excited, jubilant, curious. Doom was different. Doom terrified him. "I was a huge Wolfenstein 3D fan, but that alpha scared the shit out of me," he said. "It was dark and suffocating and the physical rules of the world felt so different compared to the comforting Nazified grid of Wolf3D. I found it deeply unnerving, even though—or perhaps because—none of the levels were finished and the monsters didn't even move; some piece of that disquiet lodged in my young skull and never left." Viggles embraced his fear when id Software released Doom in 1993. For three solid years, it was all he played. His Doomguy marine did not venture forth into hell alone. "My dad strung a null modem cable from one bedroom to another for two-player deathmatches, which made me briefly the most popular guy in school." Deathmatch was fun, but Viggles favored the game's three single-player campaigns. There was something unsettling—first deeply, then pleasantly—about moving through futuristic moon bases and demon-filled lairs. The abstraction with which id's designers had constructed the game's maps cast its charm over his mind like a web. "Nothing in Doom is quite recognizable as a functional place," Viggles explained, "and that's vital to its aesthetic in some way. Attempting to make Doom look like real places collapses some tension in it and makes those environments much less interesting. As an adult I can perceive the practical gameplay considerations and the sometimes slapdash aesthetic impulses that went into Doom's level design; but when I was a kid it felt like those spaces had designed themselves, and that reading of the game I find unsettling as hell." I just don't care to carefully watch my sightlines, or to sacrifice cool architecture on the altar of not crashing a DOS executable that nobody ever plays Doom in anymore. By the time he was 14, Viggles had tinkered with early editors like DEU (Doom Editing Utility). At that stage he had no ambition toward architecting master classes in level design. He was just inquisitive, driven to understand the black magic that so deftly delighted and unnerved him. "The very first thing I made was a beach, with terraced layers of pebbles and sand leading down to water, and I was dismayed by how crappy it looked compared to the vision I had seen in my head." As his aptitude grew, he plumbed deeper, experimenting with volume and perspective, lighting, and positive and negative space. No longer content to merely dabble, he became the archetypal sorcerer's apprentice. "The act of bringing my own spaces into being was almost intoxicating. When I was 16, I released a set of deathmatch levels themed around classical Greek architecture. They were dreadful to play because they weren't about gameplay at all; they were about me figuring out how to express ideas spatially." Viggles set Doom editors aside as new games arrived. He moved on to Thief: The Dark Project, and Quake, id's spiritual follow-up to Doom that sported real-time 3D graphics at blistering speeds. As games grew more sophisticated, his interest waned. More advanced games demanded that he learn more complicated tools. Designing levels was a hobby, a creative outlet that let him execute on a space he'd conjured in his head. Complex tools turned his hobby into a time sink, and he walked away. Years later, Viggles found himself presented with an opportunity to rekindle his first passion. "In 2014 a friend of mine started making a Doom level on a lark, and I realized that I had been thinking about the Doom engine all that time: thinking about the ways it could be pushed, what it was possible to express in it, what kinds of (mis)treatment the textures lent themselves to. I still had visual ideas that had been sitting in me for 20 years waiting to come out, so I picked it back up again." Returning to level design prompted Viggles to compare and contrast his styles from then and now. "Nowadays my design style is probably a response to contemporary games and how they feel," he said. "I guess I'm trying to make something that's unmistakably modern, yet that captures what I loved about how Doom looked and felt as a kid, which is why I restrict myself to the original textures and scripting features. Then as now, I find I'm still preoccupied with how a space feels, rather than how a space plays. I'm not very good at designing with gameplay in mind." His first mod in years was Breach, a rambling tech base-style map. Once it was finished, Viggles conceived of Brigandine, his most recent map as of this writing, as a palette cleanser. He'd had his fill of space stations and wanted to build an environment that channeled the spirit of Doom 2's cityscapes—particularly that found in Map 14: Inmost Dens, built by former id designer American McGee. "To get even more specific," he explained, "I wanted to give my due to a window texture that had a special place in my heart: BRWINDOW, which had been the only texture asset in Doom 2 to suggest to the teenage me that a Doom level could actually be a real place on Earth. It was also a way to explore some spatial ideas that Skyrim had planted in me; the starting chamber of Brigandine was originally a sketch of the temple of Kynareth in Whiterun." Labyrinthine and daunting at first glance, Brigandine is tightly made—a compact space that loops in on itself multiple times, forcing players to pay attention to lest they become turned around. "I'd originally meant it to work as both a single-player map and a deathmatch level," said Viggles, "so I studied a bunch of deathmatch maps to figure out their design principles. I made areas feed back into each other, so that players would come to new vantage points on places they'd been through before. The player ends up fighting several distinct battles in each area of the map as they come back upon those areas again." Once he had Brigandine's deathmatch flow nailed down, Viggles sketched out a route for solo players. Like breadcrumbs, players would encounter enemies, key cards, ambushes, and items in a progression that took advantage of the map's interconnectedness. Ultimately, he said, the level flowed better as a single-player venture. "In the end the level grew too large to be suitable as a deathmatch map, but I think you can still see traces of it in the final layout." Orchestrating Brigandine's progression induced its fair share of headaches, most of which stemmed from plotting out skirmishes. "Despite planning the flow of the level early on, and designing a bunch of the encounters in my head, I had sunk my teeth into the architecture way too early and fully detailed the areas before I properly playtested them with monsters," he explained. "This made for a painful process of figuring out what kinds of encounters each area could still accommodate." Early in its construction, Brigandine's tight proves both a blessing and a curse. On the one hand, its flow stands as one of the level's most intricate and compelling features. On the other, Viggles had little wiggle room to make even the smallest adjustments. Moving one piece would disrupt another, causing a domino-like effect. "However, I had made those same mistakes already in Breach and learned some hard lessons from them. By Brigandine I had learned to leave enough room for my bad habits. As a result, most of the encounters I'd originally had in mind still made it into the level." Viggles takes it as a point of pride that Brigandine conforms to Doom 2's original level specs... sort of. The game, known by the community as "vanilla Doom 2," sets hard limits that prevent players from flooding a map with more details than a level editor can handle. For instance, Doom 2 dictates that players can see a maximum of 256 wall segments. Though they might not be able to make them out, editing tools are aware of them, and planting even one more would cause glitches in the vanilla game. "When id open-sourced the Doom engine," Viggles said, "the first thing that modders did was lift those limits into the stratosphere. Designers were still bound by the hard constraints of the original engine—walls can't move, floors and ceilings are flat, rooms over other rooms aren't possible—so it's still a challenge to fit your spatial ideas into, but you no longer have to limit the amount of detail you can have in view, which is very liberating." Engines like Eternity and ZDoom are known as source ports, engines that embellish the capabilities of vanilla Doom and Doom 2. Contemporary engines allow for contemporary features such as sloped ceilings and floors, rotating walls, and platforms stacked directly overtop one another. Viggles built Brigandine as limit-removing map—a modern level derived from vanilla features, but chockfull of significantly more of them. In other words, though Brigandine looks as though it could run in the original engine, players will still need a source port to play it. "I like the challenge of working within the feature set—and texture palette—of the original game," he explained. "I just don't care to carefully watch my sightlines, or to sacrifice cool architecture on the altar of not crashing a DOS executable that nobody ever plays Doom in anymore." As an example, Brigandine's staggering amount of detail and sightlines—line of sight for monsters—poke holes in Doom 2's parameters. "There are more lines in Brigandine than there were in the entirety of the original Doom 2, and any view from practically any spot in the map would crash the original game," he said. "That's not a laudable accomplishment though; most limit-removing maps could claim the same. Breaking the original game wasn't something I aimed for, it was just a consequence of the spatial ideas I wanted to express." For Viggles, part of expressing Brigandine's space to its fullest involved performing tricks that exploit the original engine, such as a walkway that players can walk over and under. Viggles pulled that off by creating an invisible platform near the walkway that moves up or down depending on the entrance players come in from. "Designers were using those same exploits 27 years ago, and though modern ports like ZDoom will let you do level-over-level stuff for real, I like sticking with the original tricks," he said. Staying the course gave rise to a map Viggles is proud of. He's particularly taken with certain parts of Brigandine where players can look out and see more of the city in the distance—a level-design strategy employed in modern games that lean into interconnected design, such as FromSoftware's Dark Souls, as well as classic games, namely Doom and Doom 2. "I love the visual suggestion that the player is in a much larger space that's just as detailed but that they can't quite get to," Viggles said of Brigandine. "This is one of the strengths of modern environmental design: older games simply couldn't afford to have it. These vistas took by far the longest to complete. I was still tinkering with them for several months after the playable space of the level was done." Were they to meet and swap stories of their Doom fandom, Scwiba could probably relate to Viggles' initial fright. He was only six when his older brothers installed Doom's shareware episode and proceeded to thrust him into a world of zombies and Imps and altars holding skulls and beating hearts. Scwiba never forgot that fear. He hopes he never will. "I was too terrified to get past the first demons in the third map. I kind of feel like that deep-rooted childhood fear is part of the reason the game never completely left my consciousness. I came back in 2002 to conquer that fear, and never left. Why would you, when content for the game is endless?" Scwiba has been looking for ways to tell stories all his life. He colored pictures as a tyke, wrote a small book in first grade, and, as he grew older, migrated to level creation. "I'm a storyteller and worldbuilder by nature," he said. "Modding and game development have always just seemed like another avenue for telling stories and building worlds. If a picture tells a thousand words, a video game level tells a million." Growing up, only games that included level editors slaked Scwiba's thirst for telling stories. He played as many as he could get his hands on, from WarCraft II and Age of Empires to The Incredible Machine and, his greatest pre-Doom obsession, Lode Runner: The Legend Returns. "I designed a whole lengthy campaign complete with a backstory and even a point where your buddy the blue runner heroically sacrifices himself and you have to go on to the final battle alone." Scwiba dabbled in games on any platform, even putting out a ROM hack for a Final Fantasy game in 2000. He fashioned levels mostly for his own enjoyment until, in 2004, he cobbled together a Doom map called The Baron's Citadel. Writing off the effort as amateurish but instructive, he threw in with a group working on a map pack titled 1Monster in 2007. "It was a community project where each map could only use one type of monster," recalled Scwiba, "so I suppose I was drawn to gimmicks and concept maps from the beginning. The biggest change in my maps over the years has been more confidence, if that makes sense. It doesn't have anything to do with style, but I like to think you can see it in the maps nonetheless." Absolutely Killed was always pretty lighthearted and tongue-in-cheek—the name itself came from a line in a really nasty review of [my previous mod]—so my goal was just to dive in and treat the Doom engine like a playground. Building up confidence impressed upon Scwiba the satisfaction he gleaned from extemporaneous design. His notions are like muses: one appears, and he allows it to lead him. Nearing the end of a project, he doubles back and varnishes spotty sections until they shine. As his confidence developed, so did his appetite for pushing the envelope of traditional map design. "That," he admitted, "and just having fun after what was a very draining and not fun development process on my last mod, Tower of Lies. Absolutely Killed was always pretty lighthearted and tongue-in-cheek—the name itself came from a line in a really nasty review of Tower—so my goal was just to dive in and treat the Doom engine like a playground." Each of Ultimate Doom's episodes contain at least one through line. Episode 1: Knee-Deep in the Dead is set on military and industrial facilities on Phobos, and maps reflect that in their architecture. Absolutely Killed is analogous to a necklace of beads, each of a different shape, color, and material. "The unifying element is that they are all different," Scwiba said. "It's like a compilation of levels that would have been relegated to secret map slots in other projects." Despite dissonance in one map's architecture and color palette to those of another, there is rhyme and reason to the order in which players tackle Absolutely Killed's levels. "'Barons of Fun' had to be first in order to ensure the player wouldn't have the weapons or ammo to actually fight the barons," Scwiba explained. "'Boxed In' is second so that it's early enough that getting a plasma gun feels like a big goal; it couldn't have been third because 'Call Apogee' needs to occupy that spot, the map slot with a secret exit." The map order grows looser as players push deeper into the campaign. Scwiba's criteria for organization was to space out maps with similar gimmicks. "Hold the Hots" and "Pain" both incorporate damaging floors, and he didn't want to risk players growing bored or frustrated doing the same thing too often. "Breaking up heavier and lighter concept maps was a happy accident, but something I'll definitely pay more attention to in future projects," he added. Like Viggles, Scwiba endeavored not to twist Doom's rule set, but to see what was possible within it. He took motivation from various official maps. "I suppose my process is to begin with a behavior I know of in the engine and then wonder—often off and on for months—how that could be used in new ways." One type of behavior found in Doom E1M8, the final (non-secret) map of the campaign, caught his eye. Players battle two Barons of Hell, and after killing the last one, the walls of the arena fall away to reveal an outdoor area. Scwiba played with tying environmental changes to the player's actions in UnAligned, the mod he designed after Absolutely Killed. "In the original map, that meant killing them opened the path to the exit," he said. "But could you make it into a bad thing? I know barrels block players from moving over them at any height, so they can be placed lower than the player and act as an invisible barrier. What does that accomplish that a regular wall wouldn't?" Of all the novel concepts he toyed with, Scwiba feels that his design philosophies coalesced best in "Hold the Hots," the campaign's fourth level. "The concept ties into the visuals which tie into the action. There's a ton of Doom's traditional run-and-gun action, but the way it plays out is twisted and shaped by the gimmick of the lethal hellfire, and that gimmick wouldn't work without the distinct look of the red light spilling out into a gloomy dungeon." Scwiba normally avoids slaving over one particular spot on a map, preferring to paint in broader strokes so that every step through a level provides a unique or challenging experience. However, "Hold the Hots" contains a few instances where he broke from his convention and lovingly constructed holes through which red light shines through like rays of sunlight, albeit with a hellish tint. "That effect was much harder to achieve than you might think, so I'm pretty proud of it," he said. "I'm the most proud of making something outside of the community's norms and not stopping to worry about whether anyone would like it. I made Absolutely Killed completely for myself and had a blast doing it; the fact that it made waves at all is just a bonus." Skillsaw's introduction to Doom was far from terrifying. As a matter of fact, it was downright prosaic: He played the shareware, liked it, and bought and played through Doom and Doom 2. More than its frenetic gameplay, the game's community is what's kept him coming back. "There are new releases on a daily basis," he said, "and the quality you can expect from each release seemingly gets higher every year. There's always something new to play and frequently by new faces that bring new ideas and perspectives. Doom manages to stay very fresh for a game that just celebrated its 23rd birthday." Like many kids who grew up during the 1980s and '90s, Skillsaw played games often enough to feel inspired to make his own. Various editors for Doom gave him the chance to try his hand, although he admitted that his first efforts were far from memorable. "They were disorganized, very flat, and full of doors, mazes, and switches with no clearly discernible purpose." One failing stood out more than others. Combat, one of the highlights of Doom, seemed incidental at best. "Which is fine, but nowadays, I like to mix in a lot of orchestrated scenarios in maps, and even include entire maps that are designed around a central planned gimmick that drives the gameplay," he explained. "I focus on flow and keeping the player on the right path, with some support for exploration and optional side areas here and there." As much as he enjoys making levels, Skillsaw only brings an idea to fruition if it brings something unique to the table—a keystone that sets it apart from his past projects. "In Valiant I made heavy use of the gameplay modding features of my target engines to tweak the gameplay to support a projectile-spam style of play that I really enjoy. In Ancient Aliens I used a neon-themed palette and experimented in tongue-in-cheek storytelling. If I worked on a map set and it didn't have some kind of 'hook' like those, I don't think I would be satisfied with it." Ancient Aliens has not just one hook, but several: dust-ups with extraterrestrials, a vibrant color scheme, and a custom soundtrack for starts. As is his custom, Skillsaw sketched out rough plans for themes, pondering textures to try out, and come up with a central hook—preferably something he hadn't done before—before breaking ground. "I usually have no idea what any of the maps are when I start them. As the map set fleshes itself out a bit, I begin to see what kind of maps I need to make to tie everything together and make those, but it's an organic process." The campaign includes maps from over a dozen members of Doom's community, with Skillsaw wearing multiple hats to create palettes, build maps, and take point on level curation. "The initial hooks were I wanted to learn to edit the games palette," according to Skillsaw. Combat, previously one of his weak spots, would play a more prominent role, although not a central one. "I wanted to make maps based around ammo starvation. There are some ammo starvation maps at the beginning, but I didn't stick with that theme long term so the palette ended up being the main driver. At some point I decided to explore storytelling in Doom a bit and worked in the tongue-planted-firmly-in-cheek conspiracy story and theme." The first thing players will notice about Ancient Aliens is its beautiful color palette. A starry expanse enfolds maps. Transparent bridges edged with rainbow-colored borders connect roads lined with edifices painted in light purples, blues, greens, and reds. Cities composed of buildings crowned with arcane symbols spill out over expanses of clouds like a scene from a Star Wars film. I just wanted to make the wad look unique, and there aren't many wads that use the same color palette as synthwave album covers. A meandering river surrounds a ziggurat in Map 18: Illuminati Revealed, built by Skillsaw himself. The ziggurat looks impressive from afar, but the detail is astounding when viewed up close—obsidian blocks laced with cerulean veins to resemble space-age circuit boards. "I just wanted to make the wad look unique, and there aren't many wads that use the same color palette as synthwave album covers," Skillsaw said. Skillsaw had no strict guidelines for who could contribute what for Ancient Aliens. There was but one central theme. "Movement is what makes Doom fun, so make sure movement feels good," he explained. "This leads to some soft rules about how open areas are better than tight areas, doors and corridors should be kept to a minimum, etc. But these are soft rules and sometimes going against them can make an area more interesting."  Rather than put out a call for designers on every Doom forum in extant, he stuck to places he frequented. Between 10 and 15 mappers volunteered, and seven committed to full maps. "Seeing what everyone came up with was awesome, especially because everyone brought their own perspective and their own ideas that I wouldn't ever have come up with, and the guest maps all stand out as highlights precisely because they serve as a break from my stuff." Looking back on Ancient Aliens, Skillsaw found a lot to love in his own work, as well as that of his team. "The guest maps and the soundtrack composed by stewboy are fantastic," he said. "I'm extremely happy with the aesthetic and the style of gameplay in my maps; I think my personality and creativity are realized better in Ancient Aliens than in anything I've done previously. I'm not sure if the Doom community would agree or if they will remember it more fondly than anything else I've made, but that doesn't matter. I made it for me. The fact that other people were willing to contribute so much still blows my mind." Designing maps for themselves has served Viggles, Scwiba, and Skillsaw well, but it doesn't hurt to know that other Doom fanatics appreciate and anticipate their work. Ancient Aliens and Absolutely Killed earned Cacowards from Doomworld in 2016, and Viggles published Brigandine in February 2017 to enthusiastic reception. That transaction, creating levels for others to play and playing levels made by others, has resulted in an economy of maps that shows no signs of drying up. A big part of that has to do with the delicate balance between power and ease of use that Doom editors and other tools offer. "Doom, when it first came out, was super huge," said Viggles. "Millions played it and tens of thousands made levels for it. It established itself as one of the first successful modding communities, and it was punk as fuck." "It's a primitive enough game that one person's efforts in their free time can realistically result in the creation of something compelling," explained Skillsaw, "but it's complex and has just enough fidelity that the things you create can really be your own if you want to make the extra effort. Modern games are way too much effort to mod for in the way you can for Doom. There aren't a lot of custom campaigns coming out for new games because it's an impossible amount of work." "You can draw a whole Doom map on a piece of graph paper since you don't have to worry about truly 3D space—unless you want to, in which case there are more advanced source ports," added Scwiba. "You don't have to know a thing about coding—unless you want to, in which case, source ports. That's the beauty of Doom: it's as simple as you need when you start, and as complicated as you want it to be once you start getting comfortable." As for John Romero, he's glad to know he'll never run out of new levels to play. "To me, Doom was almost like the analog to the Apple II, which lived far longer than it should have, being a computer from the '70s and living until the early '90s," he said. "Doom felt like analog to that computer, where it just lasted for so long and was just the perfect combination of simplicity and accessibility. It was easy to have fun with it in whichever way you have fun: it's easy to make levels, it's easy to deathmatch, it's easy just to pick up and play it, it's been supported for years. Source ports like ZDoom, Zandronum, and Skulltag, they're all really great. Releasing the source code was the best thing we ever did." Doom's portal to hell opened in University of Wisconsin-Madison on December 10, 1993, when id Software uploaded the shareware version to an FTP server. Eager players crowded the portal—so many, in fact, that the admin asked everyone to log out so the id guys could give them what they wanted. More portals opened from there, across university campuses and office parks and homes around the globe. Doomworld was one of the earliest, and continues to widen by the day. Fans from around the world converge on Doomworld to discuss and share custom-made levels (known as WAD files), share tips and tricks for building maps, and debate its annual Cacowards ceremony honoring some of the best levels and total conversions from the past 12 months. Andrew "Linguica" Stine is one of the gatekeepers of Doomworld, and has been since the beginning, though he didn't plan it that way. I spoke to him about how Doomworld started, the differences between hosting a website then and now, and the ongoing experiments into "vanilla" Doom's code that keeps him excited about id's hellish classic. There's an old Onion article that goes along the lines of: "Experts Agree: Pop Culture Reached Its Peak When You, The Person Reading This, Were 13 Years Old." I think that's probably basically the sort of impression Doom made on my psyche. What was your introduction to Doom? Why has the series stuck with you? I first played Doom as an impressionable teenager in the summer of 1994 and it was, of course, the most amazing thing in the world. There's an old Onion article that goes along the lines of: "Experts Agree: Pop Culture Reached Its Peak When You, The Person Reading This, Were 13 Years Old." I think that's probably basically the sort of impression it made on my psyche. However, there was the added wrinkle of that it actually was one of the greatest games ever made and continues to be celebrated as such to this day. Most of the time you look at whatever you were obsessed with as a teenager with a more jaded eye later on and think, Wow, I can't believe I was so into Digimon or whatever and basically move on with your life, but I've been cursed by the fact that the object of my teenaged obsession has turned into an evergreen cultural touchstone and ongoing franchise. So that's fun. How did Doomworld come about? Doomworld arose as an offshoot of Telefragged.com, which was one of the players in the big groundswell of Quake-oriented websites following the game's release—others including Blue's News, Voodoo Extreme, Stomped.com, and a little site called the Shuga Shack. After John Carmack at id Software released the Doom source code in late 1997, the admin of Telefragged decided it would be a good idea to create a Doom-centered website in the same vein as the Quake-centered websites. At the time, I happened to be working on a really dumb Doom mod project which never went anywhere, but which had a website hosted on the Telefragged servers. I had gotten bored with the mod and was spending more time updating the site with the latest Doom-related news I found from my web browsing, so I was the first person he thought of to head up the effort. The domain name doomworld.com was available and seemed decent enough, so I started cobbling together the site in early 1998 before opening its doors that March. Do you create mods, or is your interest in Doom and modding stem more from curation, which Doomworld provides? I've dabbled in mod making from time to time, but nowhere to the extent, both in time or in craftsmanship, as scores of other modders out there. I've made a few minor things I won't bother mentioning, but the one thing I made that saw some wider impact was Selfie Doom, which I put together as a joke back in 2015, and which received a frankly baffling amount of media attention. I don't know how much interest in curation I personally have, really, since I honestly don't play enough of the Doom mods out there to feel like I have a good grasp on everything. But Doomworld as a whole has sort of gravitated towards becoming a curator for Doom mod content in a few ways. There's the forums, of course, where the majority of the action happens: people discuss the game, come up with idea for projects, etc. There's the /idgames Database, which is our frontend for the network of FTP servers that have hosted Doom files since 1994. It used to be that if you wanted to play a new Doom level, you had to log in to a FTP mirror and browse around until you came across a text file for a file that looked interesting. We put together a database to sort of overlay atop the FTP directories and let people more efficiently browse and search the files, as well as rate them and give feedback.  And then there's the Cacowards, which are Doomworld's yearly awards ceremony on the anniversary of Doom's release. This is the most obvious sort of curation the site does, where we have a team of dedicated Doomers who sit down every November and hash out what they feel are the most exemplary new project releases from the last year and compile it into a bunch of writeups and fake statuettes—and on rare occasions, even real ones, too. What were your responsibilities on Doomworld early on? I was the original webmaster of Doomworld, so I did pretty much everything on the site: I oversaw the original design work, compiling information for databases of utilities, editors, and Doom source ports writing news updates, etc. Back in the very early days everything was basically done in straight HTML in a text editor. For the first year or two of the site's existence, I—and several others who were editors for the site—did all the updates entirely by hand, editing the raw HTML with no scripting language on the backend or any content management system whatsoever. Mordeth was one of the other original founders. He also had been working on his own Doom mod, which was more successful than my early efforts in that he actually released his, but he had also gravitated towards turning his page into more of a general Doom news site by late 1997 and the Doom source release. I asked him to join as another admin and he assisted in getting everything up and running, including doing much of the grunt work for the databases of Doom editors and utilities. Something like Unity lets you make anything your imagination can dream up, but that comes at the cost of massive complexity and having to wrangle lots and lots of art assets. With Doom, it's not hard to bang out what is essentially a 2D blueprint for a level in an afternoon. [Author's note: Mordeth could not be reached for comment.] What was it like running a website in those early years when the Internet was still uncharted territory for most people? How would you contrast Doomworld then and now? For anyone under the age of... uh... for anyone who can still reasonably consider themselves "young adults," it's hard to describe just how different the internet was in those days. Comparisons to the wild west are often thrown around, but it really was like a new frontier with no particular rules of what you could do or indeed what you should do. The web today is a far more organized and useful place, but in being tamed, a certain ineffable quality has been lost. I don't want to wax nostalgic too much about the early web in general, but Doomworld in particular has certainly changed a huge amount since the early days. Back in the beginning it was primarily a one-way medium: Except for feedback via email or IRC or newsgroups, it was mostly just putting things out there because you got some sense of satisfaction from it, and then you moved on to the next thing you wanted to do. Nowadays with social media having basically consumed the web, *everything* you consider doing is primarily viewed through the lens of not just if you like it, but if readers will like it and engage with it and comment and like and subscribe and so on. Right now I'm in the middle of wrestling with Doomworld's first major overhaul in 15 years, and I actually threw up my hands and bought a whole web community-oriented software suite to base it around, since there's not much use in trying to do anything else. Your profile says that you left the site in 2003. What prompted this departure? In 2003 I was in college and couldn't afford to keep spending a lot of time on a hobby, so I tried to make a clean and "official" break from the site. This was doomed (heh) almost from the start. It's difficult to give up any long-lasting hobby cold turkey, especially when your hobby is hopefully continuing on without you. I didn't "leave" in 2003 so much as just give up my official title as webmaster, and continued puttering around and occasionally working on the site for years. I "left" more permanently circa 2008 when real-life job and education responsibilities made it difficult to spend any time at all paying attention to Doomworld. I should mention of course that the site wasn't left rudderless. Another staffer, Bill, who goes by "Bloodshedder," had taken on a lot of responsibilities by that point and was elevated to become the de facto webmaster, and the site continued on more or less smoothly in my absence. I "came back" in 2014, with sort of a gradual re-immersion in the website and the responsibilities therein. What are those responsibilities? Nowadays I'm the webmaster for Doomworld once again. After returning I had started doing things for the site like fixing bugs with the forum software, and by the time mid-2015 came around, Telefragged finally—finally!—decided to wind down operations and stop providing us with the free hosting we had enjoyed all the way up to that point. Faced with the prospect of the site going defunct, I decided to officially (re)take up the mantle of webmaster by reacquainting myself with all the vagaries of website hosting and management and moving the site onto its own independent server. Since then I've tinkered around the edges to provide some new features and upgrades, but hopefully fairly soon I'll be able to roll out the first major revamp the site has seen since 2003. Aside from areas within your purview, what do you enjoy doing on Doomworld in your spare time? A lot of my more recent Doom-related activity has been centered around studying some of the most seemingly pointless and minute aspects of the Doom engine, and more specifically, the original, "vanilla" Doom engine. With modern source ports like GZDoom, which expose huge numbers of features to a modder and encompass entire Turing-complete scripting languages, making weird Doom mods has sort of migrated from being "cool hacks" to being basically like any other amateur game development effort, just with a game engine that happens to be centered around Doom. I'm typically more interested in figuring out what the Doom engine could have done back in 1994 in its original state. My Selfie Doom mod actually arose from some research on how to display certain kinds of HUD graphics onscreen, and I've recently done other silly stuff like creating vanilla Doom levels with non-Euclidean portal-type effects, experimented with an ersatz "megatexturing" technique, and writing a big "movement bible" that attempted to explain every strange movement and physics quirk including documenting one that had never before been isolated or explained. I'm currently off-and-on working a new vanilla Doom "map" that will show off another little-used avenue of exploiting the Doom engine, and I have various other ideas in store for the future. I think I enjoy deconstructing Doom more than actually playing it, to be honest—which might have once seemed super strange, but nowadays with the big speedrunning and TAS [tool-assisted speedruns] communities, and people figuring out stuff like total control hacks to program Tetris inside of Pokemon or whatever, I feel like it's not such an unusual interest. What do you believe has kept Doom and Doom 2's modding community—and Doomworld—active decades after their respective releases? That's really the million-dollar question, I suppose. The Doom modding community originally arose due to several twists of fate. It was a viscerally exciting and technologically groundbreaking PC game which just happened to be released right at the moment when the internet was starting to take off, and caught the attention of a lot of university students who were looking for a cool game to play on their PC and who also knew how to program. It benefited from a real sort of "first-mover" advantage where it got lots of early attention and lots of smart people tearing through its guts and reverse engineering tools for it, and then more people got interested in using those tools to create new things, which interested even more people. Why it still has a measure of popularity today, though, is more baffling. I think that it boils down to the fact that Doom modding is, relatively speaking, quite easy, and you get a lot of "bang for your buck." Obviously things like Mario Maker are easier and more straightforward, but they're also pretty limited in their scope of what you can create with them. Something like Unity lets you make anything your imagination can dream up, but that comes at the cost of massive complexity and having to wrangle lots and lots of art assets. With Doom, it's not hard to bang out what is essentially a 2D blueprint for a level in an afternoon, and it can be any sort of level you want—within the available Doomy constraints, of course. "Doom 2016's story was fantastic." If you never expected to say those words, you weren't alone. Creative director Hugo Martin got his start working on Uncharted at Naughty Dog, went to Hollywood and created character designs for 2013's Pacific Rim, then returned to video games when he landed his job at id Software. His resume made him uniquely suited to recalibrate expectations for stories in big-budget games, to say nothing of id Software's long history of simple but effective "A portal to a bad place opened, kill everything that comes out of it" narratives. In our talks, Martin touched on storytelling lessons he picked up from working in Hollywood, how comic books informed Doom's visuals and narrative, and why less is more in games and film. A lot of producers talk about crafting a "cinematic experience" in a game. You've actually crafted cinematic experiences in cinema. Do you find that "cinematic experiences" so often boil down to watching two characters stand around and talk? I like when games make use of storytelling devices unique to the medium—that is, actually playing the game. I wondered what your take was as someone who's told stories in both formats. Hugo Martin: Throughout my career I was bouncing back and forth, and I started in games, plus I'm a huge gamer. I definitely understand the medium... I mean, I like to think I do. [laughs] I find my film background and my passion for films to be very useful. We're going for feelings. That's basically it. In the film medium, you've got different limitations and different things you can do. And obviously in games you have a whole different set of limitations. It's funny. I agree with you: I like games like Bloodborne so much because it doesn't really stop me. I don't necessarily want to be stopped if I don't have to be. It's got to be a pretty good story in a video game for me to want to sit there and watch people talk. And what's really funny about that is that's not really a good thing. How many times are you going to sit there and watch two people have a conversation? The main character of the film is going to watch people have a conversation? That's pretty rare. My favorite kind of storytelling is when I don't even notice it's happening. I think for the most part, that's what we tried to do with Doom. In games, it's just because of the way the medium works. You tend to end up doing that a lot. I think what you see in film, and what we can learn from film, is you take a film like Michael Clayton—that movie uses the same type of efficiency that we tried to use in Doom. It's giving you so much information but does it in such an efficient way. I think the best kind of storytelling is when you don't even really realize you're being told a story. I think we all get pissed off in games and movies when you can feel it: "It's story time! I'm six years old again, and the teacher's got the book out and she's explaining everything to me. Oh my god. I'm so bored." My favorite kind of storytelling is when I don't even notice it's happening. I think for the most part, that's what we tried to do with Doom. Whether or not we did that successfully, I'll leave that up to the fans. There is a tremendous amount of storytelling going on in Doom, and very little of it has to do with people telling you stuff. The story of Doom is: we want the player to feel like a badass. That's it. That's the story of Doom. It's a combination of progression in the game, the weapons, the few things people say to you, their reaction to you. There's even more stuff in the codecs if you choose to read or listen to it. All of it has one goal in mind: Doom 2016 is doing its damnedest to make you feel strong. If we had 10 dollars, we'd spend eight of it on combat, a dollar on something else, and one dollar left for the story. All of that money would be spent on making you feel like a badass. With my film background, you look at films that do well, and you pull out of it what you can and try to apply it to your game. One thing about my film background that I think helps me, and it's kind of an attitude that we have here, is: there's never enough time, there's never enough money, to do the thing you really want to do. There's this "Let's figure out a way to get it done" attitude in film that I love. Think about all the making-of stories. Like Empire Strikes Back: it's a bunch of kids in a garage, and they're pulling off the best effects the world had ever seen. The matte paintings for the Hoth scenes are made by some kid who never even worked on a film before. They were some of the best Hoth paintings the world had ever seen. That's the kind of attitude that I really wanted the team to have: this roll-up-your-sleeves-and-get-it-done. We love to make two dollars look like 20. Just being really smart about it. Take James Cameron on Aliens. He wants 20 aliens in suits; the studio says, "You have a budget for seven or eight." The way he figures out to make seven or eight aliens look like 20 is, what they actually look like is total shit, but to the audience, they look amazing on film. He gets really clever: "Okay, that doesn't look as good as we want. Let's put some smoke here. Let's turn down the lights. Let's keep action going." That's really what working on a game or movie is like when it's at its best. That's the fun. The box is always too small. I think the attitude in film is, learn how to pack as much shit as you can into that box. I think some of the best work that Ridley Scott ever did was, he didn't have enough money to make the sets in Alien look the way he wanted to, so he started turning off lights and filling the room with smoke. He created a visual style that to this day is... I mean, come on. What looks better than Blade Runner or Aliens? And that was born out of him not having enough resources to do what he wanted to do. The box was too small. Those restrictions that are put on creative people, that's where innovation comes through. Honestly, innovation is why we do this. It's so exciting to work with a team, and there's this camaraderie that comes out of it when you're figuring out a way to put something that's way too big into the box you have—and then you actually figure out a way to do it, and the audience is like, "Holy..." Their perception of the box is way bigger than it is. That's what gets me up in the morning. That's a film attitude, but certainly they've been doing that in games for [decades]. The truth is, nobody has enough money. Everybody's box is too small. Even Apple's box is too small. I think we look at Apple products and think, Oh my god, they have unlimited resources. Everybody's got a schedule, everybody's got a deadline to meet, and that makes the box smaller than you want, but I think the best teams embrace the box. I'm not as much of a film buff as you are, but I am interested in learning about how movies are made. I've found that I gravitate toward films that were made with practical effects. Take, as an example, the original Star Wars trilogy and the prequels. Whether someone loves the prequels or hates them, there are stark differences between the creative processes. Hugo Martin: I think that James Cameron in Avatar pretty much showed you what he can do when his box is bigger, and it was pretty fucking spectacular. Some of my favorite things in art—art being film, games, fine art, illustrations, whatever—I think the best decisions you make, as a creative person, is the stuff that you leave out of the image. Those are usually what make the parts that you left in even more powerful, because you're giving the audience an opportunity to participate in the image, or the game, or the story. I'll use Doom as an example. The game itself did not allow for us to expand on the story of the Doom Slayer and some of the lore as much as we... I wouldn't say "wanted to," but "could have." Not only did we have resource limitations, we had time limitations. We also had the fact that the race car [analogy] wasn't built for that. I don't think that's what people wanted from Doom. So what we did was, we edited, edited, edited. We gave you Part A of the story, and Part C of the story, and we asked you to figure out Part B. In my opinion, that's the best way to go about it. You're basically making me, as an audience member, sit up in my chair and participate and figure it out. That's what I find to be the most engaging approach. A really good storyteller edits and only hits the high points, and then you paint a picture in your mind to fill in the rest of the story. That's how you entertain people. What happens when your box gets really big and you have CG... let's take visuals for example. My biggest problem with the [Star Wars] prequels is I can see everything. It's almost like I want to go in there and say, "Okay, I know we modeled all this shit. I know it was all designed and we spent a lot of money on the Jedi Temple, but for Christ's sake, can somebody turn off some lights and give this room some style?" And I know why they did that. "That carpet? We paid a lot of money for that carpet. That stuff on the wall? That was really expensive. I want to see this creature fully lit from every angle because we spent two months making this thing in CG." And I'm like, dude, I don't want to see this whole thing. The analogy that I use—it's a concept I taught to my students—is when someone is telling you a story, and they're telling you every single detail. Hey, how was that movie? "Okay, so the credits started. Then it said, 'Directed by...' Jesus Christ, dude. You're killing me. A really good storyteller edits and only hits the high points, and then you paint a picture in your mind to fill in the rest of the story. That's how you entertain people. That's true, in my opinion, for games, for painting, for film. And a lot of times, as in our case, that was a result of our box being too small to fit stuff in, so we let the audience fill in the blanks. Ultimately, that creates a higher level of audience participation. It's more engaging that way. When we look back on Alien, for example, a lot of times [Ridley Scott] shut the lights off because stuff didn't look that good. But, my god, tell me you don't fill in the blanks on Blade Runner so much. It's just smoke and silhouettes with hints of detail, but that is the greatest depiction of a futuristic city to this day. Honestly. Maybe Fifth Element, but I'd like somebody to show me a better depiction of a futuristic city than Blade Runner. I've taken screen shots of every inch of that film to do film study, lighting—to really understand it. When you take a screen shot [of Blade Runner], it's amazing how little information is really on-screen. It's all implied. It's all silhouettes, and your mind is filling in the blanks. The story that you create in your head is always going to be better than the one I write down for you. No one's a better director than you, that's for sure. If you allow your audience to participate in your game's story and your game's visual, it's going to be more compelling because what they fill in the blanks with is always going to be the coolest thing for them. Honestly, that was a bit of a debate for us on Doom 2016. The difference is in games, you have to see your objective. The reason why I came to games is because I love games, and I find making games to be extremely compelling. You just heard me rant about movies and art for 10 minutes, but I'm never going to put that stuff above gameplay. Gameplay rules the roost around here. I might run the kitchen, and Marty runs the restaurant, but fun is the boss. Fun runs the show around here. [Doom] is a video game, so gameplay first. But when it came to visuals, I very much wanted to use that Ridley Scott approach of smoke and silhouettes when possible. Now, that became a challenge. On a film set—I worked at Blur for many years—some environment artist is going to model every detail of an environment, and it's very difficult to turn around and say to him, "Yeah, we're going to shut lights off and put a bunch of smoke in there, and they won't really see it." He's going to be like, "Then why am I here?" That tends to be a bit of a struggle, so whenever possible we try to use that Ridley Scott approach to make [Doom] more suggestive. It's a bit of a balance in video games. I want to see my objectives. Gameplay first, art second. We're always going back and forth on that, but it's all about audience participation for me. My favorite moment in video game storytelling over the last three years—and I won't talk about our game because that would be obnoxious—in Bloodborne, there's a woman in a white dress in one of the levels. I think it's in the last level before the last boss. She's standing there staring up at the boss arena you're going to enter, and she doesn't say anything, and she's bloody. The story I have in my head of who that girl is—I have a whole thing built up in my head that that's the wife of the boss you fight at the end, and the boss is all disfigured, and... It's a great story! I want to write it down. [laughs] But I love the fact that it's my story. Bloodborne, very similarly to Doom, is kind of like, don't tell me the whole story; let me figure it out. Bloodborne is a good example. I love all of the SoulsBorne games, and what I like about their approach to lore is when you find a sword on a corpse, that sword wasn't placed arbitrarily. That corpse wasn't there by chance. But you don't have to care about that. You can read the weapon's description, or you can just equip it and go back to killing bad guys. Doom was like that. I read all the monuments about the Doom Slayer, but a friend didn't, and he never missed a beat. Hugo Martin: And they felt like a badass. I think that's a story that you both got, but you have a little more context as to exactly what kind of badass you are. That's what I like. We said, "Let's give them the option." Personally, as a fanboy, I very much enjoy digging into that stuff. I want to read about every aspect of the stuff I'm into. We leave that open for the player. If you want more context, you can find it. I gave a talk at a game lab conference in Barcelona about this. When it comes to audience participation, if you look at some of the great pieces of art in history and you think about those images, they're doing the same thing. Comic books are the obvious ones. How many comic books use heavy blacks? A lot of stuff falls into shadow, and you're just catching a little bit of information and [a glimpse] of characters standing there. Pretty much every cool Batman poster ever is like that. I was actually thinking of Batman. Hugo Martin: Completely, right? Some of the best Frank Miller images are like that, and some of the best Batman images are like that. My mind fills in the rest. I think that's why those images are so cool. I think it's a really powerful concept. I like experiencing art in that way, and I like making art like that. My favorite depiction of Batman is from The Animated Series where he's just a shadow with glowing white eyes. Hugo Martin: Totally! Or the Ninja Turtles when they do that. It's the coolest thing. I actually like the [Star Wars] prequels. I realize I'm in the minority, and I totally agree with people's issues with them. What I like about the prequels compared to the originals—obviously I like both—but I think George [Lucas] swung for the fences. There's a lot of really cool stuff. In a half-hour's worth of any of the prequels, there are new ships, new characters, new ideas that I really like. With Force Awakens, and I think that's a great film, but there aren't as many new ideas being introduced. But one thing is that when I close my eyes and think about the pros and cons of the prequels, it's too fucking bright. There's just too much information. I can see too much stuff. They don't leave enough to the imagination. Doom's Ultra Nightmare mode is tough, but in game development, working long days and coming in on weekends is even tougher. A fun project and healthy camaraderie can make the experience more bearable. Marty Stratton, Doom's executive producer and director, talked to me about the pressure he felt working on such a beloved brand, who among the development team succeeded in finishing Ultra Nightmare first, what his son's friends thought of their first Doom game, and his reaction to Doom's overwhelmingly positive reception. My son is 16, and he's got a bunch of friends who played it and loved it. They were excited about it, and Doom was a new thing to them. Doom has been out almost a year. Now that you've had time to reflect, what did you enjoy most about the project? Marty Stratton: There are so many things. My favorite part is actually the end product. I know that sounds like a cop-out, so I'll give you some others, but I'm so proud of where we ended up with it. Not just because it's been well-received and people feel like, hey, Doom is back. Doom is where it needs to be in terms of modern gaming conversations. But we really set out to create something that would appeal to people who, like you said, you've been playing id games a long time—a game that would appeal to you, and all of us who played Doom and loved it, and it became part of who we are as gamers. It has fond memories [associated with it]. Our Doom was true to that. It didn't necessarily replace it, but it became part of it. It was an augmentation to your Doom history. At the same time, there's a lot of new people who have come to Doom. My son is 16, and he's got a bunch of friends who played it and loved it. They were excited about it, and Doom was a new thing to them. A lot of them are hardcore gamers, but they'd never gone back and played the original. Maybe they'd heard of Doom 3, but they'd at least heard of Doom, and they're not Doom fans, and not just because they know me. They're looking forward to whatever comes next from Doom. So, ultimately the fact that we delivered on that promise that we'd make when we announced the game at QuakeCon in 2014—that's probably my favorite part. But the process of making the game was immensely hard but immensely fun. A lot of that comes from the fact that we were so flexible as we went. We played the game constantly, and I think that made all the difference in the world. The day-to-day decisions. Doom is such a crazy, fun, absurd, wild brand. When you're going through creative meetings, or reviewing art or animations, or whatever, it's anything but mundane. It's such a fun world to play in. When you have conversations in meetings about how you're going to kill a demon in the most creative, bombastic way you've ever imagined, it's just fun. It's so fun to be at work and work with the people here who are just so passionate about it. I would hate to work on a game that doesn't have quite the impact or meaning [that Doom has], or the opportunity to make an impact. The fact that as you're going through the process, you know you're working on something that matters to people. That when it comes out, if you succeed or you fail, it will be a big thing. That pressure, just that purpose, is awesome. I've worked at id and worked on id games a long time, and id games have kind of always had that, so I don't know what it's like to work on something that doesn't mean something. To be able to have that opportunity on Doom, and have it with these people, and ultimately have it turn out the way it did, and to know that it would. Going into launch, we all had a lot of confidence that we had done a good job. We really liked it even after a few years of development and playing it for hundreds of hours. We were still having competitions on Ultra Nightmare [difficulty] literally up until it shipped, trying to see who could get furthest. That's kind of a long-winded answer, but I'd say that combination of things was my favorite part of it. We spent most of the first week after launch just watching people play on Twitch. It was such a cool window into people's first reactions and experiences with the game. You can learn a lot, and it's just fun. Marty Stratton: There were a bunch of people from QA, and a bunch of devs. We have a multiplayer testing pit, and different guys were trying different tactics. It's funny because when the game comes out and you have Ultra Nightmare, we didn't know how long it would take people to beat [that difficulty]. I honestly thought it would take months, and I think it took two days. It was crazy. When you look at the skill of the players out there, it's just insane. One of our younger designers, Adam Bideau, he was the closest. There were some other guys in QA that came close as well, but he was the closest throughout. We had said in an interview that nobody internally at id had beaten Ultra Nightmare yet. It was his mission to beat it before [the game] shipped, and I think the night before it shipped, he beat it. He would basically practice, and then go back to his game once he knew [strategies]. I'm not saying that was at all a cheat, because he beat it fair and square. But, again, when you look at some of the [consumers] who did it right after it launched, they were just basically like, "Yeah, I'm going to take on Ultra Nightmare," and it would take them a couple of tries and then they were through. Did you take that as a testament to the quality of the game's design? Kind of like saying, "Yes, this may look impossible, but it is possible." Marty Stratton: Yeah, I think so. I give the designers, the leads and our AI team just tons of credit for that. But it's tough. [laughs] It's really hard to do. I think some of the first players to beat it did so on PC. It's definitely a faster and snappier experience on PC, the way you can manipulate the mouse and keyboard. It was fun to watch. It was the first time we'd released a game with Twitch as a big thing, and streaming [in general]. It was just awesome to be able to watch people. We spent most of the first week after launch just watching people play on Twitch. It was such a cool window into people's first reactions and experiences with the game. You can learn a lot, and it's just fun. I liked to talk to developers about how they felt after a game released, especially one that went through as many development twists and turns as Doom. How did you feel last May when the game finally launched? That must have been surreal. Marty Stratton: Yeah, it was a little surreal. At first, it was just a relief. That's the hardest I've ever worked in my career, the last year of Doom. The last six months alone, I didn't take a day off, even on weekends. We worked 16 to 18 hours a day, just trying to squeeze every ounce of juice from it. Just because, again, it's a combination of pressure, pride, respect, and love. It's all these things and you're just like, "This has to be great. If I have slept one second more than I needed to and this doesn't turn out great, then I'm going to look back and really be disappointed." We had a lot of confidence. We really felt like it was going to be great, but you never know. You've always got a little pit in your stomach. When it first goes out and people are playing it like that, it's definitely a relief. It's a few years of really hard work, and you're so happy that people like it. It's hard to explain because you put everything possible into it. You sacrifice. And this isn't just me. The entire team sacrificed their weekends, dinners, time with family. All kinds of stuff. The fact that [Doom] came out and peopled liked it, and not just liked it: You have a lot of conversations with yourself when you're making something when you ask, "Are people going to get this? Are they going to understand that we're giving them a little wink?" Particularly when you try to do things that are subtle. "Are they going to understand what we're trying to say with this? That we're trying to call back to the original Doom in some way?" That's where the Twitch experience was really awesome. People would walk into a space and recognize the fact that it was kind of based on a level from the original Doom, and they'd be like, "Oh, I see what you did here." And you're like, "Yes! Oh my god!" Or at the beginning, when Samuel's talking and you grab the monitor and throw it to the side, even that was like, "Man, this feels risky. This is the right thing to do, but are people going to be upset?" Because we basically took the one piece of information about what you're supposed to do and chucked it. Are they going to understand that that's a statement we're making? Or are they going to be pissed off that we took control away from them for a fraction of a moment and just chucked their main source of information to the side? When people react to it [positively] in real time and you see that, it's like: Yes. Thank you. Oh my god. They got it. A huge thank-you to all the individuals who helped make this feature possible: Erin Losi, assistant director of public relations at Bethesda Softworks, and Liz Roland, senior account executive at Fortyseven Communications, for coordinating interviews with the folks at id Software; Hugo Martin and Marty Stratton, creative director and game director/executive producer on Doom 2016, respectively, for taking time out of their busy GDC schedules and even more time afterwards to ansnwer my questions; John Romero, who has graciously allowed me to pick his brain about Doom and assorted other projects on multiple occasions; Marcos 'Sergeant Mark IV' Abenante, 'viggles,' 'skillsaw,' 'scwiba,' and Andrew 'Linguica' Stine, for opening up about their passion for Doom and its community; Shacknews video producer Greg Burke for lending his deft touch to the video interviews that accompany this piece; and last but not least, Shacknews CEO Asif Khan and editor-in-chief Steve Watts for giving me a ridiculous but much-appreciated span of time to get this project just right.|||

Doom has devoured productivity and personal relationships since id Software opened the floodgates to hell in 1993. Gatekeepers of the franchise's past, present, and future celebrate the weapons and level design that defined the classics, the pitfalls and triumphs involved in revitalizing the brand, and the community that keeps old-school fans knee-deep in new ideas.