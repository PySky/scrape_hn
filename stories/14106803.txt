Every Ember developer has done this many times:

Ember will apply either or HTML class to the component depending on whether property is truthy.

In this case, the property is looked up on the component.

There are situations when you want to pass into a component from the parent template.

Say, you need a custom HTML class on the component, but you don't want to bother subclassing the component. Why create a custom component when you can simply pass and into the standard , right?

This is what my intuition tells me to do, but it does not work:

is operated by Ember's deprecated binding mechanism. The mechanism is documented here: http://emberjs.com/api/classes/Ember.Binding.html

Historically, this low-level API was used to set up bindings in EmberJS. Then it was replaced with the convenient high-level API that we know today, and instead of we can simply do in our templates. Note that the former uses quotes and the latter doesn't.

is roughly equivalent to this:

But if you use the latter in your template, the HTML class will not be dynamic. It will use the initial value of , but when changes, the HTML class will not be updated.

This is why are there.

You have to define the property on the parent component/controller and use its name in :

It is very important to understand that this example is different from the very first example in this article, even though it feels identical to .

I assumed this would work, but it doesn't:

...where is a simple helper that returns its arguments as an array.

I did not find a way to pass more than one property into . If you need that, you'll have to subclass the component in question, so that you can apply internally, in the component's own JS file.

I wrote this post because caused a lot of frustration to me. Ricardo (@locks) kindly explained to me how it works, and I'm sharing my findings with the community.

But I still don't fully understand this bindings business, and what I've written here may very well be inaccurate.

If you see an inaccuracy or have a better explanation of the matter, don't hesitate to share in the comments!|||

This blog post describes some things that happen when using attribute bindings with HTML class in Ember.js.