This blog is for the newbies who have just entered college and are confused on how to make entry into this field. If you feel confused about technologies, languages, frameworks etc., this will perfectly help you. We will also clear few myths.

 

 Languages and frameworks are nothing but mathematical engines

Yes. All organisations vouch for two things when they make software. First is the speed of execution and other is the speed of development. No organisationÂ wants to pay for too many resources nor want to slow things down. C++, JAVA etc. are fast but lack development speed. NodeJS and Python feature vice versa. So what language should you learn? Doesn't matter. Data structures and algorithms are far more important. They improve the speed of the programs irrespective of the language they are written in. Hence knowing these will be a better option than learning few features of a particular language. You can start Data Structure and Algorithms from these two websites:

Now it has been more than 1 year and you are doing good in competitive programming. Once you achieve this phase, you can readily move to the next phase. You need to explore your interests and figure out what do you exactly want to do. Here are few of the major areas of work:

I scored an internship at the end of second year itself. Though it was at a very small startup, I learnt a lot. There was a lot of exposure at the end of it. It actually kickstarted my learning and helped me become what I am today. I did freelancing too after that. A GSOC could be an awesome addition to your profile and it is relatively easy to achieve that.

These stints place you with experienced candidates when you first sit for the interview giving you an edge over others. Once you enter the company, learn about the auxiliary steps required to push code to production. You will get to know about code standards, edge cases, data migration and a ton of other stuff. You should also learn about the system specifications and server management though most of it comes as a platform now with little to no involvement in setting it up.

Never stop learning. A majority of us start with online tutorials. In my opinion, it rarely works due to lack of motivation. I am not sure but books worked for me. At times short lectures on a particular topic from too helped. But books are still the best investment.

Asian schools employ a terrible process, a one time exam which test your capability based a on a single test. A little fuck up and you land up in a school which you never wanted or a discipline you heard for the first time when you filled forms. Schools in US are slightly better but good are just too costly. Sooner or later you find out about how programming could shape your future but by then it is too late and you end up being an average programmer with a dead end job. I too had a phase like that but thankfully I am past that.|||

start coding, beginners, college freshers, new bies, frameworks, languages