All too often, I see Django developers go about optimizing their apps the wrong way. So In this short article, I’ll shed some light on the most common mistakes. I’ll show you how I search for bottlenecks.

I saw how people start the optimization of database queries that take about 5% of all the request for so many times. Unfortunately, most of the developers just add / to their Django QuerySets to decrease the count of queries to the database.

This does indeed decrease the total number of queries. But what about total time? Such changes will increase the amount of time needed to complete each request. This will ultimately increase the total time needed on production server.

In terms of database optimization, I prefer to have the log of long queries, and work with that. It doesn’t matter whether you’re using a tool like NewRelic or just the built-in PostgreSQL log.

Most Django developers know about with , but I think that this solution isn’t very comfortable to work with. It provides you with a lot of data, but the format is quite hard to read.

I use line_profiler instead. This package allows you to check the performance of specific parts of the code. Basically, you have to write the script to evaluate code that you need and put decorator to methods you are interested in.

I use two options to run view in Django project to check performance. The first one is easier but it doesn’t reveal middlewares and Django code. The second one is a bit more complicated, but it gives the possibility to measure middlewares.

Here I create a fake request, then call the view directly. We need to call the method of the view to run template rendering and evaluate lazy objects.

In this script, I use a WSGI application to call the view, and it provides the ability to evaluate the entire Django flow, with middlewares and template rendering.

To get results, you just need to run two commands.

First, you want to evaluate the profiled code, then write and dump statistics to file:

Second, you want to show the results of profiling:

The result will look like this:|||

All too often, I see Django developers go about optimizing their apps the wrong way. So In this short article, I’ll shed some light on the most common mistakes. I’ll show you how I search for…