I recently came across a really neat animated interactive component (kudos) on a blog that allowed the reader to "like" the post. I wanted to see if I could implement something similar that would work for mobile as well.

First, the UX - I decided to keep this dead simple with an icon and a "likes" count (like the original).

Instead of the original hover effect, we will go for a click because a tap is what works best on the mobile. Other interaction effects such as a drag or long-press could be considered as well. To keep things simple to start, we will rotate the icon 360Â° on click.

jQuery provides a very nice animate method that can animate our widget. We will create a simple plugin for our component that attaches a click event to the div and spins the icon around for 1 second. We use the property to update the rotation from 0 to 360 in the step function. The styles are reset at the end to allow clicking again but this is optional. Initialize the widget via: .

We will now save the fact that the user has liked an item in the browser localStorage. A more sophisticated strategy could also be implemented on the server-side if you have unique user ids. Instead of initializing , we do in the constructor.

So far we have only updated the count internally. We can add methods to update the text and display the count now. We also modify the text with a call to action if the user hasn't already clicked the button. To further enable the call to action we will add the following css: . The constructor now also has a call to at the end to set the text on initial page load.

Note that we added a method which does not do much for the moment. This will become useful while integrating with the API next.

We now want to save our widget counts on the server. Specifically, we want to fetch the latest count on page load and increment the count on click. To enable this we have the following API:

Thus, instead of updating the text right away in the constructor, update it after having retrieved data from the server. Also the function now makes an ajax request and updates the text afterwards.

Put it all together and voila, you have a nice little interactive widget that you can plug anywhere on your page. Note that there are a quite a few differences from the original, the most important being that you can click and trigger the animation even if you have already liked the page!

There are still some improvements to make:

I hope you enjoyed this tutorial and feel free to get in touch if you have any questions or would like to propose any improvements. Most importantly, don't forget to like this article!

PS: I considered publishing this as a plugin but I think that it would be far simpler to just write the 100 or so lines of code and integrate it according to your setup.|||

A tutorial on how to create an reader interaction component for your blog or webpage. The component is a 'likes' widget implemented as a jquery plugin with css3 animations. Browser local storage is used for improved performance and an API is required to store and retrieve widget data.