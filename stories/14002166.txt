Hey there, tech designer person. Have you noticed the increasing number of vague specializations we’ve invented for ourselves?

Here are a few I grabbed from a job board 10 minutes ago.

Bleh. What’s the difference between UX and UX/UI and UI? Isn’t Product also UX/UI? Isn’t a Front End a UI? What’s a Graphic Designer with UX & UI Focus? And isn’t all of this Visual/Digital design?

For an outsider, the differences are extremely subtle. I’ve been talking to a lot of industry newcomers lately, and they’re almost unanimously confused. They’re struggling to gain the right experience and make portfolios to match our foggy job definitions.

Even worse, the companies hiring seem equally puzzled. One designer told me he took a UX job at a startup, and then his new boss asked him to explain what UX is about — after he had already been hired to do it!

This must be happening because everyone can barely keep up with the demand for design work. Companies are racing to fill seats and execute hastily-defined design processes without bothering to question if it’s all necessary for their particular business.

If your company does that, you might find yourself in a game of Designer Hot Potato like this one:

This is surely good for 3M’s office supplies revenue, but as a creative process it sounds painful to me.

I’ve never had a job quite like that.

Before I joined Basecamp, I was always a lone wolf — the only designery person at a small business or government org—so I had to figure everything out myself. I had to talk to people, learn about the problems they were having, come up with ideas, create a good-looking solution, write words, and build the UI piece of the final product.

It was tough, and it took years of practice to become competent at any of it. But I loved the diversity of the work and the exciting potential for new discoveries.

Recently John Maeda’s Design in Tech Report for 2017 suggested a name for my kind of role: Computational Designer.

I dig this idea, but I don’t think we even need the word “Computational.” I think the software industry has been overthinking this, and what John describes is just Design.

I believe Design requires a holistic grasp of problems, potential, and materials.

If you’re only focused on examining problems, you’re not empowered to dream up the proper solutions.

If you’re only dreaming up what you could do, you’re not close enough to the ground-level truth.

If you’re only working on the nitty gritty implementation, you know about the what but not a lot about the why.

A capital-D Designer is comfortable working organically across all of that, without needing to slice it up into separate little steps and responsibilities.|||

Hey there, tech designer person. Have you noticed the increasing number of vague specializations we’ve invented for ourselves? Bleh. What’s the difference between UX and UX/UI and UI? Isn’t Product…