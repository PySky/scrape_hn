In this post, we’ll take a look at the basics of Enumerator, When to use it and Why they are so special. So let’s begin!

As the name implies Enumerator is used for iterating over a collection of items. It allows both internal and external iteration.

There are 3 different ways to create it. They are from,

Let’s have a look on each of the method now.

We can create an enum by passing a block to its constructor. A yielder object will be passed to this block. The yielder’s method can be used to define the elements. can then be used to provide iteration.

The most common way to create an is from an object, specifically, an object that defines a method. is implemented to return a new will enumerate by sending to its receiver.

There are several methods that take a block and returns an when called without a block. For instance, calling without a block will return an with an method that will filter like  These blockless calls offer a concise alternative to .

We can use this type instead of defining many constants for fields (such as a For example, status can have values active and inactive in different condition. So that, we can use this type as below:

So by using it, we can simplify our code as above.

So that’s a bit of dive into the basics of Enumerator. Hope it proves useful to you! Let me know in the comment section if you do so.|||

An enumerator is a special data type that enables for a variable to be a set of predefined constants.Enumerator is an Enumerable plus external iteration.