The goal is to get more from logs than most of other pagers can. And to do so in less time.

Slit supports opening a single file (for now), or reading input from stdin. Slit is runs in terminal mode, writing directly to the screen, without cluttering the terminal buffer by all the logs you are reading.

The best way is to get Go on your system and compile yourself. It's easier then it sounds:

If you prefer pre-built binaries, head over to the releases page - https://github.com/tigrawap/slit/releases. Keep in mind however they might be some commits behind master branch.

Both search and filters currently support the and modes. To switch between modes press in search/filter input.

TODO: History does not preserve mode of previous searches. Will be improved soon

Note: For case-insensitive search in RegEx use 

 TODO: This will be replaced with separate toggle in the future

Filters can be chained - The first 'append' filter (if it is the first to be used) will work as inclusive filter. When adding filters the active line position (at top of screen) will remain the same (as possible).

Chaining of filters gives ability to filter out all the 'noise' dynamically, and get to what you're actually looking for.

Imagine you have huge log file with hundreds of thousands of lines from multiple threads.

 And all that you are interested in are logs from "Thread-10, "MainThread", not interested in "send" and "receive" messages

 In addition, you want to see "Exception", even if it is on line that were excluded by previous filters.

The following chain of filters will output the expected result:|||

slit - a modern PAGER for viewing logs, get more than most in less time