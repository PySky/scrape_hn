We’ve been exploring people, culture and tech here in Australia on our daily blog. If you’re looking for your next dream role with 100+ of Australia’s top companies doing amazing things in tech, get started on The Martec.

A common dilemma among programmers is whether they should use Angular.JS or React.JS technologies for front end development. In this recent test project survey of 957 stakeholders, 80% of front-end web development was found to be dominated by these two technologies. Clearly, it’s important to choose the right one!

So what’s the difference between the two and which one should you use? Let’s take a closer look and consider some insights from experienced technology executives.

Let’s start with Angular.JS as it was the first on the scene. Angular.JS launched in 2009 and is a comprehensive JavaScript-based open-source framework backed by Google. It aims to make the development and testing of applications easier by providing a framework for client-side model-view-controller (MVC) architecture. MVC is a popular programming pattern in which the model maintains data, the view displays data to the user, and the controller directs interactions between the two.  The second version of Angular launched in May of 2016. Popular websites that use this technology include Youtube, Freelancer, Istockphoto, and Skystore.

React.JS, on the other hand, is an open-source Javascript library which is capable of rendering views; solely the view portion of the MVC architecture. It was developed and launched in 2013 by Facebook and uses one-way data binding and virtual document-object-model (DOM) technology. What this means is that instead of manipulating the DOM, React digitally stores two versions of it (the original and the version after changes have been made). A React function processes the two versions and identifies the differences. It then outputs a stream of DOM operations that alter the parts of the view that have changed, thus saving time. Popular websites that use this tech are Facebook, Instagram, Airbnb, and the New York Times.

To give a fair comparison. let’s look at the view component of Angular.JS. In the 1.0 version, it manipulates the DOM by extending HTML using directives. With two-way binding the view reflects changes to the data and vice versa. In Angular.JS 2.0, a new change detection algorithm has been implemented which walks the DOM tree.

Additionally, there are a wide range of advantages each offer, here’s a quick run down of the most notable.

Before getting into a verdict of any sort, let’s look at what professionals in the field have to say.

Gavin Allan, the Head of Engineering at OFX, says that OFX was using Angular.JS 1.x when he joined the company. At that time, they were only building components and loading them into a site via a CMS. The full Angular framework was a bit more than what they needed to build components and they had run into some performance issues. Additionally, it was about to be superseded, so they began comparing Angular 2 and React as alternatives.

In their comparison, React came out on top because it was a better fit as they only needed components. Furthermore, Allan says ‘Other factors that influenced our decision were the tooling for React. As React is driven from JavaScript, we’re able to find bugs a lot earlier in the build cycle. “The learning curve for React was also generally considered to be easier for experienced JavaScript developers.” he continues, “Another attraction to React was React Native. It was still in its very early days when we were making our decision but we knew that it was coming.”

Since the switch to React, OFX has developed further. They removed the dependency on CMS and now use a React/Redux stack. They also have a .Net Core for server side work and for their APIs.

How did React work for Allan and the OFX team? He says, “We’ve since done some proof of concept work with React Native and it worked out really well. This means we now have a consistent UI stack across our web and mobile applications, which provides a variety of work that the whole team can contribute to. It makes things easier to organize and also helps keep the team happier and more interested.”

He says the transition involved bringing in experienced React professionals to show his team what they needed to know instead of having them wade through large amounts of information online. He also added that a lot of the team members were keen to try React which helped the transition.

Now let’s hear from Chris De Bruin from Red Balloon. He says that when choosing a javascript framework it should fit the application you are building. Red Balloon uses Angular.JS for all of their back office applications and says it works well, but found the implementation to be less than ideal for their ecommerce website. Instead, they moved to React and Redux which meant rebuilding certain pages of the website from scratch. He says “It has made a big impact as we move to more server side rendered pages instead of a big single page app.”

Last but not the least, Bevan Dunning, Technical Lead at Mullen Lowe Profero Sydney shared his insights. Speaking of his company’s tech stack, he said most of their current applications were built with Angular because it was the bigger player at the time when they were created. Now, he thinks they will lean towards React for smaller projects, while staying with Angular for medium to large-sized projects. His reasoning is that Angular has the advantage of being more declarative and opinionated which is easier for several developers to come in and understand when they are collaborating on a project.

When it comes to upgrading, Dunning says that the decision should be made for the right reason. He continues, “At the end of the day there is always a trade-off between reality and latest tech. It’s important to understand that just because it’s shiny doesn’t mean it’s better. My preference is to decide on a set of rules about how to implement solutions and then stick to them for better or worse. Maintainable and readable code always takes priority when offered a choice.’ His last advice was for juniors in which he recommends that they learn, or at least become familiar with, both Angular and React while continuously learning JavaScript as it is the common denominator. While React is doing better than Angular currently, he points out that it may change in a year or two.

Which technology is better will depend on your unique situation. Angular.JS is a comprehensive framework that can help you quickly get up and running out of the box. The upgraded version 2.0 provides many new boosts to performance but involves a thorough rewriting of Angular 1.0, so whether you are upgrading or switching to React, there will be a learning curve.

React is good if you have a lot of dynamic content which is changing as it can improve your user experience.You can also use React as the view component of Angular.JS and other frameworks as it won’t tie you to a specific stack. As Allan from OFX found, it was scalable as their needs changed and relatively easy to transition to.

The final takeaway comes from Chris De Bruin, “When choosing a javascript framework it should fit the application you are building.” It may be one, the other, or a combination of the two.|||

