One of the first questions new React developers have is, “How do I do AJAX requests in React?”

Here’s an answer to that question.

First: React itself doesn’t have any allegiance to any particular way of fetching data. In fact, as far as React is concerned, it doesn’t even know there’s a “server” in the picture at all.

React simply renders components, using data from only two places: props and state.

So therefore, to use some data from the server, you need to get that data into your components’ props or state.

You can complicate this process with services and data models (er, “build abstractions”) as much as you desire, but ultimately it’s just components rendering props and state.

To fetch that data from the server, you’ll need an HTTP library. There are a ton of them out there. Ultimately they all do the same thing, but they have different features.

Like promises? Go with axios

Hate promises, but love callbacks? Take a look at superagent.

Rather use something soon-to-be-standardized? fetch might be your favorite.

The thing is, it doesn’t really matter. There’s no “best.”

Some will say that is the best because it’s almost-a-standard, but I’m willing to bet that even after it’s actually a standard there will continue to be competing HTTP libraries that people will continue to use and prefer. So use what you like.

I like axios and that’s what I’ll show here. But seriously, if you don’t like it for some reason, go look at one of the other options.

Here’s a simple example component that fetches the posts from a subreddit ( in this case). Take a look at it, and we’ll go over how it works.

Get the Code! (with tests)

First, we import the library:

The constructor is pretty standard: call , then initialize the state to have an empty array of .

is where the magic happens. This method will be executed when the component “mounts” (is added to the DOM) for the first time. This method is only executed once during the component’s life.

It uses the function to fetch the data from the subreddit, based on the prop passed in during render at the bottom. The backticks are an ES6 template string, and it probably does what you think: the part is replaced by the value of that expression, so the URL passed to is actually .

Two things to note here, specific to Reddit:

Since Axios uses promises, we chain the call with to handle the response. The are extracted after a little bit of transformation, and then the important bit:

The component’s state is updated by calling with the new array of posts. This triggers a re-render, and then the posts are visible.

That’s all there is to it!

Can you think of how to modify the code to add a “Loading…” message while the request is in flight?

Hint: set a flag in state that will toggle once the request completes. Use that flag in the render function to show the loading indicator.

Get the Code! (with tests)

You might also be interested in my book because it teaches React starting with the basics.|||

