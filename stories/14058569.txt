TLDR: Here is how final result will look like (that small thing at bottom right):

Recently, I really fell in love with FZF. FZF is really awesome fuzzy finder for command-line. I started to use to navigate basically everything, starting with searching through history and ending with controlling my music player with it. FZF looks like this (taken from official repository, because I am too lazy to make pretty gifs):

And in between, there is Vim. I am using FZF and fzf.vim plugins for Vim to:

And now, I am also using it for completion instead of default Vim completion popup. Awesome, right? I agree that it is maybe a bit overkill and maybe I will switch back to completion popup, but right now I am super happy with it (and spent too many hours making it work to just dump it) so I decided to write shitty blog post with my bad english about how awesome it is and how awesome AM I.

So, here is the custom completion function:

This function first gathers results from calling defined (that we set to vim ) and then sends it to function, that is function from plugin for vim and this function will open small FZF split at bottom what will be used as filter for our results. Then it returns single filtered result from this function.

Now, to actually use this, we can set our complete function as :

modification is needed to tell vim to automatically match completion if there is only one result (and our custom completion function will return only one result). This change will make FZF with completion trigger after pressing Control-X and then Control-U. But, this option will not work with (will talk about this later), because it is setting it’s own , so we need to make small hack. So second (and better) option is to create your own trigger (as I did in my own vimrc) and not mess with and and leave them free for other plugins (like ):

This will add new trigger, Control-X and then Control-J that will trigger FZF completion. This is nice and stuff, but triggerring completion with Control-X and Control-J… triggers me. But auto popups too, so let’s make completion to be triggered by TAB:

If you chose to use option instead of custom trigger with Control-X and then Control-J, then just replace with in above snippet. And now, let’s try to integrate this with .

So first, you are maybe asking what is completor.vim? In short it is some sort of async completion thingy for Vim. Faster completion, no lags and stuff. But this is not why I chose it. I chose it because it have awesome completion function that I can wrap in FZF. This completion function is deciding if it will run file completion, buffer completion, it’s internal async completion for supported languages or omnicompletion. So, that is why. So, just go and get it. Or just keep using omnifunc.

So, thanks to previous awesome impletentation of all we need to do is adjust :

is internal completion function of that is returning results in same format as , but they are context sensitive (as I wrote earlier).

Now, place whatever you want from here to your , and we are done. Yes, we are done, really.

I will try to write more articles about some cool random stuff I am doing with Vim and Tmux (if I will have time) so stay tuned (or not, whatever).

Also, here are my dotfiles that contains everything mentioned in this post and a lot more and here is my .vimrc

EDIT: Updated post with better completion function and with images (woohooo)|||

TLDR: Here is how final result will look like (that small thing at bottom right):