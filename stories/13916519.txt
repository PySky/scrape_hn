This tutorial shows you how build a simple Python application with CockroachDB using a PostgreSQL-compatible driver or ORM. We’ve tested and can recommend the Python psycopg2 driver and the SQLAlchemy ORM, so those are featured here.

Make sure you have already installed CockroachDB.

To install SQLAlchemy, as well as a CockroachDB Python package that accounts for some minor differences between CockroachDB and PostgreSQL, run the following command:

For other ways to install SQLAlchemy, see the official documentation.

For the purpose of this tutorial, you need only one CockroachDB node running in insecure mode:

But as you might’ve seen in the Start a Local Cluster tutorial, it’s incredibly easy to start and join addition nodes, if you want to simulate a real cluster:

As the user, use the command to create a new user, .

As the user, use the built-in SQL client to create a database.

Then grant privileges to the user

The following code uses the SQLAlchemy ORM to map Python-specific objects to SQL operations. Specifically, creates an table based on the Account class, inserts rows into the table, and selects from the table so that balances can be printed. Also note that the cockroachdb python package installed earlier is triggered by the prefix in the engine URL.

Copy the code or download it directly.

The output should be:

To verify that the table and rows were created successfully, you can again use the built-in SQL client:

Read more about using the SQLAlchemy ORM, or check out a more realistic implementation of SQLAlchemy with CockroachDB in our repository.

You might also be interested in using a local cluster to explore the following core CockroachDB features:|||

Learn how to use CockroachDB from a simple Python application with the SQLAlchemy ORM.