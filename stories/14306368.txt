While building a web-crawler application, we faced a lot of issue of redirection. To solve this issue, we built a custom script, which can handle multiple redirection and give us final redirected url. Since there was no obvious library available on RubyGems which could be utilized to solve this issue, we decided to build a gem final_redirect_url and share it with everyone, so that everyone can benefit from it.

Add following lines to your application Gemfile and execute bundle install

Alternatively, you can install this gem using following command:

You can find the detailed documentation on our github page.

Here is the core of the logic:

Let’s try to understand the basic components of the final_redirect_url.

To check if a supplied URL is a valid URL, we’re using Ruby URI Module.

The above regex match will return nil if the URL is invalid.

Since a URL can have multiple redirection, we have a recursive method get_final_redirect_url, which by default will check for maximum of 10 redirections. You can provide an optional argument to go even deeper in case redirection exceeds the default 10. Lines 27–41 implements this method.

From line 43–49, we’re reconstructing the URL string using different components of a URI. It’ll ensure the right scheme, host, query string and fragment of the URL.

The whole logic is encapsulated to catch any kind of error. The lines 15–16 will ensure that you get to see the exception in your logs.

We do love perfection, but at the same time, we strongly believe in not doing over-engineering unless it’s really required. Thus gem may not cover unforeseen edge-cases, but it served our purpose to fulfill the need of current application we’re building.|||

While building a web-crawler application, we faced a lot of issue of redirection. To solve this issue, we built a custom script, which can handle multiple redirection and give us final redirected url…