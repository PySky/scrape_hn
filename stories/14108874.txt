Typescript is a powerful way to build applications. It offers type checking to catch errors before they make it to the browser. On top of just utilizing typescript to catch bugs, it's still important to make sure Typescript code is tested.

Facebook released a testing framework called Jest a while ago as that contains many built in features. You can kind of compare Jest to Mocha in saying that Jest is to Mocha as Angular is to React. Jest is an entire test framework with built in mocking, code coverage, watching, assertions, etc.

With a bit of config, you can easily begin testing Typescript with Jest, including setting up Mocks for testing classes.

Let's say we want to create an ...

Here we're implementing an interface called ...

This will allow us to implement any kind of communication interface, in the case we'll one for sending emails with ...

So, in a unit test we want to test and make sure that when we create an that it will call the 's send method...

First of all, let's get Jest setup.

Then you need to add a few things to the ...

Now we'll be able to start writing some tests!

First of all, we'll create a Mock implementation of an Email communicator with...

Then create a couple of instances and call the method...

Lastly, we'll make sure that by calling calls the mock implementation of the ...

Hopefully that will help anyone looking to get started with Jest and Typescript!|||

Typescript is a powerful way to build applications. Combining Jest and Typescript can help prevent many different types of bugs in applications.