There’s been a recent surge of interest in static websites because they offer benefits including fast page loads and security.  And a new term for this new way of building websites, coined by the folks at Netlify, is JAMstack(not to be confused with the most addicting way to play the electric guitar). If you are new to this concept, the JAMstack is comprised of a JavaScript-powered frontend for page interactions (J), APIs to connect to various APIs to get 3rd party functionality (A) and plain old Markup (HTML) which gets deployed to your instance (M).

Smashing Magazine has recently raved about creating their new JAMstack website and is currently undergoing a massive renovation of their existing web properties.  They are drop-kicking their bloated, pain-point-prone WordPress monolith that they currently maintain in favor of a JAMStack-powered website with help from Netlify and the Netlify Open-Source CMS.





In this article, I will show you how you can use Cosmic JS to deploy your own JAMstack website in just a few clicks.  When you JAM with Cosmic, you not only get the benefit of a fast, optimized static website, but your content is also available in the Cosmic JS API.  This gives other applications easy access to your content which could include landing pages, microsites, or native iOS and Android applications.





1. Install the Cosmic JS Static Website.

2. View the code on GitHub to see how the app is built.

3. Deploy your app to the Cosmic App Server by going to Your Bucket > Deploy Web App.

4. Set up your Webhooks located in Your Bucket > Webhooks.





We’re going to install the Static Website App available in the Cosmic JS App Store.  As you do this, you should also fork the repo to your own repository on GitHub.  This way you can make all the customizations you need to JAM in your own way.

Let’s take a look at how this application is put together.  To follow along, go to the GitHub repo.  Here is the app.js file:

First we start with a Node.js application that includes a few routes:

Next let's take a look at how the site is built.

This file holds all the magic, let's unpack what's happening here:

1. We're using Metalsmith to build our website files.  There's other build tools for this, but this is the best one (IMO) for JavaScript-built static sites.

2. The folder is created as a temporary place for our new build.  This is so we don't get any down-time from users currently on the website.

3. Next we will get all Objects in our Cosmic JS Bucket using the Cosmic JS NPM Module and method 

4. Then we will parse from our response all Pages.  Then begin a loop to create a new static page for each Page Object.

5. Each Page Object will then be passed to Metalsmith to build our Page.

6. After Metalsmith is done Jamming out our Markup to the folder, the build folder is deleted.

7. Without blinking an eye the new folder is created with the fresh build.

And that's it!  Your Cosmic JS content is now available in static form in JAMstack generated HTML files.  PLUS you have access to all of your content via the Cosmic JS API.  Also if you need someone who's not versed in Markdown to edit content, they can easily edit content via the WYSIWYG editors in the Cosmic JS Dashboard.





Cosmic JS offers a great way to automatically rebuild your JAMstack static website on every content edit with Webhooks.  Setting up webhooks is easy.  Just go to Your Bucket > Dashboard > Webhooks and set the POST to the endpoint and action of your choice. In this example, you can set your Webhook to POST to .



In this article we talked about a recent rebrand of static websites (Jamming sounds a lot more fun than static website building).  We talked about how you can install a JAMstack-enabled website in a few clicks using the Cosmic JS Static Website App. And we showed you how to automatically rebuild your website whenever content is changed via Cosmic JS Webhooks.  If you have any questions, join our Slack channel and reach out on Twitter.|||

Cosmic JS is a cloud-hosted content platform that offers a flexible and intuitive CMS API.  Build websites and applications with more freedom and manage content easier. Get started for Free.