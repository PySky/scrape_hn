It is far more professional to have an email address with your own domain name, e.g. firstname@surname.tld, rather than one offered by a free email provider. Sure, you could buy a custom email address from one of the several hosting companies out there, but how about setting up your own email server?

Whether you feel you're spending too much for your custom email address, or you're worried about your privacy, or just for the sake of it, it is worth considering having your own email server. You just need to either have an unused computer at home/office with a static IP address, or buy a cheap VPS from your favorite hosting provider.

In this tutorial, you will learn how to set up an email server on Ubuntu. The email server will be based on the following programs:

If you are planning to set up your mail server on a new VPS, I recommend that you read my post, Your First Steps with Your Brand New VPS Server, before following this tutorial. Also, you will probably notice that for encryption I use the default snakeoil SSL certificate. If you want to create a custom self-signed certificate, you can find my tutorial here.

The steps below have been successfully tested on Ubuntu 14.04.

Either start a root session with , or add before all the following commands.

The command allows you to manually execute SQL statements against the specified SQLite database. If the database does not exist, it will be created.

First, create tables for the that have a mailbox account, the that the mail server will handle, and the email . Copy-paste the following commands in the SQLite shell, and press Enter: Assuming that your registered domain is , insert a new row in the table by copy-pasting the command below, and press Enter: Each user must have a password. It is always a good practice to hash passwords stored in a database, in case the database is compromised. If a user's password is , you can hash it using Dovecot's password hash generator: Assuming that you want to create a new mailbox account with email address and a KB quota, you should insert a new row in the table as shown below. The user's password must be hashed, so make sure to replace with the exact output of the command in Step 3: You can also create aliases to forward messages from an email address to a mailbox account. The alias is required for all email servers, but you can add your own aliases as well:

Press to exit the SQLite shell, and then change your database permissions so that it is only accessible by root:

Before proceeding to configuring Postfix, create a new Unix user account for Postfix to use when writing to virtual mailbox files:

In the following configuration, it is assumed that your mail server hostname is , so replace as appropriate. To avoid problems, you should make sure that the hostname matches the one in .

Restart Postfix for changes to take effect:

Modify user permissions, and restart Dovecot for changes to take effect:

You should now be able to read and send emails from your server using an email client, such as Thunderbird. Create a new mail account using the settings below:

In case of troubleshooting, you should check the log file at to see if any errors have been reported by Postfix/Dovecot.

That's it! You are now a postmaster! If you feel adventurous and you want to further customize your mail server, you can have a look at the Postfix and Dovecot documentations.|||

