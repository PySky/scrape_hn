I was thinking about the various languages I have learned over the years and why. Here they are in rough order. I don't think there's a great insight here, just a personal reflection.Around age 6, I was sent to the Cavendish Laboratory at Cambridge University to a sort of camp for bright kids. I asked a man (undoubtedly a professor or lecturer from Cambridge) to tell me how a computer worked. This was the early 1970s and I'd only seen computers on television.The man sat down with a piece of paper and drew a long strip of boxes and described a machine that looks at the boxes and decides what to do next. He also showed me a language for programming this strip-of-boxes-machine.He had described both a Turing machine and also a register machine and I was absolutely fascinated: computers were so simple!My first hands-on time with a computer came via a teletype that no one seemed to touch. It was kept in the corner of a room at school and connected to some far away machine. But it was possible to program it in FORTRAN. I don't recall ever being told what machine I was typing to, only that it was possible to prepare simple programs in FORTRAN. I mostly wrote some simple mathematical programs (such as calculating the value of pi or factorials). Magic! (when it worked).Pretty sure is was an ASR 33 Teletype like this:The school entered the 'home computer' era with a Sharp MZ80K which I spent hours in front of first learning its BASIC so that I could write simple programs (including something called STATPAC which was a package for doing statistics: think, really, really simple R).That machine still works and runs my old programs. The school was kind enough to let me take this computer home during the holidays. This was the first machine I knew inside out.But to get any power from the machine it was necessary to learn Z80 assembly language (and the machine code since I didn't have an assembler to everything was typed in as opcodes hidden inside REM statements in BASIC programs). This didn't seem hard at all, more like a crazy game where the moves are limited and you have to work with them. I obtained a copy of Rodnay Zacks' Programming the Z80 at great cost and devoured it.At some point the school got a network of Research Machines 480Z machines and on these we were able to program in BASIC and machine code. We later got an assembler and I wrote some quite large assembly language programs, such as one for scooping up network packets and analyzing them, another for spying on disk access and a complete 'network management' system.But PASCAL was a bit of a revelation because suddenly programs that had been structured with subroutines (GOSUB or CALL) and rough and ready data structures were no structured with actual functions that operated on well-defined data. And there was a compiler.I had a BBC Micro Model B (in fact I still do ) and it, of course, I programmed in BASIC and 6502 assembly language, but FORTH suddenly became popular and I figured I had to try it out since this whole 'stack-based programming' thing seemed interesting. And FORTH on the BBC Micro was fast. It came on a ROM that was plugged into an expansion port.I wrote a lot of fun programs in FORTH but it ended up feeling like an academic exercise. Fun but never going to really catch on. Of course, that's before I got to university and wrote things using Common LISP, ML and Occam :-)|||

