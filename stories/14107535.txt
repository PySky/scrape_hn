SuperKVC is a light-weight injection framework to convert JSON to Model. SuperKVC has its own config DSL which provides a chainable way of describing your injection config concise and readable. SuperKVC supports iOS and macOS.

Samples are at the SuperKVCDemo project in the SuperKVC workspace. There are three sample to show shallow and deep injection configurations.

Apple provide KVC for us to inject dictionary to model, but it cannot solve problems below.

KVC simplely mapping the dictionary key to model key, but many times their name are not the same. For example, is a keyword in Objective-C while not a keyword in backend, so many network interface response as a key, in Objective-C model, we may use , so cannot mapping to , if we use KVC in this time, the app will crash because there are not a property in the model. KVC cannot handle data format convert, for example, our has a property , while the network interface response a , we need to use to convert, but KVC cannot config a converter, so it inject a to a property. KVC cannot handle deep injection, for example, our has a property , while the network interface response a , we need to inject the dictionary to card property, but KVC only inject one level.

Think about we have the response and the model structure below.

Now we need to convert json to instance, please note that the response key is called in the model, and the property type is not a . By using SuperKVC, you even not need to create the model, tell the injector your config, and it returns what you want.

The config descriptions are below.

Think about we have another json below.

We needn't to modify any codes to get a array.

Think about we have a two level json.

And our class structures are below.

To make a deep injection, we need to use the converter to nested call injector on the property. To be efficient, we create the out of the block and resue it.

Please note that we use method in the nested call, it can handle injector reuse for class to improve execution efficiency.

The SuperKVC framework cached reflection result and injector configuration in memory using a 10 limit LRU(NSCache), you can change the limit or clear cache by the property and the method in singleton.|||

SuperKVC - Cocoa Model Framework with a simplified, chainable and expressive syntax. 支持链式编程的JSON转模型框架。