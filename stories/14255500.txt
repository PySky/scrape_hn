Containers were first used in the software industry as early as 2001. Ever since the technology has been growing and evolving. Over the last couple of years, containers usage has skyrocketed as more and more organizations see how containers can improve their day-to-day workflow and how cost-effective the technology is.

Today we’ll take a look at a few startups that have seized on this modern, innovative technology and are extending its use cases to solve specialized pains and needs.

Diamanti is a rising star in the industry. It addresses two main problems users face when using containers:

Their solution enforces network and storage management across DevOps or domain owners, as well as supplying performance monitoring for compute, network, and storage. It comes with native Kubernetes and Docker interfaces, no code changes required. One of its nicer features, which is not apparent to Docker users, is the deployment of Docker containers with consistent access to network and storage.

Aqua Security addresses container security issues. As containers (Docker and other formats) are rapidly being adopted for enterprise deployments, they present unique security challenges due to the scale, agility and open nature of container operating environments. The lack of visibility into container activity, isolating containers from each other, protecting kernel integrity, and maintaining granular user and network access controls are just some of the issues that need to be addressed in containerized applications. Therefore, Aqua Security blocks all security holes using a dedicated agent deployed on each and every container instance. This agent communicates with the central Aqua Security console which enforces defined security restraints. Aqua Security also helps to implement DevSecOps into the pipeline, working seamlessly with both cloud platforms and on-prem environments. For runtime environments, AquaSec created monitoring capabilities for all containers’ activities, helping to detect and prevent exploits and malicious usage of the software in real-time.

Portworx is a tool designed to solve the “big five” challenges faced by DevOps engineers in  production environments utilizing containers and stateful services:

Portworx is situated between the infrastructure provider, whether it’s Amazon, Azure, Google Cloud, or an on-prem server, and the scheduler tool, and helps with the process of automating deployment and maintenance of data services on containers. According to one of the largest users of Portworx, Lufthansa Systems—“With Portworx …containers have fewer moving parts, fewer commands to understand, and fewer things to break.”

Rancher, by Rancher Labs, is an open-source product designed to make users comfortable with containers in production. The tool does almost everything in regards to deployment and operation and works to minimize business risks. As with the other organizations, Rancher has created a unique OS, based on Linux, to simplify the container environment and allow a fast boot process, minimize footprints, and easily integrate and automate using the management tool.

MinuteLab is a standout container service from our perspective. It focuses on creating consistent lab environments between dev-test-prod. Particularly in microservice architectures ensuring consistency is a headache but not ensuring consistency can result in a migraine if you delivery code into an environment it wasn’t tested for correctly. On top of that, they also address issues like multi-tenancy and parallelism in testing which can reduce bottlenecks between builds and decrease duration significantly.

It is pretty much accepted by this point that containers are essential to modern software development. Containers are lightweight, swift and easy-to-manage solutions, and any organization deciding to use this technology can expect significant efficiency and cost improvements. Containers are perfectly aligned with on going adoption of DevOps and agile dev and testing, so they have that going for them. But, one of the final hurdles that containers need to overcome is making its flexibility safe, both in terms of security and quality, for companies with a low tolerance for risk, especially enterprises.

P.S. We’ll be writing quite a bit about containers in the next few blog posts. So if you are interested to see how we are using containers in our dev-test process and how it’s improved our overall quality make sure to subscribe to our blog above.|||

Let's take a look at a few container startups that have seized on this technology and extended its use cases to solve specialized pains and needs.