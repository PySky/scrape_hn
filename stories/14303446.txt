At the highest level, our goal is to stay focused on 0ur business and spend the least amount of money and time possible on our ops infrastructure while ensuring performance, availability, and future scalability. We also care about streamlining the developer experience to improve efficiency and morale.

I’m a huge believer in having specific and measurable operational metrics that commit me to what I will do and — just as important — what I won’t do. Any metric, even a rough educated guess or conservative number, is better than none at all. For a typical web startup here’s where I’d start drawing lines in the sand:

Regardless of which tools you pick and how much of your infrastructure you outsource, do not underestimate the time it will take to get everything up and running. I’d budget 5+ days to get your core monitoring-metrics-logging suite in order, plus another 5+ days for your deployment system and troubleshooting.

It may seem like a big distraction to build deployment, monitoring, metrics, and other tools. This infrastructure doesn’t seem to add direct value so it’s tempting to relegate these tasks to the future. Indeed, there are plenty of companies who make good money regardless of their messy internals.

While a weak ops infrastructure won’t kill your company, it imposes a pervasive and costly tax:

It’s just too expensive to skimp on infrastructure. Moreover, DevOps tools aren’t just about the nuts-and-bolts of keeping a system running: they promote an ethos that you care about your team spending its time effectively and your customers having a great experience. A company that embraces ops from day 1 is planting the seeds for a healthier culture in the long term.

In the next post, I’ll show how you can start with a basic suite of low-cost tools to assemble a surprisingly powerful and solid foundation.|||

In this series of three posts I’ll discuss the operations setup for an early-stage startup; and the things that can be punted. This is based on my experiences at several startups I’ve co-founded, as…