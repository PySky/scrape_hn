You gotta be kidding me. What’s wrong with you? Hope your employee does not see this thread on Quora, or he/she will have all the rights to show you the finger and leave. I would… As others have suggested, this is a teachable moment, and you failed to notice that so while the developer made a DRY mistake you clearly failed to be a mentor and in my book you’re the one who loses. Sounds harsh? Well, you wanted to fire your employee, so admonishing you a bit in public is way less harsh than your approach.

Now, on a less harsh note…

Your developer’s mistake is an incredibly common one and at times it’s not even a mistake. I don’t have much context for the code you are referring to, but 420 extra lines will definitely not create more than one millisecond delay in execution or loading time, as it refers to mostly the size of the file than anything else. If the code does what it’s supposed to do, is verbose enough (I suspect it is), and does not generate any quantifiable bottlenecks, then technically his/her code is correct. I took this picture just this morning:

It’s from a very well-respected book in the software industry: Eloquent JavaScript by Marijn Haverbeke. The general misconception is that the shorter the amount and line of code, the more efficient it is. That’s a lie. A recursive function for instance is 10 times slower than a loop. Counting the number of lines makes you seem just as inexperienced as he/she is, as that alone means nothing.

You also need to consider time. For instance if time is of the essence I will not bother refactoring code to make sure I kill three birds with one function, but I will copy paste the initial function and call it a day. You know why? Because I know that the initial function worked and while I am duplicating code (and no, it’s definitely not good practice), I have 15 minutes available, and I am not going to take any risks, as any refactoring would result in sending things back to QA to re-test for what has already been tested for, so instead of saving time, I am only adding to it. Nope. Ain’t gonna be the idiot who gets blamed for late delivery because never ever have I seen a manager take responsibility for absurd deadlines.

Finally, 6 months of experience you say. In a framework. Not sure what framework you’re referring to, but in my experience spending 6 months with Angular for instance doesn’t make anyone an expert, because to be frank you don’t only write Angular code and 6 months is not 6 months, it’s on average (in Ireland if you work 7.5h/day) 945 hours. In my experience, just going through a course requires 45 hours of that, so you’re left with 900. Take off another 100 because people go to the loo, they procrastinate, etc, and you’re left with 800 hours of actual work, out of which I bet around 400 hours are spent writing HTML and CSS. Again, I don’t know what language this code of yours was written in, what framework, but the moral of the story is regardless, that 6 months won’t give you an expert, but a junior, and it’s part your responsibility to turn him/her into the expert you wished you had.|||

