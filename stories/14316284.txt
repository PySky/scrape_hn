Please refer to wiki > Installation in further details. Here is the some examples for installing.

Attention: With this way, please install tmux manually.

Add this line to in case of zplug. Zsh-completion for command is also available. See Wiki > Installation.

Attention: With this way, please install tmux manually.

Two commands and will be installed. They are actually same commands ( is alias of ). Use one you like.

You will get the screen like this.

Oh, you are not familiar with key bindings of tmux? Don't worry. Just type and "Enter" key to close the panes.

As shown above, input from keyboard is synchronized within multiple panes by default.

option allows to execute original command line. For example, try this one.

You will get the screen like this.

command which generates sequencial numbers is specified by . As you can see, is replaced each arguments. This placeholder can be changed by option like this.

is used as the default placeholder when no commands is specified by option.

Brace expansion given by Bash or Zsh is very useful to generate sequential numbers or alphabetical characters.

Basic usages are shown above. Before showing further usages, it is good to know about the conditional behavior of command.

When the tmux is not being opened and command is executed on the normal terminal, the command's behavior is supposed to be that.

The command newly creates a tmux session and new window on the session. In addition, it separates the window into multiple panes. Finally, the session will be attached.

When the tmux is already being opened and command is executed on the existing tmux session, the command's behavior is supposed to be that.

The command newly creates a window on the exisging active session. In addition, it separates the window into multiple panes. Finally, the window will be active window.

When the tmux is already being opened and command is executed on the tmux (which means Normal mode2). In addition, when the command is accepting standard input ( the command followed by any other commands and pipe ), the command's behavior will be special one called "Pipe mode". It will be introduced Pipe mode section.

The result is like this.

This example is the one having Brace expansion.

The result is like this.

Hmm? you want to monitor those files through the SSH? Just do it like this.

option is helpful to ignore the alert message from OpenSSH. It is not required to answer yes/no question against it. Use it if you are fully sure that destination host is reliable one.

This is same as below.

To disable the synchronization of keyboad input within panes, use (or ) option. The input is applied to only one of them. Set in order to re-enable synchronization.

The result is like this.

In addition, log files will be created.

File name format for log file can be specified with option. Please refer to .

Attention: Logging feature does not work properly with specific tmux version. Please refer to wiki > Known Bugs in further details.

option executes given argument as it is.

Then the result will be like this.

You will get the same result with this command line.

To change the layout of panes, put an argument followed by option. This is the example that lines up some panes vertically.

For example, to line up panes vertically, put (it is correspoinding to in tmux manual).

It would be like this.

With same way, ( ), ( ) and ( ) are available. Please refer to also.

file is automatically created when runs. Importing this socket file, different users can share their screens each other. Off course, you can specify the socket file name as you like with option.

... then, user1 and user2 can share their screen each other.

As mentioned above, command creates a new window when it starts to run on the tmux session. Utilizing this behavior, it is possible to create multiple windows easily.

Result will be this.

Can you guess why such the phenomenon happenes? Running this command, such the window is supposed to be created at first.

When this command is executed on the tmux session, it will create new window which separated into two panes like below. And as you can see, statement will close the pane itself after the separation.

Same phenomenon will be occurred on upper right and bottom panes. The window which had three statements is closed itself. Finally, just the three windows will be left.

Pipe mode is activated when command is accepting standard input. With this mode, behaves like UNIX .

With this command line, the output would be like this.

The result will be like this.

Off-course, and options are available.

However, giving both and any arguments causes error. Because the command cannot decide which argument should be used.

For example, let's prepare file like this.

The results would be like this.

Pipe mode allows you to make combinations between tmux and other general UNIX commands like this.

Please check out the CONTRIBUTING about how to proceed.

Please note the following points before running the test.

The scripts is available as open source under the terms of the MIT License.|||

tmux-xpanes - Ultimate terminal divider powered by tmux.