As software becomes more important in the world, the practice and art of software is becoming more important too. A lot has been written about how individual engineers can be more effective. We've noticed that much less has been written about how software engineering teams can be more effective.

Groups of humans building software together vary enormously in their productivity. Some manage to be vastly more than the sum of their parts while others struggle to reach even half of that. The mechanics of how we work together determine not only the output of the team but also the satisfaction, enjoyment, and growth of the individuals.

Despite their importance, we've noticed our practices for working together tend to be tribally transmitted in ad hoc ways: based on experiences with different approaches that people have had at different companies or on the occasional blog post that someone has read. We wondered if something better was possible.

And so we've decided to start Increment, a software engineering magazine dedicated to providing practical and useful insight into what effective teams are doing so that the rest of us can learn from them more quickly. We plan to focus on the ostensibly small things that are actually big things: testing, deployment, development tools, code review. Team practices are very mutable; if we can help accelerate the transmission of good ideas even a little bit, that could be a big deal across the industry.

Susan Fowler joined Stripe to found and edit Increment and the first issue launches today. It's focused on on-call practices across the industry. Who gets paged? How is incident response coordinated? How should your approach look differently at 10 people versus 1,000? The issue is based on interviews with dozens of experts across the industry and includes data from Google, Facebook, Amazon, Netflix, and more. You should go read the whole thing.

Increment will be published quarterly. If you'd like to submit a piece, please drop us a note. And if you've ideas for topics that you'd like to see addressed in a future issue, we'd love to hear that, too.|||

As software becomes more important in the world, the practice and art of software is becoming more important too. A lot has been written about how individual engineers can be more effective. We've noticed that much less has been written about how software engineering teams can be more effective.