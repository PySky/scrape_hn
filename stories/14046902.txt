CHR.js is a just-in-time (JIT) compiler for Constraint Handling Rules, embedded in JavaScript. For better runtime performance it supports ahead-of-time (AOT) compilation too, either by its command line tool or babel-plugin-chr, a plugin for Babel.

The online version at chrjs.net is the easiest way to generate a constraint solver. Just enter your Constraint Handling Rules, try adding some constraints, and download the generated solver code.

The following CHR rule generates all fibonacci numbers upto a given index as constraints of the form .

The CHR rule can be used in JavaScript after declaring it via the function, like in this example:

More example CHR scripts are provided at chrjs.net.

Defining CHR rules in this way, they are compiled at runtime, that means we use a just-in-time (JIT) compilation. However, for performance reasons, we encourage the use of an ahead-of-time (AOT) compiler as presented in the next section.

The easiest way to precompile your JavaScript source code with embedded Constraint Handling Rules is by using babel-plugin-chr, a plugin for Babel:

Functions ecapsulated in are evaluated at rule application, as for JIT compilation too.

CHR.js provides a REPL (Read-eval-print loop) to use it interactively with the command line. The REPL can be started by calling from within the project's root directory. Then it is possible to directly define rules and call constraints:

The REPL can also be used programmatically by calling .

CHR.js was realized as a part of my Master Thesis in Computer Science at the University of Ulm, Germany. Its Project Report for a prototype implementation (versions ) with additional information about its architecture can be found online: https://fnogatz.github.io/paper-now-chrjs/.

The implementation is based on the compilation scheme presented in the paper CHR for imperative host languages (2008; Peter Van Weert, Pieter Wuille, Tom Schrijvers, Bart Demoen). As of yet basically none of the mentioned optimizations have been implemented.|||

CHR.js - Compile and run Constraint Handling Rules (CHR) in JavaScript