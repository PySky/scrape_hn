► Write Clean & Beautiful Python: https://dbader.org/pytricks-book



The key to understanding Python's list comprehensions is that they’re just for-loops over a collection expressed in a more terse and compact syntax.



One of my favorite features in Python are list comprehensions. They can seem a bit arcane at first but when you break them down they are actually a very simple construct.



This video tutorial breaks down Python list comprehensions for you step by step. See how Python's comprehensions can be transformed from and to equivalent "for"-loops so you'll know exactly what's going on behind the scenes.



In the video I also discuss when to use list comprehensions in your own Python programs and when not to. Basically, the caveat to Python’s comprehensions is this—as you get more proficient at using them it becomes easier and easier to write code that’s difficult to read. If you’re not careful you might have to deal with monstrous list, set, dict comprehensions soon. Too much of a good thing is usually a bad thing.



To deepen your learning also check out this longer tutorial article I wrote on Python's comprehensions, including dictionary comprehensions and set comprehensions:



- https://dbader.org/blog/list-dict-set...



Also see the following resources for improving your Python skills:



- Python Tricks Email Series: https://dbader.org/python-tricks

- Python Tricks: The Book: https://dbader.org/pytricks-book



* * *



► Subscribe to this channel: https://dbader.org/youtube/

► Weekly Tips for Python Developers: https://dbader.org/newsletter

► Python Articles & Tutorials: https://dbader.org/newsletter|||

► Write Clean & Beautiful Python: https://dbader.org/pytricks-book The key to understanding Python's list comprehensions is that they’re just for-loops over ...