streamy is a set of array operations implemented in a vertical first fashion

Conventionally an operation like would perform 3 iterations, create an after each iteration.

streamy is an attempt to solve it in a different way. With streamy, chaining prepares the execution logic and returns a function allowing a lazy evaluation. streamy linearizes the logic such that it executes the entire operation stack in a single go, creating an array just once.

streamy is a different approach, not necessarily a better approach for every use case. Some of the objectives achieved by streamy which I find desirable are:

You should consider streamy if you handle huge arrays and:

The filter() method creates a new array with all elements that pass the test implemented by the provided function.

The forEach() method executes a provided function once for each array element.

The map() method creates a new array with the results of calling a provided function on every element in this array.

The reduce() method applies a function against an accumulator and each element in the array (from left to right) to reduce it to a single value.

The every() method tests whether all elements in the array pass the test implemented by the provided function.

The fill() method fills all the elements of an array from a start index to an end index with a static value.

The find() method returns the value of the first element in the array that satisfies the provided testing function. Otherwise undefined is returned.

The findIndex() method returns the index of the first element in the array that satisfies the provided testing function. Otherwise -1 is returned.

The join() method joins all elements of an array (or an array-like object) into a string.

The some() method tests whether some element in the array passes the test implemented by the provided function.

Changes the array attached to a streamy object. returns current streamy object so that it can be chained by another modifier function.

Walks through the array returning next results. Every chunk call will return result as long as the cursor is moving. It keeps iterating until next result is obtained. when a negative integer, walks the array reverse. Reverse walking is possible only after the cursor has moved forward at least once.

(optional) skips through that many results in the chosen direction of iteration.

Returns when the iterator cursor has reached the end of iteration. Returns otherwise

Resets the internal cursor to 0. returns current streamy object so that it can be chained by another modifier function.

Walks through the array one result at a time. Every walk call will return one result as long as the cursor is moving. It keeps iterating until next result is obtained. direction(optional), when a negative integer, walks the array reverse. Reverse walking is possible only after the cursor has moved forward at least once.

Questions, problems or suggestions? Please post them on the issue tracker.

You can contribute by forking the project and submitting a pull request. Make sure to run it through the issue-tracker as a feature request before implementing new features. Feel free to contribute

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'Software'), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.|||

streamy is a set of array operations implemented in a vertical first fashion