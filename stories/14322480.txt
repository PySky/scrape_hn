IMDb, a popular online database of films, recently had an extreme case of voting manipulation. A film called The Promise had been screened to the public only three times and yet had amassed thousands of user ratings:

As I write, The Promise is still one month away from release, and has now amassed 145,000 votes on IMDb. Clearly some organised activity is behind this.

IMDb has been around for more than 20 years. That’s enough time to find a solution to voting manipulation. Owned by Amazon, IMDb has the resources they need. That they still have this problem indicates that solving online voter fraud is not simple.

When you let people vote on something, some will try to find a way to manipulate the voting. Usually they want to give their favourite option an artificial lead; sometimes they’ll have financial interest in an article or topic getting to the top of a ranking system; sometimes they’ll manipulate the voting simply to show they can. The higher the stakes, the bigger the problem.

No one has a perfect solution. Even the offline world has this problem. National elections are often followed by accusations of rigged voting. Much money, effort, and technology are expended trying to keep elections for presidents and governments honest.

While you can’t solve the problem, you can minimise it. I’ll now describe several coding tools that are practical for small teams to use.

Hacker News, a social news website focusing on computer science and entrepreneurship, is a popular target for tech product announcements. People have found that a few well-timed “upvotes” from friends and colleagues are enough to get to the coveted front page of Hacker News. Hacker News discourages this, and considers it against their terms of use.

One way that Hacker News fights such voter manipulation is by allowing just one vote per IP address. (That’s according to this blog post). Limiting by IP address is a simple tool but a blunt tool. Typically, all the users from within one office network appear to originate from the same IP address, so this approach is not suitable if there is a valid reason for many votes to come from one organisation.

Limiting by IP address is a good starting point and easy to implement. It is also easy for determined people to circumvent.

A surge in voting an order of magnitude higher than you normally receive is reason for suspicion. What can you do about it? Throttling is what you can do about it. To implement throttling, whenever a vote is received, use one or more rules based on this pattern to decide whether to save the vote:

If we received at least X votes in the last Y minutes, then ignore the vote.

You can throttle votes using multiple rules. For example, you may want to throttle per minute, per hour, and per day, picking reasonable limits for each. For sites with modest traffic, throttling mostly mitigates the problem with voting manipulation. Finding the right parameters is a bit tricky; I believe it is better to be too permissive rather than too restrictive but others might prefer to keep the limits strict.

Allegedly 80% of Reddit’s code is to prevent bots, voting rings, and other vote manipulation. Amongst other techniques, Reddit doesn’t display an accurate tally of upvotes and downvotes. The score you see for a Reddit article is deliberately an approximation of the real score.

A Reddit developer indicated that they use some fuzzing when calculating scores to stymie would-be reverse engineers of their algorithms.

A disconnect between voting and results can discourage opportunistic vote manipulation. Other ways to achieve this include:

As a companion to using the other techniques described in this article, you may choose to ignore some votes, but show the user that the votes were accepted. This is similar to the “shadow banning” technique popular amongst moderators of online forums. With vote ignoring you record all votes in the database, but mark only some of them as valid. Users see a tally of all valid votes plus the votes they think they made.

The purpose of this technique is to stop users getting feedback that their attempted manipulation failed. If they don’t know they failed, they won’t bother making another attempt.

We handle voting manipulation via a combination of techniques. Currently these are site-wide limitations, but we do intend to make them customisable per product. Some things we do:

One mitigation we don’t currently offer is forcing users to go through a signup process. Instead we prefer to offer a semi-anonymous voting system. We do this because:

We believe our system works, but we’re open to improvements. We’ll continue to monitor the way people use our site, and make changes to our anti-manipulation algorithms.|||

IMDb, a popular online database of information related to films, recently had an extreme case of voting manipulation. After having been screened to the public only three times, The Promise amassed…