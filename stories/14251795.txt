Today, we are announcing the general availability of the .NET Framework 4.7. The .NET Framework 4.7 was released as part of Windows 10 Creators Update a month ago. You can now install the .NET Framework 4.7 on other versions of Windows.

You can download the .NET Framework 4.7:

The .NET Framework 4.7 includes improvements in several areas:

Please see the Announcing the .NET Framework 4.7 blog post to learn more about each of these improvements.

You can see the complete list of improvements in the .NET Framework 4.7 release notes.

The .NET Framework 4.7 is supported on the following Windows versions:

The .NET Framework 4.7 is supported on the following Windows Server versions:

The .NET Framework 4.7 now uses DirectX 11 components for WPF. These components are available on more recent versions of Windows.

You must install an additional DirectX component in order to install the .NET Framework 4.7 on Windows 7 SP1, Windows 2008 R2 SP1 and Windows 2012. The installation includes a single dll that will get added to your system. It will only be used by WPF applications. It is not possible to install the .NET Framework 4.7 without installing this component.

You can install this component for your operating system:

Please see the following for more information: The .NET Framework 4.7 installation is blocked on Windows 7, Windows Server 2008 R2 and Windows Server 2012 because of a missing d3dcompiler update

We’ve had some great questions since publishing this post. Thanks for asking!  Here are the answers:

Will the .NET Framework 4.7 be made available on Windows Update?

Yes. We are working on this now. We expect this to happen within 3 months at the most.

This new DirectX dependency is a surprise and a deployment challenge. Will that get better?

This DirectX component will made available on Windows Update later this month, for all Windows versions supported by .NET Framework 4.7. Within a month of being available, we expect that most Windows machines on the planet will have this component pre-installed. It will also be made available on Microsoft Update Catalog this month, which is useful for large businesses and government customers. We had originally planned to make this component available ahead of the .NET Framework 4.7 release, but various challenges did not allow that to happen.

We did not include this dependency within the .NET Framework installer due to reliability and user experience reasons. The DirectX component and the .NET Framework 4.7 are separate Windows installers. In the case that a reboot was already pending on the system, the DirectX component (needs to be installed first) would be made a pending update while the .NET Framework 4.7 component would not be (only 1 pending update is allowed), requiring the user to manually run the .NET Framework installer after the reboot. The user would not be given clear instructions that they need to do this due to the way this installation technology works. We have a long history with reboot challenges and chose to make .NET Framework a singular component so that it would behave in an intuitive fashion with respect to reboots. As a result, the DirectX component is a pre-requisite not an included component.

Can I use DirectX 11 or 12 with WPF now?

This new DirectX dependency is quite targeted. It does not enable the use of later versions of DirectX with WPF. The feedback on wanting to use later versions of DirectX has been passed on to the WPF team.

Thanks for trying out the .NET Framework 4.7. Please tell us what you think about the release and how it is working for you in your environment. Please share your feedback in the comments below or on GitHub.

For more information on the release, please see Announcing the .NET Framework 4.7 and the .NET Framework 4.7 release notes.|||

A first-hand look from the .NET engineering teams