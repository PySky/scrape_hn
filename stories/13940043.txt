The world of databases is a fascinating topic. It is very diverse. Many of them are extremely complex systems, but there are also very simple ones. There are the general purpose ones, and ones that do only one thing good, but they do it excelent. Despite all of this we tend to pick them just like we order food in a restaurant:

Well, maybe it is time to dig deeper into it?

I’m writing this post in addition to my You are using the wrong database! talk which intention is to show:

Here is where a copy and paste from Wikipedia typically happens, but let’s create a definition based a more look and feel approach and let’s define simple requirements. I divided them into two parts: must-haves and should-haves. Here we go:

Those points are what, for me, defines a database. The core functionalities that make a product a database:

Only three points? Yes, but remember, we are talking about the must haves.

So this is where I put all the theoretical features mumbling? Not exactly, here are my should-haves:

Go on have a guess. What is the simplest database that fulfills all the must-haves and almost all should-haves?

Are You sure You know? Think again, but if You are sure

Did You get it right? Do You believe it? Let’s got through the lists. Must haves:

This post is a preface for a more advanced series covering database mechanics and the variety of database types. If You are interested, subscribe to RSS, or follow on Twitter|||

You almost can't go simpler than key-value databases, but even them are more complex than they seem.