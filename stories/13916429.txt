At this point you will want to create a user to use in deployment. For safety you will not want this user to have any root privileges. If you find that your specific use case needs root privileges I will include how to do that, but generally you will not want to give this user full access to your system.

You should then be able to run and to see if it successfully installed. This may be out of date, and 7.x could be old. Please check to see what the latest version of Node is before you install.

I use Yarn instead of NPM. If you use NPM then you can skip this step.

Yarn install instructions can be found on their website.

To keep things brief here are the directions:

Connecting to github via SSH is a simple process and Github maintains great documentation about how to set it up. Check it out in the link below:

You will need to create an SSH key on your droplet and add it to Github by following those directions. This is necessary not just for the next step, but also because later we will use git to pull down the latest changes to the droplet after the CI passes. Specifically make sure your SSH key is connected to the user that we created earlier.

Now that you’re connected to Github you can clone your repo.

Replace USERNAME with your username and REPOSITORY with the repo you want to clone.

After this you should have your repository cloned onto your droplet. Run to install dependencies and begin running the server. Our build script will only restart the server, not start it. So you must explicitly start it now.

Now that we have everything set up on the droplet we can begin setting up our Continuous Integration and Deployment. For this example I’ve chosen Codeship because it’s free tier offers everything we need to accomplish this.

Sound good? Ok, here’s what to do:

3. Next you need to set up your test commands. This part is really complicated, but don’t worry, you can just paste in the following command:

4. If you made it through that difficult step, go ahead and move on to setting up your deployment settings. Once you’re on that part you’ll see a bunch of options to select, like Amazon S3 and Heroku. We’re going to use a custom script, which is the very last option. That script should look like this:

Take careful note of the single quotes around the second part of the script. Anything in those quotes will be ran inside the droplet. If the ssh connection fails those commands will not run.

We’re almost done. But right now Codeship cannot connect to your droplet in that deploy script we just created.

Head over to your project settings and find “General” where you will find your “SSH public key”. This is the SSH key you need to add to your droplet. Read the following link to learn about how to add an SSH key.

That’s it! Once you push a new commit to your repo Codeship will run your tests and deploy your code!

This was my first time setting up a continuous deployment and integration for Node.js and DigitalOcean. If you know of a better way please feel free to share it in the comments!|||

Continuous Integration and Deployment have become important parts of the software development cycle. It’s important to spend your time creating features, and you don’t want to worry about deploying…