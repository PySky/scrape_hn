You have a lot of options when it comes to broadcasting live video to the Internet. Google, Amazon, Facebook, and others want your content in their ecosystems. But you typically have to choose one because of bandwidth and processing limitations — unless you use Restream.io.

In 2015, Alexander Khuda cofounded Restream.io to give livestreamers a way to send out one video feed that would then get cloned to multiple channels. Using this tech, a typical broadcaster can go live on Twitch, YouTube, Hitbox, and more without having to use extra bandwidth. For online personalities that have a presence on these various video platforms, this is a crucial tool to reach out in real time to their audiences without having to leave anyone out. As we begin 2017 — and with Twitch introducing its IRL category for non-gaming-related content — Restream.io wants to expand its reach to more gamers and every other kind of online video creator.

GamesBeat caught up with Khuda to talk about where Restream.io came from and where its headed in a chat late last year, and you can read that interview right here.

GamesBeat: Tell me what it was like getting to this point.

Alexander Khuda: Since launch, we’ve delivered about five million broadcasts for our users. Right now, we support more than 30 streaming services around the world. We’ve done partnerships with many local streaming services — like VK in Russia, one of the biggest Russian social networks. They just started livestreaming. We’ve also done partnerships with some Chinese streaming services. Right now, we’re working on Periscope implementation.

GamesBeat: Can you run through how the technology functions? It seems like an impossible demand on bandwidth.

Khuda: It’s simple. You stream to us, deliver to us something like three megabits per second, and we redeliver it to a few destinations. All this bandwidth goes through our service. But we don’t handle all the load of the viewership. That load goes to the streaming services. YouTube, for instance, covers it on their own side. For us, it doesn’t matter how many viewers you have at the same time as a streamer because all of that is managed by the streaming services. They distribute the content. But for us, it’s simple. We receive one stream and restream it, on average, to about three destinations.

GamesBeat: So, there’s no magic happening. It’s not that tough to do what you’re doing — or at least not super expensive.

Khuda: It’s much cheaper than doing what a streaming platform does, yes. We’re still in prototype, but we think we’ve done a great job. It’s hard to make this scalable. Right now, for instance, we deliver more than five percent of all live content on YouTube. That’s a thousand concurrent livestreams, which is a huge load for our servers, but we’ve done a great job with our infrastructure.

GamesBeat: Beyond YouTube, how many people are using Restream? How many output streams are you creating?

Khuda: We’ve achieved more than 100,000 registered users. Talking about concurrent live streams per day, it’s hard to count. We deliver around one billion watched minutes per month. As far as how many streams in total, though, I don’t have that information.

GamesBeat: What are the biggest challenges today, then?

Khuda: Right now, we’re trying to integrate with more hardware and software solutions. We’ve already done this with [capture-card company] Elgato. Our idea is to implement to all devices around the world — mobile devices, hardware, software, it doesn’t matter. We want to be the biggest cloud for distributing live streams.

GamesBeat: So, you’re working with software and hardware vendors so that when people boot up their Elgato and go through the documentation, they see Restream is an easy way to reach all these different platforms?

Khuda: Right. It’s a partnership because we help them provide a great feature to their audience, and we get access to their audience. They promote us, and we promote them.

Our idea was to focus on one thing, the streaming option. We try to build smaller features around that. Our idea was to focus on one thing, rather than doing 100 different features simultaneously. That’s our main benefit and value. For Elgato and other encoders, it’s hard to reproduce what we do. They need to have a whole additional team to do that. Instead, it’s easy to create a partnership with us.

We had the idea of implementing to PlayStation and Xbox, by the way, but we haven’t signed any deals there yet.

GamesBeat: Right. But you’re talking to them, trying to see if you can make that work?

Khuda: We’ve tried to reach them. We’ve had conversations. But it’s a very early stage for us. The idea is that we help streaming services as well. We deliver them content — to YouTube or other services like DailyMotion — but we also deliver content from YouTube to Twitch, say. All the streaming services get to generate revenue through advertisement because they put pre-rolls before these videos and so on. We help streamers at the same time because they can multiply their audience and generate more revenue through their brand partnerships.

GamesBeat: Do you have a road map of any of those extra features you’d like to add down the line?

Khuda: Right now, our system consists of three parts. One of them is restreaming, delivering the content. Another is Restream Chat, natively for Windows. We started in the gaming space, and gamers who are streaming are mostly on PC. It’s a very powerful application. It helps streamers communicate with their audience across all streaming services. It’s very useful. So, on the one hand, we deliver the content, and on the other, we receive communications and the streamer has the ability to immediately communicate with their viewers. The third part, which is in development, is our analytics tools. We want to provide features there that could be very useful, allowing streamers to analyze the behavior of their audience. We’re focusing on growth, trying to grow our audience and build our community. We haven’t spent any money on advertising so far. All the users we’ve acquired, they are from social media like Reddit and other streaming communities.

GamesBeat: What are your plans to expand in those three areas in the future?

Khuda: We’re trying to accelerate growth in the next year. We may start offering some premium features like transcoding options. Most streaming services have different requirements for incoming video — different bitrates, things like that. You can stream to Twitch with 3.5 megabits per second if you’re not partnered with Twitch, but YouTube doesn’t have limits. Periscope has a very small resolution, something like five times smaller than Twitch. If you want to deliver the highest quality to every streaming destination, you have to adapt your video to every service. We’ll be providing that feature.

GamesBeat: Yeah, I was wondering if you have to set everything for the lowest common denominator. With Facebook the best you can do is 720p and 30 frames per second. So, you’re saying you’re working on a way to adapt to the best settings for everything I use?

Khuda: Correct, correct. On our side. But honestly, it’s not easy to do. It requires a lot of CPU usage. Right now, we’re trying to figure it out. I hope it will be done within a week or two. The goal is close for us. But we don’t try to plan for years ahead right now.

We’ve been collecting feedback from our users, and we know what we want to achieve. But a clear road map with weekly sprints and things like that, we don’t have that. We have a month or a little more ahead planned but not more. We want to implement for all software solutions everywhere, and we want to continue to improve our service, providing useful features like transcoding and analytics tools. Maybe we’ll come up with more features to help streamers generate revenue. But it’s not something that’s happening in the next six months.|||

You have a lot of options when it comes to broadcasting live video to the Internet. Google, Amazon, Facebook, and others want your content in their ecosystems. But you typically have to choose one because of bandwidth and processing limitations — unless you use Restream.io.