We’re excited to announce Rusoto, an AWS SDK for Rust!

Rust is a systems programming language with many great features. The Rust homepage says:

The short of it: Rust provides performance close to C but with much, much safer memory usage and thread safety. This makes it a natural choice for writing web services. Since hitting 1.0 back in May 2015, the Rust ecosystem has started rapidly expanding. Here at DualSpark, we’re helping out the Rust community by releasing Rusoto.

Rusoto uses AWS API definitions from botocore, the technology underpinning the AWS CLI. Hence the portmanteau: Rust + boto = Rusoto.

Rusoto uses AWS credentials in the standard priority, as outlined in this AWS Security Blog post. This includes IAM profiles, so you don’t need to embed credentials in applications deployed to EC2.

Basic S3 support is also included: creating buckets, uploading object, downloading objects, multi-part uploads for large objects, AWS managed encryption at rest, including AWS KMS and more.

DynamoDB is next on the list of services to support.

At the time of writing, the lastest version of Rusoto, 0.7.0, is available on crates.io and the source is on GitHub at https://github.com/DualSpark/rusoto. It’s licensed under the MIT license - feel free to fork it, make pull requests and help out the Rust community!

DualSpark employees Anthony DiMarco and Matthew Mayer are the forces behind this project.|||

DualSpark provides comprehensive Amazon Web Services (AWS) consulting. We bring modern services, automation and cutting-edge strategy to our clients.