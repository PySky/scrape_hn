connectr is a Rust library and systray/menubar application for controlling and monitoring Spotify Connect devices.

As a library, connectr exposes the official Spotify 'Player' Web API for controlling Spotify Connect devices.

As an application, connectr provides a minimal "systray" application to observe the currently playing track, control Spotify playback, switch playback devices, and start preset playlists. The goal is very low memory usage, so the basic Spotify functionality can always be available without keeping the massive Spotify desktop application resident in memory.

Note: connectr is not an audio playback tool; it's just a remote control. Spotify has not publicly released a library for implementing audio playback with Spotify Connect support. There's a reverse engineering effort, coincidentally also in Rust, at librespot.

Sloppy; this is my first Rust.

The underlying library should be fully cross-platform, though I'm only testing x86_64 Windows and OS X. Let me know if you run it on an ARM; I'd like to know if that works.

Web API Library: Fully functional and pretty stable for the requirements of the connectr menu bar app. Error handling isn't extremely robust, and it doesn't implement retries or exponential backoff, which it should. The Spotify API can, of course, do plenty more than connectr exposes.

No binaries are provided. You must build from source with Cargo.

Create a Spotify application here: https://developer.spotify.com/my-applications Note: Spotify Premium is required to create an application. You must have Premium to use connectr. You must add 'http://127.0.0.1:5432' as a Redirect URI for your application. Copy the Client ID and Client Secret to connectr's configuration file (see below).

Something like this:

You must provide your Spotify application's client ID and secret in connectr's configuration file. This is handled by the script, or can be done manually.

Note: connectr uses if it exists. If it does not exist, connectr will fallback to trying in the directory it is run from. If built as an OS X application, connectr will create on first launch, but will fail to run until you add your Client ID and Secret. The included script can optionally be used to generate ; it will prompt for your Client ID and Secret when run. A template is provided in .

connectr's configuration is read from a regular INI file with these sections:

ex: will show as 'Bakesale' in the menu, and will play the specified Sebadoh album when clicked.

note: this section is auto-generated and auto-updated at runtime|||

connectr - Spotify Connect systray/menubar controller and library, in Rust