I recently migrated my OVH VPS to Alpine Linux. However, OVH doesn’t have any Alpine Linux image, so I had to perform a manual installation from the rescue CD. This post will explain what are the steps to follow to have a fully functional system. It should work with other Cloud providers with minimal tweaking.

Alpine Linux is a lightweight distribution using musl libc, a lightweight alternative to glibc, and openrc as an alternative to systemd maintained by Gentoo developers. It also uses grsec kernel patches and busybox instead of a complete GNU core utilities. It has its own package manager with a very simple packaging format similar to ArchLinux PKGBUILD.

This distribution is not for everyone as it has been stripped down and a lot of things won’t work as expected. For instance, you won’t be able to use out of the box, and will give you a cryptic output. This is of course fixable, but this is not the topic of this post. There is a page to get most of the standard unix tools working.

On the plus side, you will have a working Linux environment able to run any application (web server, database, docker, etc…) with a very small memory and hard drive footprint.

You can find more compelling arguments on this reddit thread.

You will first need to boot your VPS in recovery mode. On the admin page of your VPS, click on Reboot my VPS, and tick the Reboot in rescue mode option.



 This step takes a while (about 5 minutes, and not 2 as they estimate), so you should grab a cup of coffee or do something else. Unless of course you like watching their progress bar that is almost never updated. Once it’s finished, you will receive an email with the parameters to connect to your server via ssh.

The VPS might be formatted in ext3. If that’s the case, I would recommend reformatting it in ext4 as it yields better performance. To do that, you can use the following commands:

If the 64bit feature of the ext4 filesystem is enabled, you will need to disable it as syslinux doesn’t support it. It should not be the case for OVH VPS, but just in case here are the commands to check and disable this feature.

This procedure is mostly inspired from this page of the Alpine Linux wiki: chroot installation. I added some necessary steps to have a fully functional system.

First, you need to choose a mirror from this page. If like mine your VPS is hosted in Europe, the mirror below should be fast enough.

Then, you need to download the binary, Alpine’s package manager. The version variable can be found on this page. For instance, when I wrote this post, it was 2.6.8-r2 for Alpine v3.5 (the latest stable).

Then, you will need to create and copy some files to the newly created system before running chroot. You should replace the branch variable by the latest version of Alpine.

You will also need to mount some pseudo-filesystems.

You are now ready to chroot into your VPS and perform the system setup.

Now, you can do some setup. This step is pretty straightforward, you just have to follow the instructions. It will setup the apk repository, the hostname, the keymap and the timezone of your server.

The interface setup is a bit more tricky. You usually have a address but you also need a gateway for network access, so you cannot use the keyword. Therefore, the script won’t work.

Here is how your file should look like assuming your IP address is . You might notice that it is very similar to the interface setup file of Debian. This is because Alpine is also using ifupdown.

The and options are used to setup and delete the routes when the interface is create and deleted. You should also check the actual address for the gateway with the following command:

You can now install an ssh and ntp server. I used the suggested ones (openssh and chrony).

You will also need to choose a root password.

You can also create some users now. The ssh access is disabled by default for root user, so if you bypass this step don’t forget to enable it.

By default, all the services are disabled, making the system unbootable. You should enable these services as suggested in the wiki.

You will also need those services, which are not mentioned in the Alpine wiki but are enabled when performing the Alpine installation with the CD.

Because we performed a chroot installation, there is no kernel and no bootloader installed. The commands are taken from this wiki page.

Now, you can install the bootloader (syslinux) on your hard drive.

You should also modify the syslinux configuration, especially the filesystem and the variable (to add ext4):

Finally, you should add your root device to the fstab file.

You can now reboot from your OVH interface and enjoy your new lightweight and fully functional Alpine Linux VPS. The first boot might take a while as your ssh key is being created.

While installing a server this way is a bit tedious and not recommended for large scale deployment, you learn a lot about how your system works.

Alpine Linux is a very simple distribution, making a manual installation quite straightforward. Actually, the installation CD only provides scripts to automate this process, and we used some of them (remember the scripts?).

Here are some resources to start with Alpine:|||

