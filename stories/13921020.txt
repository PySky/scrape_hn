Testing a web page is a hell of a journey. One cannot simply hit refresh in the browser locally to see whether things work as expected. Why? Because, when we do so, two aspects tend to be dramatically different:

For this reasons, many developers in the industry need other go-to tools when testing for performance. We are all left with the only solution of going around with different mobile phones and execute our tests on those.

Luckily, the community can count on a great tool called WebPagetest, which is an open source project that offers the possibility to run tests on a different range of devices and network conditions.

Best of all, it is completely free. Yep, you read that right.

It can run speed test from multiple locations around the globe, using real browsers and at real consumer connection speeds (quoting the homepage here). Not only you can choose device, browser and connectivity conditions. You also get awesome performance reporting as a result: a film view of what got painted and what point in time, a breakdown of the network requests, a JavaScript timeline, plus a ton more of information.

On a typical day, I use it as follows:

As you can easily imagine, WebPagetest gives you the possibility to test webpages on a low end device such as the Moto G, on a slow connection, and to record (and possibly compare) both the first view and repeated views. This may be especially useful to see what’s the impact of the browser cache, or of the Service Worker, on your project.

Measuring is just half of the trip though. You should probably know your metrics, and have an auditing process. Feel free to steal mine:|||

Testing a web page is a hell of a journey. One cannot simply hit refresh in the browser locally to see whether things work as expected. Why? Because, when we do so, two aspects tend to be…