tl;dr; Unless you’re Facebook, infinitely scaleable and WordPress don’t often go hand-in-hand, except when we’re involved. Birmingham Hippodrome uses Heroku to serve tens of thousands of requests daily with zero downtime for <$200/month.

As a Ruby developer, personally I’m totally sold on Heroku. Although the dyno prices are higher than one would like, recouping the extra cost through less server administration is usually not too hard.

Although now an officially supported language, running WordPress and PHP on Heroku still feels a bit… odd. Normally we’d boot up an EC2 instance or a DO droplet, install WordPress and go from there but with a recent client, we were faced with the issue of potentially huge traffic spikes with quite little notice. DigitalOcean scaling is great, but far too slow and often requires downtime so it really wasn’t ideal for this use case. To reproduce the required infrastructure on DigitalOcean, we’d need load balancers, huge amounts of redundancy and at least one other box running MySQL so I wondered if running WordPress on Heroku was something that was possible, let alone sensible.

We experimented with booting WordPress on Heroku using the standard PHP interpreter and were generally pleased with the results. It was a bit slower than we would’ve wanted, but it worked pretty much out of the box with little configuration. This was excellent news; we could run WordPress on Heroku and for big spikes in traffic we could just spin up a few more dynos and not worry. Concept proven.

However, there’s a big difference between running a clean install of WordPress in development and running a copy of WordPress with all the plugins, themes and data with hundreds of people clicking around the site at a time on a production environment. We needed more power. Cue HHVM.

HHVM (or HipHop Virtual Machine) is a just-in-time compiler that instead of interpreting PHP on-the-fly, converts PHP code to Assembly and runs that instead. In other words, it’s faster; much faster. Up to 20x faster according to the developers. It also supports WordPress, so we’d be stupid not to try it out and we were not disappointed. It was essentially a drop-in replacement for the PHP interpreter and required a one-line change to our Procfile.

That was it. We were able to merge nginx and HHVM configs with the default configs using the -C and -I switches of the heroku-hhvm-nginx file so we could set things like error reporting levels.

Let’s back up all this hype with some serious numbers:

We’ve been really pleased with the flexibility and power that Heroku and HHVM have given this project on a relatively modest infrastructure budget. I can sleep well at night knowing that the site will remain up.

You can see the beautiful new Birmingham Hippodrome site now.|||

