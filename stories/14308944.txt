This article is an introduction to the query hint overview that appeared in SQL Server 2016 SP1.

There are many different thoughts on using hints in queries: some people say that you should never use them, while others insist on using hints if anything works incorrectly.

I think that a hint is a tool and it can be useful if it is suitable for the case. I use hints when there are two conditions. The first one is that I totally understand the reason for the bad plan, and the second one is that there are no other ways to eliminate this reason.

In addition, it is important to remember that hints may be flexible and non-flexible to limit the optimizer actions. When applicable, it is better to use non-flexible hints. For example, to limit connection types, it is a good idea to use the query hint, rather than a connection hint, as the latter one restricts the order of connections.

There are a lot of query hints. However, we will explore the ones that appeared in SQL Server 2016 SP1 and that can be used with USE HINT. You can get them using the sys.dm_exec_valid_use_hints view. Below, you can find a table of available hints with their short description:

To apply the hint, it is necessary to add USE HINT in the OPTION statement and list one or several hints in brackets:

We used to execute queries with trace flags, rather than using hints. However, to use trace flags, you need to remember what flag number is responsible for, as well as to have SA privileges. Though there is a workaround for the latter one, it is not comfortable.

In my further publication, we will analyze in details the DISABLE_OPTIMIZED_NESTED_LOOP hint.|||

This article describes recommendations for using hints in SQL Server 2016 SP1, including USE HINT in the OPTION statement