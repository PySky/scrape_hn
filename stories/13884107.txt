One of the things that interests me the most about deep learning is how easy it is able to turn up patterns in unusual places. It’s always interesting to see an unexpected way of using deep learning methods for something other than the usual classification tasks. Not that classification isn’t interesting, but there’s far more unlabeled data out there than there is labeled, and it’s always good to see it being put to use.

In this case, I’d like to see if the wikipedia link graph can be used to infer a sort of “concept vector”, a way to lay out concepts in space, much as you’d lay out a library.

What I’d like to do is use to vectorize random walks over the wikipedia link graph. This will hopefully yield vectors that relate the content of pages to each other. Using also means I don’t have to fuss too much by writing my own tool.

You can access the code on github.

For this task, I used a dbpedia dump of wikipedia from the Netherlands. Why that one? Because it’s the smallest wiki-dataset that I could find :). The English one is just too big.

Specifically, I use the one that’s canonicalized to the english page titles, so that when I want to understand what’s going on I don’t need to understand it in Danish. You can download it from dbpedia.org. Look for the ‘ttl’ format, .

Each line looks like this:

This forms the basis for my dataset.

For the model, I simply used gensim’s word2vec implementation, with its default arguments. I also streamed the dataset, because it’s very easy to generate random walks over the dataset. Also note that I used undirected walks. I found directed ones gave worse results.

The results are quite plausible! For example, I can ask about , and I get wrestling related results, like , and . Or I can search for flower:

I tried the positive/negative example, the one that made word2vec famous ( ), but it didn’t really work. For starters, the dataset didn’t have the word for King, but I tried and got nothing of interest.

On the other hand, I did try , and was quite high up the list. And New Zealand is the canada of the south, in many ways. I say this as an Australian.

This worked pretty well! I think its value isn’t in embedding wikipedia, but in embedding other graph-datasets, and embedding them onto a meaningful manifold. In particular, the “similar” query seems to be extremely promising.|||

Background