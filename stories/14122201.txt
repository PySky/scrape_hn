There is support for applications on both Desktop Ubuntu and Ubuntu Touch.

You should have an Ubuntu 16.04 (Xenial Xerus) installation.

If you are going to be developing on a device:

You should have some familiarity with developing on Ubuntu platforms.

Before we can go further, git and node, and node's package manager must be installed.

To start working on a React Native application, the React Native packages for ubuntu need to be published to a local package repository.

And then follow the instruction in ~/src/reactnative-ubuntu/react-native-cli/README.md

Some changes to node-haste are required to detect the Ubuntu platform. Clone the patched repo and publish to the local package repository.

node-haste should be added to the packages section of the Sinopia config file

The last step in preparing for creating our application to install the CLI tools from the local package repository.

Now that React Native has been installed we can get started making an application.

That's it, the skeleton of an application is in place. You can edit ~/src/AwesomeProject/index.ubuntu.js to start developing.

The quick and easy way to get started is to use the react-native CLI tool to build and run the application.

If you have a connected Ubuntu device, you can launch onto the device with

Note; For device builds, the Ubuntu SDK must have been installed as per the instructions below.

Other command line arguments can be passed

To be able to read the list.

Usually we would want to be installing the ubuntu-sdk, which can be done directly, but since this is still in preview, we will just install a raw build environment. The build environment is a chroot provided by the hardworking SDK team, but is not part of the general distribution. We will need to add the SDK team's repository first.

Then we can install all necessary packages.

To build for the device, run the build script through the chroot build environment.

Make sure that the device can be connected to via adb. The device will need to have developer mode enabled, instruction on these topics can be found on the Touch installation page.

Then it is all good to go. Live reload can be activated by passing the --live-reload flag.

Then it is all good to go. Live reload can be activated by passing the --live-reload flag.

If you would like to contribute, or just want a short cut to trying some React Native examples, you can build React Native directly.

Note; you do not need need to add react-native and react-native-cli to the local repository if you are building this way, but you must add node-haste, as per the instructions above.

The examples all follow a similar template, e.g to run the TicTacToe app|||

react-native - A framework for building native apps with React.