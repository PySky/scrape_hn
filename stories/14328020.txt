Serverless computing basically adds another layer of abstraction on top of cloud infrastructure so that the developer doesn’t need to worry about servers, including virtual ones.

This is the first educational conference I’ve attended for many years. I am happy to share some notes and insights from the last two days of great keynotes and technical sessions.

I would start with a warm feedback to the organizers. The A Cloud Guru team, well done. Great conference, you guys did an amazing job.

Here are some TL; DRs, I hope it’ll give you a good overview of the eco-system, and overall messaging from the conference.

This message has repeated itself dozens of times during the conference, every talk started with a slide that presents these 3 simple reasons.

 People that are heavily using Serverless today (Like iRobot, Adobe, Accenture etc..) say it very loud and clear:

Organizations (and mainly Enterprises) realize that developers are the main driver of their business and want to help them to deliver software, faster, to production. Serverless gives the developer an unprecedented capability.

This message also repeated itself many times. It is helpful to know what people are choosing to start from. Many of the speakers mentioned that the mentality has changed.  It’s “Serverless first”, if it can’t run on Serverless they’ll look for other technologies.

We really liked the session presented by Jared Short from Trek10 about building an app E2E including HTML rendering with Lambda and CDN. It was fantastic. Some inspiration from https://dekki.com, which completely runs its UI & Backend without servers.

Tim Wagner, General Manager of AWS Lambda has mentioned that he is very intrigued by , this is where he sees the natural fit for Serverless workloads.

As presented by Jason McGee, VP & CTO, IBM Cloud, IBM analysts say that the Function as a Service (FaaS) market size will grow exponentially (7-10x) by 2021.

 Serverless adoption is moving 10x faster than Container adoption.

 Tim Wagner, General Manager of AWS Lambda has mentioned that AWS sees an impressive trend of Enterprise adoption among AWS Lambda.

One of the ‘hottest’ topics was “Local Debugging”, how can developers test their Functions and see how the CI/CD process will look like.

In the 1st day Keynote, the Azure folks have given a demo of debugging Azure Functions on their local machines via MS Visual Studio in a NodeJS based web service example. The demo was great.

While touring the exhibition hall (tent) we had a conversation with one of the AWS Lambda Engineers:

It seems that Microsoft Azure is very much advanced with their Serverless offering called “Azure Functions“. Their achievements are phenomenal, their roadmap is even more fascinating.

Logic App – is a new Azure Service that connects very well with Azure Functions and lets you integrate apps, data, and devices with a large ecosystem of software as a service and cloud-based connectors that include Salesforce, Office 365, Twitter, Dropbox and Google services.

Logic App can be very useful for creating PoCs very quickly and efficiently.

As an example, The Azure folks have shown a demo of how to create a Functions Flow in less than 10 minutes

The demo worked flawlessly. It was a great demonstration of how you can mix and match, build a lego in few hours and have a live PoC running.

Adobe has discussed during the 1st-day Keynote about how they are using IBM OpenWhisk on multiple Cloud providers (underlying EC2 / Azure Compute and their own data centers)

They have a few open source projects that worth a look, one of them is:

 https://github.com/adobe-apiplatform/openwhisk-github-deployer

From my point of view, the best session was given by Jason McGee, VP and CTO, IBM Cloud Platform.

 Jason has introduced OpenWhisk, IBM Function as a service platform which can be deployed on any cloud (open source) while you can use the enterprise version under “IBM Bluemix”.

It was super interesting to hear about IBM’s initiatives around serverless, how fast they evolve, create community and deliver fully functional and useful product. Great UI, great connection between the API gateway product and the actual Blumix Functions.

 The IBM folks are very proud to talk about the “under the hood” which gives a spectacular view into the actual mechanism that drives serverless and Function as a service, the magic behind. As a developer and DevOps, it is very important to understand how it works, in order for us to build our software better and more suitable for Serverless architecture.

That was a great session, well presented with very strong messaging. Big like.



Guy Podjarny, CEO at Snyk has given a nice talk about security in the Serverless era.

The main discussion points of security @ Serveless were around:

The current monitoring features that the Public Cloud offer are considerably sufficient. You can monitor the number of invocations, application latencies, and to drill down to a specific function and find problems.

Companies like iRobot have discussed the way they handle DLQ (Dead Letter Queue – a queue which gathers the failed Lambda invocations). They have a separate process of monitoring and fixing their failed functions.

Google Cloud Functions catches expectations, console.log() events and sends it to Stack Driver.

The other alternatives are 3rd party monitoring tools that ‘wrap’ your code with some dependency that basically sends monitoring events with response to your application events.

The guys from the Serverless framework asked me “What does Serverless mean to you?”

 It took me less than 5 seconds to answer:

Now,

 Imagine, if you could run functions at spot pricing, on any cloud.|||

