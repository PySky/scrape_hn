A 2004 Journal of System and Software paper by Magne Jorgensen and Karl Halvor Teigen and Kjetil Molokken examined the preferences of bosses for accurate versus overconfident project leaders:

A total of 37 software professionals in a Norwegian organization developing financial and e-commerce applications .. all of them had some experience in project … management.  … were presented with two scenarios. … Assume that you are the manager of a software development project and have asked two developers (D1 and D2) to estimate the most likely effort, minimum effort and maximum effort for the same 5 development tasks.  D1 and D2 have been instructed to be 90% confident (certain) that the actual effort they use is between the minimum and maximum effort.  In Scenario 1, [managers] D1 and D2 have the same actual effort … and make the same estimates of most likely effort.  The only difference is that … D1 has a hit rate of only 3 out of 5 (60%), while D2’s hit rate is 4 our of 5 (80%).

Manager D1 was chosen 35 to 2 as the "preferred developer", and 29 to 1 as the one with more "knowledge of task," even though D2 was chosen 17 to 11 as the one with the most "knowledge of uncertainty."   In Scenario 2, D1 and D2 had the same effort and estimates, but D2 said accurately that he was 60% confident, while D1 said inaccurately that he was 90% confident.    Though D2 was chosen 23 to 3 as having more knowledge of uncertainty, D1 was chosen 15 to 11 as the one with the most knowledge of task.   As one developer explained:

I feel that if I estimate very wide effort [prediction intervals], this will be interpreted as a total lack of competence and has no informative value to the project manager.   I’d rather have fewer actual values inside the minimum-maximum interval, than providing meaningless, wide [prediction intervals].

Thus bosses of software managers take accurate estimates to be a signal of a lack of competence.|||

