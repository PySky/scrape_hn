No, I don’t want to subscribe to your newsletter. No, I don’t want to complete a short survey. And no, I don’t want to become a member. … Is that text in the background? There is content on this page, right? Does the escape key work? Why doesn’t the escape key work? Where’s the close icon? If this is it, why isn’t my cursor changing? (Click.) Am I being redirected? Why am I being redirected?

This is my thought process every time I encounter an unprompted modal window, which is all the time.

The unprompted inline modal window is the biggest setback in Web usability since the pop-up window ad. If you remember, pop-up windows used to be everywhere. The company X10 alone once reached 32% of web users hawking their junk surveillance cameras. But browser vendors saved us from unwanted windows years ago. It’s easy to look back at those years almost fondly. And today, if you disable your browser’s pop-up blocking, you’ll remain relatively unscathed as you traverse the “mainstream” Web. (Just don’t go looking for porn.) Websites simply gave up trying to outmaneuver pop-up blocking tech or reevaluated the blowback of aggravating too many users.

But browsers have yet to redeem us from their annoying inline equivalent, modal windows, and they seem to be multiplying by the day. In some ways, they’re worse. There’s no keyboard shortcut you can use to get rid of them. Users’ frustration is so ubiquitous and intense that it has even inspired its own single-purpose Tumblr, i hate popup modals.

The dilemma is that they exist because they work. Websites get fresh meat for their email campaigns, they collect more user feedback, and they encourage—in the gun-pointed-at-head sense—new user sign-ups. Their unambiguous short-term effects are simply too good to secondguess, and to most digital agencies, a billable hour is a billable hour (first question: “just how dark do you want the background behind the modal to be?”).

The solution seems obvious enough—a browser extension that hides modal windows—but it’s tough. It’s so tough that there are no extensions that solve the problem. This is because there is no single implementation of modal windows. Many are custom-built. To build an effective extension, you’d need a list of all the offending sites, each with their own configuration that specifies how to neuter them. At its most basic, each configuration would specify the query selectors or XPaths that enclose the modals, which would then be hidden. This technique would be similar to how one kind of ad blocking works.

But even this labor-intensive approach wouldn’t be enough. For instance, how do you systematically identify functions that are manipulating default event handlers, such as those that prevent users from clicking “past” the modal? And how do you proactively differentiate between necessary modals, such as those that ask you to confirm an action, and superfluous ones?

The only solution is to unite in changing our behavior. We need to give website operators an ultimatum: Remove the modals, or we leave. And we need to make good on that promise. By closing the browser tab, we can let the bounce rate demand what we as users cannot.|||

No, I don’t want to subscribe to your newsletter. No, I don’t want to complete a short survey. And no, I don’t want to become a member. … Is that text in the background? There is content on this page, right? Does the escape key work? Why doesn’t the escape key work? Where’s the close icon? If this is it, why isn’t my cursor changing? (Click.) Am I being redirected? Why am I being redirected?