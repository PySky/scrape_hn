Offramp is a React library that provides simple routing for your single page applications.

Once all the correct dependencies are imported, just define your routes

To get started, create your file and import what you need depending on which state management library you are using:

We use the Provider API to manage your stores throughout the app so we need to import it:

If you are using MobX, then you'll need to import your stores and put them in a single store object with the routerStore as follows. This allows Offramp to make your router state available throughout the application:

If you are using Redux, we first need to import some utilities from the library:

Then create your store by combining your reducers and pass in the routerReducer:

Routing in Offramp is meant to offer a familiar API and allow you to get your client-side navigation started quickly. To create your routing structure, just define your top level component that will wrap all your routes. Then, to structure your routes, just nest them within the component, and provide each of your routes with the correct component to render.

If you need to support nested routes for your application, just place routes within their immediate parent route component. If any of these children routes need to be an route, just provide an property on the expected index route.

Offramp is meant to provide an easy way to handle any expected data when rendering your component. Just declare in your route paths where you expect a parameter, and Offramp will make sure both the current URL parameters and query parameters are updated and available directly in your store.

If you need to support async hooks on a particular URL path, you first need to create a hooks object in a separate file and import it or define your hooks directly in your file.

Once your hooks are defined you can pass them down into your components as a prop on that route component.

Prior to rendering your component, Offramp will check for the existence of any hooks. If a hook exists, Crossing will execute that function and prevent rendering until that function resolves. This means you no longer need to fetch data in life-cycle methods such as with .

Offramp provides a component to navigate between your different views. When defining your links, pass a property on the component which points to the correct URL path and also a property which contains the links display text.|||

offramp - Simple routing for your single page applications.