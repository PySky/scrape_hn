If you were too slammed to pay attention to WWDC this year, you can get a quick overview of how to build apps for watchOS 2 with the notes below. The Building Watch Apps session from WWDC 2015 is essential for digging in to how development works in watchOS 2. It’s changed significantly from the first version of watchOS, so if you’ve developed for watchOS 1, you’ll need to do things differently for the new version.

If you’re too busy to watch the video, take a few minutes to scan the notes below to get a quick overview of what’s different in watchOS 2 and what you’ll need to do to build apps for the latest version of watchOS.

Your existing iPhone app contains your WatchKit extension and the watch app.

The watch app is comprised of 2 pieces:

Watch app contains storyboard. Layout is significantly different from iOS – there are no Auto Layout constraints. Layout on Watch is entirely flow-based.

WatchKit extension contains interface controllers & any other code we might want to add.

You can configure notification payloads to test in the Simulator.

If you want to create a new iOS Simulator paired with Apple Watch:

Change Watch Interface and Notification Payload in Edit Scheme > Info

 (or you can duplicate the scheme)

You have fine tuned control of:

See Layout and Animation Techniques for WatchKit for more on animation

Glances are templated: upper & lower. You can choose from a list of options for each.

There are four core uses for communication.

APIs are on both platforms, can be used each direction:

See “Introducing Watch Connectivity” for more about these.

You can profile with Instruments just like with iOS apps.

You can send and receive messages to update the iPhone app with what’s visible on Watch.

Pro Tip: Hold Control while clicking on Run to Run without building

You can debug in both the iOS and watchOS simulators at the same time.

Get up to date on Swift with the 5-Part Guide below – and spend your nights and weekends relaxing and enjoying the time off.|||

