The CIMonitor is a place where all your project statuses come together. Check if all tests have passed, and if deployments are successful. All in one overview.

And if that's not enough for you, why not attach some epic hardware that will represent the status of your projects! Attach a traffic light, run marbles when a deployment is successful. The sky is the limit!

To push GitLab build statuses to the CIMonitor, you need to configure a web-hook in GitLab under the project settings. Enter a URL to your running CIMonitor instance ending on . So for example: . Note that there is no support yet for a token, so uncheck that option.

With build statuses checked, the CIMonitor should fill up with all your builds!

To add a status module to your application, you need to provide the configuration for that module in the global config file ( ) in the statusModules object:

In case you want to have a second raspberry pi running, but listen to the same statuses, you can provide a web hook URL to the other running CIMonitor. That way all the statuses that are pushed to the dashboard, are pushed to the second CIMonitor instance as well. To make this work, add a listen URL in your config:

The same URL should be used as the status dashboard.

Currently modules are pre-installed in the repository, later this will be npm modules so can be added with ease.

Run a (or multiple) marble(s) for every event you configured. Requires one GPIO port which is connected to a relay. The relay will turn on for a limited time, releasing a marble into the track.

Display the status of your board with a led-strip. Red for a failure, orange for an active process, and green for success!

To have an awesome led-strip added to your CIMonitor, you need to do some hardware hacking first. There is a step by step tutorial here. When you've done that, all you need to do is configure the correct gpio pins used. NOTE: we use pi-blaster, the gpio numbers might be different, so we recommend that you test the gpio pins first.

Note that the started and failure statuses will be blinking.

When the led strip is on the success status for 5 minutes, it will go to the "neutral". This so it the light doesn't have to be super bright when not used for a while.

Display the status of your board with a traffic light. Requires a green, orange and red light bulb. Requires 3 GPIO pins connected to a on/off relay.

Power a module for a couple of seconds for the events you configured. Maybe flash a beacon light for every status change? Requires a gpio pin connected to a relay.

Note: You can choose what gpio pin to switch on for a configured duration per matched event. This way you are not limited in the amount of relay switches you want to power on.

If you want to run this project in development mode, all you need to do is run once, and then to start the project and run file watchers.

To emulate statuses sent to the dashboard, there is a postman collection available here.|||

CIMonitor - A NodeJS application that handles CI statusses and displayes them on a dashboard