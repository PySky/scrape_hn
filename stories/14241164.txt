ThirtyBees has finally reached a stable release, and it’s now ready to be used in a production environment. Let’s see what it comes with, and how it is better than PrestaShop under almost every aspect.

For those of you who didn’t read my previous article about ThirtyBees (TB in short), here is a brief: it is the ultimate evolution of PrestaShop 1.6, a fork software that aims to correct all bugs of the base one, improve it, and ultimately meet all of the expectations that the PrestaShop company has miserably failed to fulfill with PrestaShop 1.7.

 ThirtyBees is therefore a standalone project based on PrestaShop 1.6, created by passionate developers who were not enthusiast of 1.7, and wanted to carry on and improve the previous version, serious about finally giving merchants the ultimate e-commerce solution they need.

ThirtyBees improves the PrestaShop base in various ways, with an eye on the bugs pointed out by the community, as well as features they request.

 No, I am not saying it just cause I am involved in the project, but because it fixed a plethora of PrestaShop bugs and already added a good portion of the long-time-requested features we all wanted. Let’s have a look!

Yes! At last, a decent system that removed all those old-fashioned numbers from urls, giving us the opportunity to make them as human as possible. It also incorporates a url-history system, so that old urls will redirect to the new ones automatically. Awesome!

 This means, of course, that you won’t need any expensive module anymore for this, and free stuff is always good

Cache means speed, and speed is key when it comes to selling online. ThirtyBees implements a better caching system than PrestaShop used to. Consider this test case: default theme, on a slow vps, from 130ms without PageCache (PrestaShop 1.6) to 30ms with ThirtyBees and PageCache enabled.

 On slow servers the difference was 10 times faster in favor of ThirtyBees (from 500ms to 50). Quite a bit.

Error reporting is vital if you want your shop to run hassle-free. ThirtyBees has implemented an advanced bug reporting script in the latest release, so that you can debug without showing any code to your users, directly from the back office.

ThirtyBees lets you add custom javascript, css and metas directly from the back office, a simple yet crucial feature PrestaShop should have implemented since ages.

If you run a medium sized, or even large business, you certainly had to deal with newsletter and marketing. PrestaShop had a poor newsletter module which was not sufficient for the needs of an average store. ThirtyBees implements Mailchimp, with newsletter management, birthday coupons and advanced abandoned cart features. Think of how much you can save in modules, with all these features packed together in the base software!

 As a side note, the module is still a little buggy at the time I am writing, but it will be stable soon enough.

If you have a PrestaShop 1.6 shop already running, you can now migrate to TB without concern. The 1.0.1 release comes with a migrator tool that converts the original PrestaShop structure into the new one, so that you can keep all of your shop’s data and modules. Ah, yes, nearly every 1.6 module is compatible with ThirtyBees, of course.

ThirtyBees is, from an objective standpoint, what the PrestaShop community has been asking for in the last 3 years. It’s fast, stable, and has plenty of features (with more planned, see the roadmap).

 Of course, you might be skeptic as I am involved in the Project and this whole article might just be a huge plug for myself. Facts usually work better than words, so if the above got you interested even just a little, head over to the ThirtyBees Download Page, install and test it. I can guarantee you will be positively surprised.

 And if you like it, please support the project by giving it a star on GitHub here: https://github.com/thirtybees/ThirtyBees.

Stay tuned for a review video about ThirtyBees coming in the next weeks!|||

ThirtyBees has finally reached a stable release, and it's now ready to be used in a production environment. Let's see how it improves the PrestaShop base.