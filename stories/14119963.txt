Below you will find the latest roadmap for the development of the Star Citizen Persistent Universe. While the bulk of this schedule outlines our tasks and estimates that you can expect to find in the upcoming 3.0.0 patch (as well as some of the tasks that we’ve already completed) , we are also including projections for the remainder of the year so you can have some visibility into the upcoming Persistent Universe features and content. These are the very same schedules we update daily and circulate internally on our intra-studio hand-offs with a few exceptions: the individual developer names assigned to the tasks will be omitted (for obvious reasons), we’ll remove the JIRA details, and we’ll modify the technical wording to make it readable for a wider audience. Also note, this schedule does not represent everything CIG is working on, but more the functionality and content we feel comfortable committing to at this time. Outside of the work on Squadron 42, we have a few research projects that, once validated, we would move into production and add to this schedule. Otherwise, when something changes, slips or is completed, you will know.

What you are seeing here is the result of our scheduling and planning process. We have a high level feature and content set that we want to achieve for Star Citizen and Squadron 42. The first step is to break these features into higher level tasks with which we populate Microsoft Project, JIRA and Shotgun (the three tools we use for project scheduling and tasking). Then, as we approach a task, Production works with the relevant developer(s) to make sure the task is broken up with enough detail to allow completion. Sometimes this means adjusting the initial task estimate, as things tend to come into a clearer focus when coming up on a task, but it almost always means breaking down the big task into a bunch of smaller tasks that have their own individual sub tasks that possibly are distributed to multiple developers.

Both tasks and sub-tasks get created in JIRA, linked under an Epic (which is a high level task or feature) and are then pulled into Microsoft Project to manage with granular detail providing us global visibility through Gantt charts and visual timelines. No developer works on a task unless it has been created in JIRA, prioritized and assigned by a lead or a member of the Production Team.

Then as the developers work on the tasks, Production will adjust the schedule and JIRA tickets to reflect the work being done.

In the schedule below, you will first find a master schedule that covers the broad departments/disciplines that are being developed. Each department will then have its own dedicated sub-schedule, briefly explaining the various features that are being developed and their current status.

But also, we would like to establish some ground rules before proceeding:

I.Quality will always be our number one goal. We set out on this journey by looking at the gaming landscape and asking: can we do better? We continue to ask that question about everything we do. As a result, we will ALWAYS extend timelines or re-do features and content if we do not feel they are up to our standards. The freedom to fight for a new level of quality in game development is what crowd funding has allowed us, and we will continue to fight to make sure Star Citizen is the best possible game it can be.

II.The estimates we provide are just that: estimates. They are based on our knowledge and experience, but there are many aspects of game development that are impossible to predict because they literally cover uncharted territory. You will see the same estimates we use in our internal planning, but it is important to understand that in many cases (especially with groundbreaking engineering tasks) these estimates are often subject to change due to unforeseen complexity in implementing features.

III.The time expected for bug fixing and polishing is also very hard to estimate, increasingly so in online and multiplayer situations. The complexity and the difficulty in testing at a large scale make it harder to reproduce and isolate bugs in order to fix them. We base our estimates, again, on our experience, but we also know that it’s possible for a single bug to cause a delay of days or weeks when a hundred others might be fixed instantly.

IV.Internal schedules, the ones you will now be privy to, tend to have aggressive dates to help the team focus and scope their tasks, especially in the case of tech development. Every team, even a team blessed with the kind of support and freedom you have allowed us, needs target dates in order to focus and deliver their work.

V.This schedule doesn’t cover everything being worked on across Cloud Imperium Games, but is meant to highlight our aims for the remainder of the year on the Persistent Universe.

VI.This schedule doesn’t include every audio, vfx, tech art, etc. task. Those are detailed in our departmental sub-schedules.

VIIAlthough technology is shared between the two games, this does not reflect the Squadron 42 schedule. That will be released at a future date.

VIII.These aim dates are determined based on our current staff. Additional hiring will potentially allow us to bring in some dates below.

The community has always been integral to Star Citizen, so we will be updating this page weekly to keep you informed about our development. We hope that this page will not only help explain our latest status, but also provide some explanations in the event that updates are delayed.|||

