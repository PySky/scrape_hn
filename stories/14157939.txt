Optional: This environment variable is a dictionary that represent the well known JWKs assigned to your user pool by AWS Cognito. You can find the keys for your user pool by substituting in your AWS region and pool id for the following example.

Example Value (Not Real):

Used when you only need information about the user pool (ex. list users in the user pool)

Used when the user has not logged in yet. Start with these arguments when you plan to authenticate with either SRP (authenticate) or admin_authenticate (admin_initiate_auth).

Used after the user has already authenticated and you need to build a new Cognito instance (ex. for use in a view).

Important: The keyword arguments used for this method depend on your user pool's configuration, and make sure the client id (app id) used has write permissions for the attriubtes you are trying to create. Example, if you want to create a user with a given_name equal to Johnson make sure the client_id you're using has permissions to edit or create given_name for a user in the pool.

If this method call succeeds the instance will have the following attributes id_token, refresh_token, access_token, expires_in, expires_datetime, and token_type.

Sends a verification code to the user to use to change their password.

Allows a user to enter a code provided when they reset their password to update their password.

Use the confirmation code that is sent via email or text to confirm the user's account

Send verification email or text for either the email or phone attributes.

Returns an instance of the specified user_class.

Get all of the user's attributes. Gets the user's attributes using Boto3 and uses that info to create an instance of the user_class

Get a list of the user in the user pool.

Checks the exp attribute of the access_token and either refreshes the tokens by calling the renew_access_tokens method or does nothing. IMPORTANT: Access token is required

Logs the user out of all clients and removes the expires_in, expires_datetime, id_token, refresh_token, access_token, and token_type attributes.

The class is used to perform SRP(Secure Remote Password protocol) authentication. This is the preferred method of user authentication with AWS Cognito. The process involves a series of authentication challenges and responses, which if successful, results in a final response that contains ID, access and refresh tokens.

The class takes a username, password, cognito user pool id, cognito app id, and an optional client. Afterwards, the class method is used for SRP authentication.|||

warrant - Python library for using AWS Cognito.