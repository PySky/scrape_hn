You have a lot of version control repositories. Sometimes you want to update them all at once. Or push out all your local changes. You use special command lines in some repositories to implement specific workflows. Myrepos provides a command, which is a tool to manage all your version control repositories.

All you need to get started is some already checked out repos. These could be using git, or bzr, mercurial or darcs, or many other version control systems. Doesn't matter, they're all supported!

Inside each of your repositories, run . That sets up a file listing your repositories.

Now you can run in your home directory, and it'll update every one of your repositories that you've registered with myrepos.

Want to update repositories in parallel? will run 5 concurrent jobs!

If you run inside a repository, it'll only act on that repository. In general, any command runs recursively over any repository located somewhere in or under the current directory.

You can also run , , , , and a lot of other commands. These work no matter which version control system is used for a repository. Of course, you can still use the native version control commands too.

Oh, and you can abbreviate any command to any unambiguous abbreviation. , , etc.

Now, maybe you find that you always want to update one repository using , instead of the default that runs. No problem: The file makes it easy to override the command run for any repository. It's like a for repositories.

You can make up your own commands too:

You can even define commands globally, so can use them in all repositories.

This only scratches the surface of the ways you can use myrepos to automate and mange your repositories!

Some more examples of things it can do include:|||

