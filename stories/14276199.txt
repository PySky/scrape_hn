On the host launch receiver with

will try to connect to it's target every 10 seconds for 10 minutes. After 10 minutes it will exit.

Since not all developers are familiar with hacker's technics, I'll briefly describe what is this all about.

When you open terminal on your machine, it's local shell.

When you run SSH to connect to remote machine, it's remote shell.

When you listen on port on your machine and make remote machine to connect to you, it's reverse shell.

This tool is not usefull for actual hacking. Since you already have an ability to execute arbitrary code on remote machine, it won't buy anything in terms of access. You just need a shell as an arbitrary code.

Reverse shells have some advantages over remote shells:

Imagine crazy environment. You can deploy Python application to cloudy remote host and have it running. But you don't have SSH access and can't debug it or see startup logs. Also you don't know in advance what will be network address of the remote host.

But you have a dev machine in the same network, where you are free to run anything: 1. So you launch server on dev machine and deploy reverse shell through regular deployment process. 2. Once the application is deployed, it will connect to the server and turn itself into bash. 3. ... You can poke around and figure out what's wrong ... 4. PROFIT!|||

reshell - Deployment debugging with hacker's tools.