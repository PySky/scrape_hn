This may seem like an obvious statement akin to Wayne Gretzky’s (or Michael Scott’s) “You miss 100% of the shots you don’t take.” Just like that quote, it can be helpful to continually remind oneself that one first needs to record events before they can be measured.

Let’s imagine that you have trained a logistic regression model to detect fraudulent credit cards entered into your payment processing system. You spend time optimizing your performance metrics offline, pick a threshold for your classifier, and deploy the system as an API that returns or dependent on whether or not the credit card is fraudulent. You record an event with the user information and whether or not the credit card was fraudulent.

Later, your model performance slips, and you wonder if your threshold should change. Unfortunately, you never tracked the raw logistic regression output (just the binary output), so you have no way to quickly check the data to validate this hypothesis.

If you cannot measure that which you do not have, then make sure you have as much as possible! We live in an age where data storage is cheap and scalable database queries are getting easier. So just track it.

It is rare to ever regret capturing an event. On the other hand, nothing can make up for the lost data due to not tracking an event. Even if you are simply writing data to a log file, that log file will come in handy when things break (and things will break).

In the parlance of machine learning (ML), you can think of this like valuing recall over precision. If you treat the act of tracking an event as a positive classifier prediction, then useless events can be called false positives. These are fine! But, if not tacking a useful event is a false negative, then this is what we should be minimizing.

ML systems are fundamentally functions with inputs and outputs. You typically input some data and get a prediction out. Even if you have taken the previous two tips to heart and are measuring all sorts of outputs from the ML system, the inputs define the output.

What were the inputs to the model at the time the time of prediction? In the fraudulent credit card example, maybe the front-end provides the threshold to the model via an API query parameter. Were you tracking that incoming API call? If not, then at some point in the future you will not remember that threshold value.

ML is often presented as a prediction over static features. It is not. Imagine you are predicting the lifetime value of a new user to your service, and the state the user lives in is a feature of your model. You one-hot-encode the state, and train and deploy your model.

There is an assumption here that the way the user’s state was captured never changes. However, maybe your company switched from asking the user explicitly to inferring their state from their IP address. The latter method is much noisier, and this will manifest itself in your model.

Do you know when the user’s state was written to the database? Later on, when you backtest or train offline, will you know which method was used for recording the user’s state? Furthermore, will you know all of the other aspects of your model — feature engineering, model parameters, when the model was trained, etc…?

This is by no means easy., and you will not be able to handle all assumptions. In fact, Netflix wrote a gigantic post about all of their efforts in this realm, but admits that this is “just a start”. Still, this does not mean that you should not try to either record some assumptions or at least be cognizant of them.

Even if you have tried to follow tips 1–4 and are super diligent about running unbiased, offline ML experiments — you split into training and test sets, you run K-fold cross validation on the training set, and finally test on the test set — the true measure of your model’s performance will be when it is actually performing. So, make sure that you are tracking the predictions and periodically evaluating the final performance. You may be surprised!|||

This may seem like an obvious statement akin to Wayne Gretzky’s (or Michael Scott’s) “You miss 100% of the shots you don’t take.” Just like that quote, it can be helpful to continually remind oneself…