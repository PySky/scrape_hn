There are a lot of Opinions around React.js. For a beginner, this can be overwhelming as examples seem to be spread out and inconsistent. From zealots who think you don’t deserve a job if you use the class keyword, to people who decorate their walls with the class keyword. These disparate bits of information can make this whole thing very difficult for someone new to navigate.

I like to be able to pick up a tech and easily build a simple application with as little fuss as possible.This generally involves reading bits and pieces of differing opinionated information for a while and then trying to build something with what I consider the most sane combination of tools and opinions.

So , here is how I approached React.js when I finally decided to build something with it.

As with Scala for human beings, I am not going to go into detail explaining how to set up your tools or environment, this article will be more of a step by step list of goals you need to achieve to get this thing going.

I have used enough npm by now to say… use yarn. Kittens like yarn , I like kittens, so I use yarn.

Right, now that we have our cat rocket it’s time to get a hello world running on our machine. This is about the point that when I first tried it, things got a little odd. You see the most people recommend using Webpack to build React apps and while it really does it’s job well for React, Webpack files look sort of scary to be quite honest. You really don’t want to be learning a new build tool just to learn a framework.

Luckily Facebook has released a tool called Create React App which still uses Webpack to build, but they deal with all the nuclear waste for you. Plus , as the name says, you can use it to create new projects, with testing , right out of the box. It’s like using the nuclear power generated by your energy company instead of running your own reactor in the basement.

Most React apps continue the theme of reactive programming into their core by means of the flux pattern. The implementation that most people seem to agree on is using Redux. The beautiful thing about Redux, is that their documentation for usage with React is not only solid , but provides some useful links about Presentational and Container Components which I would recommend reading before continuing just as the docs say. This will give you good insight into how to structure your app

Finally, once you have that up and running and you feel like everything is working , you are probably going to want multiple pages in your app. For this I recommend using React Router. The docs there are also fairly good and you shouldn’t have too much trouble getting things set up.

You should now be on a slightly less painful path to creating your ReactJS app.|||

There are a lot of Opinions around React.js. For a beginner, this can be overwhelming as examples seem to be spread out and inconsistent. From zealots who think you don’t deserve a job if you use the…