Recently I heard of the need of taking two typed objects and producing the delta of their properties. So lets look at a simple solution to an object compare that inspects the complete graph of two objects and produces a result of properties that doesn't match.

I have a simple project: "Structurizer" (GitHub and NuGet), that turns an object graph to structure indices, where each index contains: name, path, data type and the value for a leaf. The data is extracted using cached model meta and IL code is generated to access the properties in an efficient manner. All this provides a good foundation for building an object compare solution.

Remember. This is just a blog post, aiming at providing "inspiration". It's not an "all mighty feature complete solution".

Lets define a sample model for this post. The well known .

It's the value of a certain leaf in your graph. It looks like this:

The test just shows some simple usage. The result of the compare exposes data directly. Maybe you don't want to expose external library models, in that case you could map to something under your control.

Lets first have a look at what the result looks like:

Now to the final piece, and also where you would invest some time. I did a simple between the different properties. Using the fact that I know that they are produced in the same order. But maybe you want to look at and their associated values?

That's it. Hope it got you thinking.|||

