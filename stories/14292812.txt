A version of this post originally appeared on Tedium , a twice-weekly newsletter that hunts for the end of the long tail.

Operating systems are the cockroaches of the digital revolution.



They're everywhere, hiding in low-level crevices, and most of the time, you don't really notice when they're there, until they draw attention to themselves. (Cough, cough Windows 8 cough.) 



But most of those operating systems fade from view—except when they don't.

Case in point: The company Arca Noae claims it's about to launch a brand-new version of IBM's coulda-been 90s contender, OS/2, with its final version going to beta testers earlier this week. Apparently, there are people who still use it!

And it's far from alone. A number of operating systems have proved difficult to kill simply due to lack of consumer interest. Read on for a few examples.

— Lewis Rosenthal, one of the co-founders of Arca Noae, during a talk at the 2015 Warpstock Europe conference, discussing the firm's plans to manage and offer support to still-existing OS/2 users. (The company is one of a couple of this nature, actually; eComStation supports a number of Fortune 500 companies still using OS/2.) Arca Noae is also working to solve a more practical problem, according to TechRepublic: The fundamentals of OS/2 have largely held up since the 90s, but installing it is a pain in the butt because the IBM versions of the operating system absolutely require a floppy drive, and the system doesn't actually work on modern hardware because the operating system doesn't support UEFI. (Not to be lost here: Yes, OS/2 has enough of an existing fan base to support conventions! In fact, Warpstock is held both in the US and Europe every year, with the European edition taking place later this month.)

Two years before Research in Motion was born in Waterloo, Ontario, Canada, another Canadian firm was putting the into action an idea that would eventually prove a key part of the modern-day BlackBerry's entire business. Not that they knew it at the time.

Quantum Software Systems, as it was first called, came about after two University of Waterloo students, inspired by the real-time programming lessons they were learning in their computer science class, decided to create a similar real-time system for the relatively-new IBM PC. One interesting element of the platform they created, first called Qunix and later renamed QNX, was that it was designed around a microkernel architecture, a somewhat unusual move at the time.

See, most operating systems are built around the idea that the kernel, or central nervous system of the OS, manages a number of basic tasks that every application needs, a model described as "monolithic kernel." On the other hand, microkernels are designed to offload just about everything, treating every element of the system's operation as an optional part of what makes it work. This approach has been controversial at times: In 1992, MINIX author Andrew S. Tanenbaum (whose operating system, released a few years after QNX, also relied on microkernel) got into a large-scale Usenet flame war with Linux creator Linus Torvalds over the differences between the two approaches. (Short version: Microkernels are way more stable; monokernels are better for performance.) The debate, among other things, helped forge Torvalds' reputation as a hot-head.

Whatever the case, QNX was a head-turner upon its release. In PC Magazine, computer consultant James B. Morris compared the operating system to "a juggler who keeps a lot of balls in the air." The next year in the same magazine, columnist Kaare Christian wrote with surprise about the the operating system's strong functionality despite the small size.

"The extremely compact programs make it possible to place QNX's 50 utilities on a single floppy disk and make it possible for the QNX system to work on a machine with 128k and floppies," Christian wrote. "Thus, QNX can fill more programs in memory at once."

The operating system has remained active ever since, though never went mainstream among home computer users, mostly sticking to embedded and industrial needs. That is, minus a short period in which the Ontario government had a really good idea.

In 1983, the government funded work on a homegrown PC for schools. The Unisys ICON workstation, as it was called, was effectively created as a way to standardize the use of computers in the province's schools.



The operating system on the machines? QNX. It would never get this close to mainstream home computing ever again.



It was really another mainstream device—one outside the home—where it quietly won everyone over.



In 2010, Research in Motion was on the ropes.

The problem, simply, was that it made a bad bet about the role that smartphones were going to play in modern society. They were successful for a while, but the company treated them as sort of a general commodity device that would be handed out to employees by businesses—an approach that held up, at least until Apple released the first iPhone and hinted that everyone might someday want one.



Already losing steam and suddenly competing in the tablet space as well, RIM found itself in a position where it had to quickly catch up with Apple and Google. But its operating system wasn't up to snuff. It grabbed something, anything, to help it catch up against its new competition—and that turned out to be QNX, a company that by this point had started to embed itself as the nervous system used by many cars.

Cars are the perfect use case for something like QNX. When it comes down to it, you don't care about your in-dash entertainment system being fast while you're driving—you simply want to ensure that, when you change the station, it simply works. (And QNX, of course, was so well-used at this point that it was bulletproof—hell, the space shuttle uses it.)

This approach certainly sounded appealing when applied to a tablet or a mobile device, and while the reviews were somewhat mixed for the ensuing PlayBook (which, weirdly, initially required a separate BlackBerry device for use of features like email and messaging), the OS received nice notices.

"As an outsider looking in, it almost feels as if RIM has been able to do as much in six months working on QNX for the PlayBook as they have in the past six years working on the old BlackBerry OS for their phones," wrote "CrackBerry" Kevin Michaluk.

And it makes sense. In a lot of ways, it was not the same QNX as was first shown off in the 80s. While maintaining its general approach, the operating system was continually updated for shifting industry needs, and by 2010, it had become the standard-bearer for many embedded systems. (But not all, of course; OS/2, famously, still gets used in ATMs and checkouts, which is why they still hold conventions for it.)

As we all know, QNX did not save the BlackBerry phone. But it might help save BlackBerry the company—a firm that has been the recipient of more free business advice than perhaps any other in the world. The turning point came in 2014, when Ford decided to drop its contract with Microsoft in favor of QNX, which (combined with other deals) had the effect of making the operating system something of a de facto standard for cars with onboard infotainment systems.

Soon, the hits kept coming: Apple, seeing a market it wanted into, built its CarPlay system on top of QNX (with BlackBerry's blessing). And John Chen, the turnaround artist who has masterminded BlackBerry's return to prominence, noted the sheer excitement companies had about QNX in a 2014 earnings call:

QNX is probably one of the crown jewels. Every time I come here, our partners call me and customers call me that really want to work with us on QNX…The plan is to invest in this and grow. The plan is to go by other vertical because we are doing very well in automotive vertical, we are going to continue to focus on that, but we're going to start looking in adjacent verticals to expand the business. In addition to that, we're going to build a platform that are cloud based, that is going to be machine-to-machine based architecture.

That seemed like a somewhat weird thing to say in early 2014, but the Ford deal strengthened the case, while the push toward self-driving cars suddenly made automobile operating systems an interesting field. More notably, the company is profitable again for the first time in a while.

Apple appears to be taking close notes—despite being a California company, the iPhone giant apparently is building its self-driving car operations out of Ottawa… basically to look over BlackBerry's shoulder.

Fortunately this time, BlackBerry has a bit of a head start.

The thing that's really interesting about many of these operating systems is that they persist, right under our noses, in ways big and small.

And sometimes, their missions might feel hopelessly impossible to fulfill.

For example ReactOS, an attempt to fully recreate the Windows operating system using open source techniques, has persisted for more than two decades despite its goal being basically impossible—a small volunteer team is naturally going to struggle to recreate what a took a massive company years to pull off.

Even though our desktops are generally running macOS, Windows, or a flavor of Linux, there are people that still care about operating systems we've never heard of, nor have ever given a second look.

 Whether it's driven by a community of enthusiasts, a specialized use case, or a need for security, there will always be operating systems that fall outside of mainstream release cycles.

In an era when light bulbs running an embedded operating system are seen as a legitimate threat, perhaps the best form of security is simply using a platform that's useless to basically everyone but you.|||

It ain’t just about Windows, macOS, or Linux. Also-ran or fairly obscure operating systems, like OS/2, are everywhere—in some cases, hiding under your nose.