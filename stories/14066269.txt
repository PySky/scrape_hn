A styled-components ðŸ’… and jsxstyle inspired solution for styling âš› React Components from PayPal

I was building something for my product at PayPal (blog post maybe forthcoming) and got tired of writing components like this:

So I decided to try out styled-components because the hype-train was strong ðŸš‚. I REALLY liked it:

It allowed me to write that same component like this:

Unfortunately, I hit a wall when I realized that there isnâ€™t currently a solution for right-to-left conversion (like CSSJanus or rtl-css-js) and thatâ€™s a hard requirement for what Iâ€™m building. I also had some issues with the size of styled-components at the time (note that you can transpile away a lot of the size if youâ€™re willing to give up some dynamic capabilities, which I was unwilling to do).

So after evaluating a bunch of other solutions and trying to enhance existing solutions to be what I wanted them to be, I decided to create my own.

is React component styling solved with an elegant (inspired) API, small footprint (<5kb gzipped), and great performance (via ). It has a very similar API to styled-components and uses similar tools under the hood (glamor). The benefits being:

Letâ€™s get a quick look at what a glamorous component looks like:

(thanks to styled-components for the example inspiration).

The beauty of glamorous is that all of the cool things you can do with glamor, you can do with glamorous. Here are a few examples:

child-selectors (the escape hatch you should rarely use, but is nice to have)

With the new (recently added by Alessandro Arnodo), glamorous also supports theming:

And if you need global styles, you can just use glamor to do that (you can do this with styled-components as well). And there many other cool things you can do with glamor (including Server Side Rendering)!

Another great feature of is it will merge glamor class names together automatically for you. Learn more about that here.|||

I was building something for my product at PayPal (blog post maybe forthcoming) and got tired of writing components like this: Unfortunately, I hit a wall when I realized that there isnâ€™t currently aâ€¦