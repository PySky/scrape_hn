I am a believer that you can’t build a ship while sailing it, which is why it is my opinion that building a blog from scratch takes away from actually writing blog posts. Thanks to Site Generators you can get a decent looking blog up with the focus being on creating content.

Static site generators like Hugo and Jekyll provide a streamlined solution where you can add a styled themed with low effort.

Getting started is always the easy part, but staying consistent is where most aspiring bloggers fall short. At Netlify we sought out to help solve this with an open source solution and it’s the NetlifyCMS.

Regardless of your choice in site generator, you can use the NetlifyCMS and it only requires a few steps to set up. I will walk through getting this set up on my personal blog, which was created using Middleman.

You first need to create an admin folder in my public folder, which for Middleman is called . In this folder, I copied the following content a new file.

This index.html is also available in the CMS’s README. You will also need a in the same folder. I have updated my folder location to source , which is the location of all my blog content. I original set this folder in my middleman config as the blog.prefix in my config.rb.

The power of the CMS comes from using GitHub as your backend, which is the default git-based authenticator and integrates with Netlify’s Authentication Provider feature. This means that the CMS integrates directly with GitHub’s API for updating and save posts. To get everything connected for continuous deployment from GitHub to Netlify follow this documentation to create a GitHub Oauth application.

Then go to the Access tab for your Netlify site and configure the GitHub provider with your new Client ID and Client Secret.

That completes the set up process, now you should be able to go to the section of your site and log in.

Now that you can view the CMS, you can create, edit and update posts via your web browser. Start drafting a post by selecting the ✎ pencil in the menu bar.

Each time you save a post, a GitHub commit will be made to the branch you selected in your config.yml. This could be ideal, but some posts might take more time, so I recommended adding a draft flag to the . Middleman checks for drafts by using the flag.

Now you can begin publishing directly to your blog’s repo without the need to constantly push and pull the latest changes. Feel free to review my blogs CMS admin setup to reference with your setup here.

There are quite a few other things you can do with the NetlifyCMS. I encourage you to check out the repository’s documentation to find how to set up an editorial workflow that not only opens a new branch for you, but also creates a Pull Request to view the content changes and preview on a deploy preview.

We are hard at work on this open source tool, let us know in the netlify-cms repositoryif there are any issues or if you have any feature requests. Pull requests are of course always welcomed!

Netlify is an all-in-one platform for deploying and automating modern web projects.

Simply push and Netlify provides everything—servers, CDN, continuous delivery, HTTPS, staging environments, prerendering, asset post processing, DNS, and more.

Any project, big or small, can perform instantly on a global scale.|||

Getting started is often the easy part, but staying consistent is where most aspiring bloggers fall short. At Netlify we sought out to help solve this with an open source solution, Netlify CMS.