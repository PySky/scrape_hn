Serverless is not a panacea. It’s an idea — that infrastructure should be structured like it’s from ikea.

Do you feel kind of nervous about functions as a service? It makes no sense to be on the fence. The serverless learning curve is kinda of steep — it isn’t cheap. And even if it’s affordable, you know that Node code you wrote ain’t portable.

Serverless is not a panacea. It’s an idea — that infrastructure should be structured like it’s from ikea. Running your code on compute you don’t manage. Freeing you to pursue your true business advantage.

Now, does the tooling have some gaps? Sure. But just like our apps, perhaps, it’ll mature. In the meantime, the hype is a little bit fair. For the first in … ever … you don’t have to care.

If you’ve over provisioned or paying for idle. Or managing servers where each has a title. Like “cattle01” or worse “my special pet”. When they’re really just beasts you should try to forget.

No maintenance windows from midnight til two. Jeff Bezos will pay those sysadmins for you. If Amazon isn’t your bag, forget them. Try Azure or Google or yes, IBM. Use Cloud Functions, Step Functions, Firebase, Cognito. Or wrap ’em all up like a stateless burrito.

In short, the quick kick of that serverless stack. It’s addicting as heck and there’s no looking back. So go, write a function, deploy and test. And let the cloud do what the cloud does best.|||

Do you feel kind of nervous about functions as a service? It makes no sense to be on the fence. The serverless learning curve is kinda of steep — it isn’t cheap. And even if it’s affordable, you know…