readeef is a self-hosted feed aggregator. Similar to Google Reader, but on your own server.

For a more detailed description, click here. Some screenshots may also be had on this page

readeef is written in Go, and as of September 2014, requires at least version 1.3 of the language. The currently supported databases are PostgreSQL, and SQLite. SQLite support is only built if CGO is enabled. The later is not recommended, as locking problems will occur.

Three binaries may be built from the sources. The first binary is the standalone server. Unless readeef is being added to an existing golang server setup, it should be built as well. Since readeef can use bleve for FTS capabilities, bleve-specific tags (e.g.: libstemmer, cld2, etc) should be passed here.

Unless you are using SQLite, readeef will need to be configured as well. A minimal configuration file might be something like this:

You may provide The standalone server with a config files. The default server configuration is documented in godoc.org under the variable: DefaultCfg. The server will need to be started in the same directory that contains the 'static' and 'templates' directories, typically the checkout itself.

If the server has been built with the 'nofs' tag, the client-side libraries will need to be fetched. This is best done with bower. Make sure the .bowerrc file, provided with the sources, is in the same directory that contains the 'static' directory. In there, just run the following:

The second is a user administration script, which can be used to add, remove and modify users. It is not necessary to have this binary, as readeef will create an 'admin' user with password 'admin', if such a user doesn't already exist:

You can now use the script to add, remove and edit users

The third is a search index management script, which can be used to re-index all articles in the database. It is usually not necessary have this binary, as articles are indexed when they are added to the database. It might be useful if you switch from one search provider to another:

The server will run on port 8080, and you may login using the user 'admin' and password 'admin', using SQLite (if CGO is enabled)|||

readeef - Readeef feed agregator