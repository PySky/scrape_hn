My first job was an underage, under-the-table weekend gig at a pizza parlor. I’d show up at the local strip mall early Saturday morning, stash my bike, and clock in. For me, the work was grueling. I would haul 50-pound bags of flour and 10-gallon buckets of water to a giant stand mixer, and once it finished spinning I’d lift armfuls of incredibly heavy dough to a metal table where I’d cut and oil portions weighed for each size of pizza that the shop sold. By noon, I’d be exhausted. I’d clock out and head home. And once a month I’d pick up an envelope with about $100 cash in it. It was an awesome first job.

My official job title was Dough Boy (yes, like the Pillsbury mascot). But “Dough Boy” isn’t very impressive on a resume, so for a while I listed my job title as “Dough Chef.” A teenager’s got to have some dignity, right? In the end, I don’t think anybody cared.

Little did I know, that was the least problematic job title I would ever have.

I became a programmer several years ago. In 21st-century America — especially in the tech sector — job titles are surprisingly fluid. I haven’t had an employer dedicate any real thought to my job title for a long time. In fact, my first employer in the industry told me I could put whatever I wanted on my resume and if anyone called she’d back me up. Naturally, I was tempted to write “Senior Department Lead QA III Technical Architect”, when in fact I was just writing Selenium tests in a cubicle. Go figure.

I’ve often puzzled over the plethora of job titles I now fit under. I write web applications for a startup, so I do something at every level of the stack, from SQL Server at the bottom to CSS at the top. There are a lot of things I could call myself: coder, programmer, engineer, developer, boffin. In keeping with my pizza-infused legacy, I could even call myself a Software Boy. So what am I?

I’ve discovered that I’m far from the only one who has this question. And there are a lot of variables to consider, so it’s not an easy one. In some countries it’s illegal to call yourself an engineer unless you have certain certifications. In some cultures, general words (like “consultant”) may be preferred over technical jargon (like “application developer”). And in the United States, where I live, small differences in a job title can make a significant difference in salary.

This is my attempt to aggregate all the data I can find about the swath of job titles that apply to people who code. I’ve gathered average salary information and definitions for several job titles that might apply (but surely not all of them). If you see a significant omission or error, please highlight it and leave a comment.

I’ve ignored titles like hacker, ninja, and rockstar because they’re frivolous and meaningless. In fact, I’ve only ever seen them used by exceptionally incompetent recruiters.

I’ve got salary information from the Bureau of Labor Statistics, Glassdoor, PayScale, and Indeed. Definitions come from the BLS or Wikipedia where available. Where neither has a definition, I’ve searched out the most succinct, authoritative source I can find.

This data is categorized by job title. Job titles are ordered by a subjective estimate of their complexity, from least complex to most complex. Data was gathered in April 2017.

Each entry has a definition, national (USA) median salary data from each source, an average of the salary data points, and a variability assessment (how wide the range of salary estimates is). Where a specific job title or equivalent was not found in a database, “N/D” is used.

Note: PayScale.com uses the words “average” and “median” interchangeably. Do they even math? Glassdoor and Indeed don’t offer a median at all, preferring a much less useful average. In a perfect world everyone would use medians for data sets like this, since they may or may not follow a normal curve.

Average: N/D. I won’t insult your intelligence by averaging a single data point. 

 Variability: N/D.

Notes: I’d usually avoid a site with so little street cred as Dictionary.com, but definitions for this word are surprisingly scarce.

Create, modify, and test the code, forms, and script that allow computer applications to run. Work from specifications drawn up by software developers or other individuals.~BLS

Average: $83,585.50

 Variability: N/D. Range of ~$15k defined by only two data points.

Notes: Several people have pointed out that the term “developer” could refer to someone in real estate as well as someone in software, so it’s hard to know if these results are meaningful at all.

A front-end developer is a type of computer programmer that codes and creates the visual front-end elements of a software, application or website. He or she creates computing components/features that are directly viewable and accessible by the end user or client. ~Techopedia

Design, create, and modify Web sites. Analyze user needs to implement Web site content, graphics, performance, and capacity. ~BLS

The term full-stack means developers who are comfortable working with both back-end and front-end technologies. To be more specific, it means that the developer can work with databases, PHP, HTML, CSS, JavaScript and everything in between, also, venturing as far as converting Photoshop designs to front-end code. ~George Fekete on SitePoint

Notes: There’s significant doubt as to whether this is an attainable job title, insofar as it refers to being an expert in several different layers of web technology. Given that Indeed is the only site to cough up a salary value, it seems that the industry shies away from it, whether for this reason or another one.

Develop, create, and modify general computer applications software or specialized utility programs. Analyze user needs and develop software solutions. ~BLS

A software engineer is a person who applies the principles of software engineering to the design, development, maintenance, testing, and evaluation of the software and systems that make computers or anything containing software work. ~Wikipedia

Notes: In classic Wikipedia style, this definition is bafflingly circular. However, if you ignore the “principles of software engineering” part, the definition becomes useful.

This concludes a nearly-complete list of job titles that apply to regular devs. However, I’m going to go a bit further and see what “Junior”, “Senior” and “Architect” do to a job title, even though these terms lie outside the mainstream.

An entry-level engineer with limited exposure to development and development practice who will need strong mentoring and support to grow their skills. ~James Turnbull on Kartar.Net

…either someone with a deep specialised knowledge beyond their peers or someone who leads or instructs other developers. ~Robert Rees on The Guardian

A software architect is a software expert who makes high-level design choices and dictates technical standards, including software coding standards, tools, and platforms. ~Wikipedia

Job titles by salary from lowest to highest are: Junior Software Developer, Web Developer , Programmer , Front End Developer, Developer, Software Developer , Software Engineer, Senior Software Developer, and Software Architect (Coder and Full Stack Developer were lacking data). Since the BLS likely has the largest and least-biased data set, I’ve bolded the titles for which BLS data was available. Incidentally, the ordering of the list holds when BLS data is considered alone.

This data should be taken with a grain of salt for several reasons:

The difference in average salary between a Developer and a Software Developer is about $3k, which probably is not statistically significant. On the other hand, the difference between a Software Developer and a Software Engineer is $6k, which might be meaningful. The biggest leap in salary is from Software Engineer to Senior Software Developer, with a difference of about $15.5k.

There are several more slight variations in wording that I could have looked into. A Senior Software Engineer, for example, probably makes a little bit more than a Senior Software Developer, and a Senior or Chief Software Architect surely makes more than a Software Architect. But this should be enough to provide insight into a general trend.

Enough with the cash: what’s the qualitative difference between these roles?

First of all, some titles to avoid (or at least approach with caution):

The remaining titles differ semantically, but not in ways that necessarily make any of them superior. You should determine which one best describes your career trajectory:

Embarrassingly enough, my own resume — written long before I began research on this topic — says I’m a Full Stack Developer. I’ll be fixing that right away.

I hope the data I’ve provided is valuable. If you’re still determining your own job title, I wish you the best of luck.

This post was originally published on medium.com|||

From the dev.to() community. Sharing ideas that makes us all better developers.