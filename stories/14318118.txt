IBM has brought out a TS1155 tape drive as an update on the existing TS1150, offering 15TB raw capacity, half as much again.

These are proprietary IBM format tape drives. For comparison the open standard LTO-7 format offers 6TB raw capacity (15TB compressed at 2.5:1), with the coming LTO-8 reaching 12TB raw, well below IBM capacity levels.

IBM has quoted 3:1 compression rates for the TS1150, so the same rate applied to the TS1155 gives us a 45TB compressed capacity, a useful increment over the TS1150's 30TB.

The TS1155, with new TMR read sensor head technology, offers 50 per cent more capacity at 15TB on JD media types (JD/JZ/JL) over the previous TS1150's 10TB. The new drives also support JC 4TB format (read only) and JC 7TB format (read/write).

Media written in TS1155 format is not readable by TS1150, but is back-portable for reformatting the TS1150 format of 10TB.

There are two TS1155 models; the 3592 55E (Ethernet) and 3592 55F (Fibre Channel), with both drives usable in the TS4500 tape library. They feature:

It will be supported on Spectrum Archive by providing tape usage and performance monitoring with ELK and alerts through Simple Network Management Protocol (SNMP).

Some of the features use an unconsciously comical vocabulary, such as "recursive accumulating backhitchless flush*" and "same wrap backhitchless flush**". The mind boggles, but we're tape technology ignoramuses.

The TS1155 has the same load/ready, locate speeds, and access times as the TS1150 drive. It is not compatible with IBM TS7700 or Enterprise Tape Control Unit environments.

The TS1155 Model 55F is supported by select IBM Power Systems, System i, System p, System x, and other servers running AIX, Linux, Oracle Solaris, and Windows.

However, the TS1155 Model 55E is initially limited to be supported through a Windows device driver and will require approval of an IBM i-RPQ 8B3685.

IBM's planned availability for the new drives is carefully detailed.

* This IBM doc says: "S1140 tape drive and TS1150 tape drive use an algorithm called recursive accumulating backhitchless flush (or non-volatile caching). This algorithm increases the effective data rate performance from host servers that force explicit synchronize operations during write operations."

** This IBM doc reads: "Enhanced performance with functions such as Recursive Accumulating Backhitchless Flush and the addition of a new Same Wrap Backhitchless Flush function extends virtual backhitch effectiveness for large files."|||

