“…slow is smooth, smooth is fast.” My trainer repeats the mantra as I make jerky, inefficient movements with the basketball. I decide he should sit next to me and repeat this while I code, do customer support, cook, and look for my keys.

Ever feel pressure to code quickly? Fear you won’t accomplish enough in the sprint? Run into an unexpected snag and dread explaining that you’re still working on the same task at standup the next day?

How do you think that pressure affects your behavior and performance? Does it lead you to make the best decisions for the long-term?

These sorts of anxieties have been a frequent companion in my career. Even when not pressured, I find myself jumping into tasks at an almost frenetic pace. Sometimes it feels great to knock out tickets at breakneck speed. Other times, it results in costly mistakes[1]. It almost always leads to a refactory period where focus is more difficult.

[1] I once urgently needed to change data in my production db, and the app console takes more than a minute to load. I decided to make the simple change in psql instead, saving that precious minute. Instead of modifying the three records I needed, I changed every. damn. record. in the table. Fortunately I was able to use backups to restore the data, but you get the point…



 I’ve recognized three triggers of this manic coding behavior in myself:

[2] Rich Hickey famously pointed out that “sprinters” only run short distances and “Agile” solves this by firing the starting gun every 100 meters.



 Slow is smooth. Smooth is fast. If you can’t convince yourself to slow down for fear of lost productivity, try an experiment: for the next medium-sized (hour or longer) task you have, don’t jump in immediately. First, gather all of the information and resources you’ll need to complete the task. Pretend you’ll be working on a plane (without WiFi) and you must finish the task before you land. Figure out which files you’ll need; plan your attack. Then, calmly proceed with your plan, noticing when you start to feel rushed and then purposefully slowing down. Even force yourself to type slowly, sending your brain the message that there is no hurry.

At the end of this experiment, ask yourself these questions:

Let me know what your experience is! I think you’ll find that development can become consistently energizing again, rather than tiring. I have personally been able to increase my productivity severalfold by not only slowing down while I’m working, but also drastically reducing the amount of time I allow myself to work[3].

[3]I highly suggest Cal Newport’s Deep Work for more insights into increasing your productivity while reducing stress.|||

“…slow is smooth, smooth is fast.” My trainer repeats the mantra as I make jerky, inefficient movements with the basketball. I decide he should sit next to m...