Tomb is a simple tool to manage encrypted storage on Linux using LUKS, dmcrypt, GPG and other well know linux software. It generates encrypted storage folders to be opened and closed using their associated keyfiles, which are also protected with a password chosen by the user.

A tomb is like a locked folder that can be safely transported and hidden in a filesystem; its keys can be kept separate, for instance keeping the tomb file on your computer harddisk and the key files on a USB stick.

It has some really neat and easy to use features (see the tomb website and the Paranoid #! Security guide):

Since Tomb 2.4, Tomb supports asymmetric encryption of Tomb keys using public/private GPG key pairs. It is now possible to protect a Tomb key using a GPG key (which can also be password-less for automations) as well encrypt a Tomb key for multiple recipients (list of GPG ids).

The purpose of this blog is to explain how use Tomb with the new support of gpg key.

In order to create a tomb, there are three steps to follow.

With a GPG key you have three different ways to protect your to tomb key:

The three new tomb options are:

In the following examples, we are going to use:

To use the default key, requires:

Otherwise the first key in the keyring is used.

With a hidden key ID, you can use:

Warning: Do not forget the option, otherwise tomb will act like if the tomb key was password encrypted.

Are supported, you need to set it up in your GPG keyring and it should works out of the box. It provides an extra level of security and allow a PIN code to be used for unlocking the GPG key and decrypt the tomb key. After 3 false attempts the smart card locks itself down.

A tomb key can be encrypted with more than one recipient. Therefore, a tomb can be shared between different user. The multiple recipients are given using the option and must be separated by a comma .

You will need to provide a steganography password on the top of your GPG key. Please note the key is buried encrypted, the use of the GPG key is only to make sure your bury a key you own.|||

Ph.D. Student in computer security at University College Dublin (Ireland).