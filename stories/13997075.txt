

 Given an array of integers, find sub-array in it that has maximum product of its elements.



Output: The maximum product sub-array is {4, -5, 8, -10} having product 1600



Output: The maximum product sub-array is {-20, -10} having product 200

 



Naive solution would be to consider every sub-array and find product of their elements. Finally, we return the maximum product found among all sub-arrays. The implementation can be seen here. The time complexity of this solution is .

A better solution will be to maintain two variables to store the maximum and minimum product ending at current position. Then we traverse the array once and for every index in the array, we update maximum and minimum product ending at . We update the result if maximum product ending at any index if more than maximum product found so far.

Output: 

 

 The maximum product of a sub-array is 1600

 

 Â 

 The time complexity of above solution is and auxiliary space used by the program is .



Please use ideoneÂ orÂ C++ ShellÂ or any other online compiler link to post code in comments.

 Like us? Please spread the word and help us grow. Happy coding ðŸ™‚

|||

Given an array of integers, find sub-array in it that has maximum product of its elements. The idea is to maintain two variables to store the maximum and...