

 Hash tables are extremely useful data structure as lookups take expected O(1) time on average, i.e. the amount of work that a hash table does to perform a lookup is at most some constant. Several data structure and algorithms problems can be very efficiently solved using hashing which otherwise have high time complexity. In this post, we will list out few problems that can be solved in elegant fashion using hashing, with significant economy of time and space.

We recommend to have basic understanding of how std::unordered_set and std::unordered_map works before moving to below Hashing Problems.



Thank you for being with us. ðŸ™‚|||

In this post, we will list out few Hashing problems that can be solved in elegant fashion using hashing, with significant economy of time and space.