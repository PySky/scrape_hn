ASUSWRT is a wireless router operating system that powers many routers produced by ASUS. Multiple exploitable vulnerabilities could be identified in the current version of ASUSWRT.

checks in the function if the requested file name is longer than 50 chars. It then responds with a redirection which allows an attacker to inject arbitrary JavaScript code into the router’s web interface context.

uses the function to validate if a user is logged into the admin interface by checking his value. There seems to be a branch which could be a failed attempt to build in a logout functionality.

If an attacker sets his cookie value to and puts into his header he will be treated as signed-in if any other administrator session is active.

It’s possible to execute arbitrary commands on the router if any admin session is currently active.

is responsible for generating a map of computers connected to the router. It continuously monitors the LAN to detect ARP requests submitted by unknown computers. When a new MAC address appears it will probe the related IP address for running services like printer sharing, http server and also iTunes servers.

This is implemented by sending out multicast SSP discoveries:

A device can then respond with messages which indicate the location of the iTunes service.

The function is responsible for parsing the SSDP answer:

( msg) { line, body, p; location ; host[ ], port[ ]; // the ip and port of the device ushort destport; data ; http_fd; nbytes; i; descri ; len; timeval timeout { , }; //search "\r

\r

" or "\r

" first appear place and judge whether msg have blank. ( (body strstr(msg, )) ) body ; ( (body strstr(msg, )) ) body ; ; p msg; ( p p body) { line strsep( p, ); ((strncmp(line, , ) ) (strncmp(line, , ) )) { location strip_chars( line[ ], ); location strip_chars( line[ ], ); ; } } NMP_DEBUG_F( , location); location ; i ; ( ( location ) ( location )) { host[i] location ; i ; } host[i] ; ( location ) { (location , i ; location ; i ) port[i] location ; port[i] ; destport (ushort)atoi(port); } destport ;

It contains multiple buffer overflows in the parsing code for host and port. This stack-based overflow can be used to gain control over ’s control flow by overwriting the saved stored on the stack.

will overflow and lead to being set to which is a starting point for further exploitation.

In order to develop a working exploit we gather further information of the system.

ASUSWRT is based on Linux which is running on a little endian MIPS CPU. The vulnerable program gets automatically started when the device boots and additionally gets restarted by the process if it crashes.

’s memory map is analyzed to continue exploiting the device.

The final exploit consists of the following steps:

For further details check out the full exploit: networkmap-pwn.py|||

Multiple Vulnerabilities: Cross-Site Scripting (XSS), Session Stealing, Remote Code Execution in ASUSWRT (CVE-2017-6547, CVE-2017-6548, CVE-2017-6549).