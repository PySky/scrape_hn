Load testing is very difficult to get right and probably one of the more exciting types of testing that one gets to do. The most popular load testing tool is Apache's JMeter but in my experience Tsung allows me to squeeze more juice out of my machines and the fact that it is very easy to setup makes it a winner in my books.

You can find instructions for all erlang supported platforms here and the instructions for installation on Ubuntu are as follows:

Note: There is a tsung package available for both Debian and Ubuntu, but using it can cause problems with mixed erlang versions so I would highly recommend simply building it from source. Also, when running a distributed setup please ensure that the erlang/tsung versions are exactly the same.

Setting up a tsung test scenario is done via xml, which is then executed to produce a series of output files which can then be used to produce a graphical report.

If you want to sample the actual traffic being generated to make sure it looks correct, use attribute on the top-level tsung tag, but do not use this for actual testing, because it slows down Tsung to a crawl.

As can be seen, one specifies the rate of arrival of clients and how long they remain, rather than specifying the number of simultaneous connections explicitly!

Before firing up Tsung you might want to make sure that your machines can actually generate a large amout of concurrent requests. For my case, I needed to up the number of open file descriptors for my system. This was done by editing to set the hard limit to 65000. You will need to relogin for the changes to take effect and the new limit can be set via . Now we're ready to run:

It takes some time to generate reports after the load is done, so be patient - for example, if you run the actual load-testing for 1 minute, then tsung finishes running in about 2.5 minutes. You can watch its progress by tailing the file in the output directory it mentions when you start it.

Tsung can generate an html report based on the log directory via the following:

You will probably want to run Tsung from separate machines to properly load test your production setup. To do this, you need to ensure that:

We can now extend the client list in our scenario as follows:

There is quite a bit more that Tsung can do for you, such as simulating actual user behaviour and actions but I think that this much should be enough to get you up and running for now.|||

A quick primer on load testing using Tsung, a simple yet powerful erlang based distributed load testing utility.