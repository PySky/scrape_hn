To install the packages on your system,

NOTE: Some of these packages are under development, and may occasionally make backwards-incompatible changes.

Release of a client library for Spanner. See the blog post.

Note that although the Spanner service is beta, the Go client library is alpha.

Alpha status: the API is still being actively developed. As a result, it might change in backward-incompatible ways and is not recommended for production use. Beta status: the API is largely complete, but still has outstanding features and bugs to be addressed. There may be minor backwards-incompatible changes where necessary. Stable status: the API is mature and ready for production use. We will continue addressing bugs and feature requests.

Documentation and examples are available at https://godoc.org/cloud.google.com/go

Visit or join the google-api-go-announce group for updates on these packages.

We support the two most recent major versions of Go. If Google App Engine uses an older version, we support that as well. You can see which versions are currently supported by looking at the lines following in .

By default, each API will use Google Application Default Credentials for authorization credentials used in calling the API endpoints. This will allow your application to run in many environments without requiring explicit configuration.

To authorize using a JSON key file, pass to the function of the desired package. For example:

You can exert more control over authorization by using the package to create an . Then pass to the function: snip:# (auth-ts)

First create a to use throughout your application:

Then use that client to interact with the API:

First create a to use throughout your application:

First create a to use throughout your application:

Then use the client to publish and subscribe:

First create a to use throughout your application: snip:# (bq-1)

Then use that client to interact with the API: snip:# (bq-2)

First create a to use throughout your application: snip:# (logging-1)

Usually, you'll want to add log entries to a buffer to be periodically flushed (automatically and asynchronously) to the Stackdriver Logging service. snip:# (logging-2)

Close your client before your program exits, to flush any buffered log entries. snip:# (logging-3)

First create a to use throughout your application:

Contributions are welcome. Please, see the CONTRIBUTING document for details. We're using Gerrit for our code reviews. Please don't open pull requests against this repo, new pull requests will be automatically closed.

Please note that this project is released with a Contributor Code of Conduct. By participating in this project you agree to abide by its terms. See Contributor Code of Conduct for more information.|||

google-cloud-go - Google Cloud APIs Go Client Library