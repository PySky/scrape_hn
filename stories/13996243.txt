For the most part of last year I was heavily getting into learning how to code. I started off with the basics on W3Schools and then moved on to Codecademy. Whilst all these tutorials that I took are yet to materialize into any job I’m happy that I devoted my time to the area. I enjoyed it and it’s definitely a relevant thing to at least know of. When someone mentions JavaScript or React in an article I’m reading on Medium, I’ll know (for the most part) what they are talking about. When PHP is mentioned in a job description for a content role I’ll have some idea of what is required and what I need to know in an interview. When I network with tech people I can keep up and even impress them with my technical knowledge. All of this is important.

When I had a peak “I want to be a developer” mindset I actually made a quick GitHub repository. I’ll explain how I did it below.

GitHub was another one of those things that was always mentioned in websites I browsed on the daily like Hacker News. It was something I had to know more about. I soon realised that GitHub was where you store code, to show the world how your website or your product works. GitHub is how you explain to someone asking what open source is. It’s kind of like showing someone a Beatles song to explain what mono is.

I did a little more digging and discovered that you can make websites using GitHub Pages as a host. There was this framework called Jekyll that was displayed at the bottom of its homepage and apparently this was the simplest way to get up your GitHub profile up and running. I decided it would be a fun side project to build something with Jekyll.

Firstly, I tried to learn Jekyll through the quick startup guide but that failed. I then did some more Googling and found this tutorial series on Tuts plus. It’s a perfect way for beginners to learn Jekyll as well as the command line. It requires an Envato premium account but this is only like $10 so it’s totally worth it.

Something I hadn’t realised about coding before starting this tutorial series is how integral Terminal is to developing applications and websites. I learnt how to git add, commit and push as well as into local files. In the tutorial itself you had to have a little bit of prior HTML and CSS knowledge otherwise your head would be spinning about halfway through. I got a little confused by things like liquid tags but you were able to copy exactly what the teacher was doing so this made it manageable. After a couple of struggles and minor tweaks to actually get the website running correctly I managed to pull it all off. Getting a side project 100% done is never easy so I was pleased with my efforts.

In the last few months I’ve realised I’ll never be a developer so to speak. But I’m comfortable in the knowledge that coding is not a skill that I need to be an expert on, it’s just something I can talk about and be interested in. It’s something that I can sell myself on in the employment process because it’s an interesting passion to have.|||

For the most part of last year I was heavily getting into learning how to code. I started off with the basics on W3Schools and then moved on to Codecademy. Whilst all these tutorials that I took are…