Here we are going to build a chat app using:

Since neither Siler or Ratchet require us to have a predefined folder structure, we can start working with then nicely mix our back-end code within.

If you have naming problems like me, check out Intel Codenames Picker.

Here I got (DowneyChat looks good), so let’s to it:

Here we magically got a running React app with its dependencies and front-end development facilities already loaded. Now we are going to get out back-end folks:

Don’t worry, , , and can all play together seamlessly.

You don’t need any previous knowledge on Ratchet, despite I really encourage you to have look on it.

This is our back-end, I’m naming it :

Pretty simple, right? Yeah, that’s Siler doing it’s thing. We are just declaring a callback to handle new clients and an callback to handle incoming messages then will send the given message to all connected clients. You don’t have to worry about the connected clients, Siler already does it for you.

In fact, now we have much more front-end code than PHP to build a chat app have you ever imagined that before? Don’t worry, not that much:

To bring up our chat server, run:

You should see the printed message: .

And to bring up our client code, run:

You should see:

It will already starts a new tab in your default browser and you should be seeing a “New connection” message, yeah, that is you. Type something in the input box and hit enter, the message should be listed right after. Open a new browser window, put them side-by-side and talk to yourself a little.

Feel free to ask any questions.

Thank you.|||

Since neither Siler or Ratchet require us to have a predefined folder structure, we can start working with create-react-app then nicely mix our back-end code within. If you have naming problems like…