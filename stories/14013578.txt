The first time the assertion runs, it doesn’t have a snapshot to compare the string with. The test runner generates a new snapshot and marks the test as incomplete.

Snapshot ids are generated based on the test and testcase’s names. Basic snapshots return a of the actual value.

Let’s rerun the test. The test runner will see that there’s already a snapshot for the assertion and do a comparison.

If we change actual value to “bar”, the test will fail because the snapshot still returns “foo”.

When we expect a changed value, we need to tell the test runner to update the existing snapshots instead of failing the test. This is possible by adding a flag to the command.

As a result, our snapshot file contains “bar” instead of “foo”.

Assertions are done using the method.

If you’re working with JSON or XML data, you’re better off using a dedicated or method, which will save snapshots as  of  files, and provide a better diff when the snapshot doesn't match.

Be default, snapshots are stored in a directory at the same level of the test class.

Snapshot ids and the snapshot directory’s name can be changed in by overriding and . Take a look at the readme for a more detailed explanation.

Drivers make the package extendable, without the interface snapshot assertions would be limited to JSON, XML and generic values with . A driver handles serializing and matching snapshot data. For example, if your application would make extensive use of YAML files, you could write a to save snapshots as real YAML files and improve PHPUnit's diff output.

Custom drivers can be applied by passing them to .

If you’re interested in a detailed explanation on writing custom drivers, they have a dedicated section in the readme.

There are a some tidbits that require polishing before releasing a first major version.

At the moment, there’s no way to determine which snapshots aren’t used and can be deleted. Old snapshots need to be deleted manually, a “cleanup” task would be welcome to automate this.

The flag needs to be specified after , which is meant to set custom php.ini values. PHPUnit doesn't support custom CLI options, but it might be added in a future release (sebastianbergmann/phpunit#2271)

Despite not having a stable version number, there most likely won’t be any large breaking changes anymore heading to v1.0.|||

The gist of snapshot testing is asserting that a set of data hasn’t changed compared to a previous version, which is a snapshot of the data, to prevent regressions. The difference between a classic…