The Holy Grail of reusable style frameworks is to provide ways to change colors easily. After all, sites need to match the brand identity. Exposing SASS variables like Bootstrap's , Foundation's , and Kendo UI's allow this. But what if scripts need the values of these variables?

We had this problem while developing Kendo UI for Angular. The styles of the charting package follow the theme design, with the same colors as defined in SCSS. Simply copying the color values in the chart scripts is duplication, and would make the charts look different if customers change the theme colors. So why not encode these variables in the CSS, and let the script read them from there? This creates a single source of truth for the colors - the SCSS code.

Here is the data that we needed to pass from SCSS:

Ideally, this should be its representation in JSON:

One way to tackle this problem is to have one selector per variable, following a pattern:

And the values can be extracted through the following script:

While inefficient, the above code shows that the approach is working, and works pretty good for a few variables.

Writing out every CSS rule gets tedious and is prone to typos. Why not generate the CSS?

Since we use the property to transfer the data, and it is always a string, it allows the script code to be simplified as well:

All these DOM manipulations - calling , setting - can get costly for the application startup time. How can the DOM code be reduced? If there is a more efficient way of passing information, and the code uses a single element. Luckily, there is such a way -- through the content of pseudo elements.

The above allows us to simplify the script code to:

And voila! JSON strings in CSS, read from scripts.

The above code has no dependencies, and is pretty straightforward to use. In Kendo UI, it simplifies the work of both the library developers and the library consumers, and makes switching themes a breeze. Other uses are perhaps theme customization tools that want to encode information about a theme in CSS.

Using this in your own projects? Let me know in the comments!|||

The Holy Grail of reusable style frameworks is to provide ways to change colors easily. After all, sites need to match the brand identity. Exposing SASS variables like Bootstrap's $brand-color, Foundation's $primary-color, and Kendo UI's $accent allow this. But what if scripts need the values of these variables?