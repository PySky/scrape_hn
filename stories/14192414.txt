I’ve always been looking for ways to improve my coding workflow. Trying different editors and adjusting the configuration in an attempt at finding that sweet spot. I’d wanted to switch to Vim, but I could never find time to grasp it. It was so different from everything I was familiar with.

Vim has a steep learning curve – it’s not a myth. Most editors have a single mode: you put the cursor where you need and start writing. Vim has six of them. Each offers different bindings and is meant to accomplish different things. Vim runs inside a terminal and is deeply integrated with console utilities. To make things harder, it doesn’t even enable mouse support by default. Basic things such as searching for files, moving between tabs or executing global find-replace actions become quite challenging. Here you can see the TypeScript workflow in Vim.

‘Why?’ you may ask:

Even though I knew all these perfectly sane reasons, I didn’t switch to Vim right away. I started with something different. In my editor of choice, I looked up a Vim-mode extension. This way, I got the core Vim features in an environment that I was used to. I could focus on mastering the cursor movement without worrying about other things.

It took me a week or so to get used to the Vim way of moving my cursor around. Of course, there were moments of frustration. Mostly when I needed to make some quick edits. Using the mouse was just easier. As time went on, I found ways to move the cursor exactly where I wanted more efficiently. I quickly became faster with the Vim-mode than I have ever been without it.

You have to be patient and hungry for knowledge. Try to understand default bindings. Most of the time, they are quite logical. There are multiple ways to do things in Vim – always challenge yourself to find the one that’s most efficient for you. Things will feel weird at the beginning, but after some time, you won’t even notice. It imprints itself into your muscle memory.

Let me give you some extra tips to help you get started:

I progressed with cursor movement and basic editing. However, everything else didn’t feel right with me still using non-Vim shortcuts. I was watching more and more Vimcasts and decided to take the plunge. Mostly because of Vim’s plugins. They have been created with Vim in mind. I found them very robust and polished. It took me awhile to get to the point where I was just as efficient as with my previous setup, but I’m very happy that I took the time and effort.

I can’t say that I’ve mastered Vim. I still have some old habits to work on. Sometimes, I have to use applications such as Google Docs. This is when I see how much faster I am with Vim, even when writing this blog post. I don’t have to think about reaching for the mouse and pointing the cursor to a specific position. In Vim, It just takes me a couple of keystrokes to get there.

These are the things that I found the most powerful in Vim:

Learning Vim is an investment into your productivity. Someone said that it’s like learning to play an instrument. I couldn’t agree more. Things are hard in the beginning. The hardest part is to give it some time. It’s really easy to go back to your comfort zone. Don’t do this, watch other people, find ways to handle repetitive tasks. Use a Vim-mode plugin in your editor of choice to switch to Vim in a familiar environment.|||

Have you been planning to switch to Vim but weren't sure if you can make it? Read a JavaScript developer's guide and get started with Vim smoothly!