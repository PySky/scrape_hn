Give guided tours of web application features the modern, dynamic way

Users who want to get up to speed quickly with a new web app — or with new features in an app they already use — typically aren't interested in reading long documents or guides. Product demos do a better job than static documents of holding users' attention while introducing and illustrating application functionality. Guided tours, especially, are effective because they explain and demonstrate product features while the user is working within the application.

The Intro.js library takes an innovative, interactive approach to documenting JavaScript applications. The library provides the required JavaScript and Cascading Style Sheets (CSS) files for creating step-by-step tours that walk users through a web app's functionality and features. Using Intro.js, you can integrate on-the-fly information into your apps that users can view while navigating in the app environment. The library integrates with AngularJS and Node.js to enable you to add instructional information from within your development environment. UI designers and JavaScript developers can both take advantage of Intro.js functionality and resources to enhance the value of their applications in a simple, modern, and dynamic way.

Intro.js functionality is easy to implement in any website UI. The library is free of charge, open source, and compatible with the latest versions of Internet Explorer, Chrome, and Firefox. This tutorial shows you the main Intro.js features and provides a step-by-step example of implementing a guided tour.

Next, we'll show you what the tour in our sample application looks like.

Our sample application prototype consists of a website written in JavaScript using Node.js and AngularJS. My Travel App helps travelers to manage their trips. Here's a look at the app's initial page:

My Travel App has a menu called Travellers Information for managing travelers, groups, and languages:

We created a new Launch Tour menu for running the three guided tours for My Travel App users — Getting Started, Navigate My Travel App, and Manage Travellers:

For example purposes, we've implemented only the Manage Travellers guided tour. (The Getting Started and Navigate My Travel App selections are placeholders only.) The Manage Travellers tour documents each step that users can take to manage their travelers, groups, and languages via the Travellers Information menu.

To give you a live demo of the tour functionality, we deployed My Travel App to IBM Bluemix, following the steps described in "Deploy a 'Hello World' webpage to Bluemix" to get started and then using our existing My Travel App project code.

Now we'll take you through the steps for using the Intro.js library to create the Manage Travellers guided tour in My Travel App. You can also follow along in our Creating the tour video demo.

Because the sample application uses Node.js and bower components, you can obtain the Intro.js library locally by installing it through the bower installer:

You can also add the Intro.js library to the bower.json package by including it in the dependencies section:

See the Intro.js project page on GitHub for more information on how to download and install Intro.js.

Here's how to include Intro.js code in an HTML page:

The values for , , and in the preceding code are specific to our implementation. We'll explain them in the following text.

The sample application uses AngularJS and a new controller — — that we created to store all the code related to the Intro.js library. The controller code:

See Download to get the code for .

Before defining the tour steps, the controller code defines a new variable, :

Now functions and events in the controller can reference the Intro.js library with the variable.

To specify the tour steps, you create a new Intro.js object. In this object, you define an array of objects that contains each step of the tour in sequence:

For each step, you must define:

The next seven screenshots and accompanying code segments show how each of the steps defined in the Intro.js object for the Manager Travellers tour is displayed in the tour via the , , and sequence.

The tour's initial step uses the following portion of the Intro.js object code:

The tour step for listing travelers uses this portion of the Intro.js object code:

The tour step for adding new travelers uses this portion of the Intro.js object code:

The tour step that explains Groups tab uses this portion of the Intro.js object code:

The tour step for adding new groups uses this portion of the Intro.js object code:

The tour step that explains the Languages tab uses this portion of the Intro.js object code:

The tour's final step uses this portion of the Intro.js object code:

In addition to the array of steps, you can define other elements — such as the labels of the buttons displayed on the tour and the use of an escape button to end the tour. Refer to the Intro.js library documentation for more information.

After defining all the steps for the Manage Travellers tour and the additional tour elements, we set the Intro.js object to the variable created before, using the method for this purpose:

In the HTML menu, specify both the controller and a function to be executed as the starting point for the tour. For the sample app, we specify the function:

The function contains the call to start Intro.js, which is all that you need to start the tour. Note that this tutorial also executes another function before starting Intro.js. The function, which uses JQuery, ensures that the correct menu of the application opens when the tour starts:

Users must be able to navigate the tabs of the Travellers Information menu while the tour is taking place, so we also define an event to ensure that the correct tab for each step is displayed while the tour is running:

To finish execution of the tour, we define and events to ensure that the tour ends correctly:

Finally, before using the new controller, you must declare it as a custom file in your EJS template file:

This tutorial introduced the Intro.js library's interactive, dynamic approach to user documentation and showed you all the steps necessary to create a guided tour using the library. It's easy to integrate Intro.js with any website — including, as we've shown, web apps running in the Bluemix cloud. Using Bluemix and Intro.js together can greatly enhance the user experience for your web applications.

We gratefully acknowledge Leonardo Faccio Demo for his help with deploying My Travel App to Bluemix.|||

Add easy-to-absorb, interactive user documentation to your JavaScript apps with Intro.js. Learn from a sample tour implementation how to demonstrate your application's features the modern way from within the app's UI.