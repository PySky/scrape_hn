Please note: The main version of this repository is https://bitbucket.org/atlassian/localstack, please raise PRs against that repo.

LocalStack provides an easy-to-use test/mocking framework for developing Cloud applications.

Currently, the focus is primarily on supporting the AWS cloud stack.

LocalStack spins up the following core Cloud APIs on your local machine:

Additionally, LocalStack provides a powerful set of tools to interact with the cloud services, including a fully featured KCL Kinesis client with Python binding, simple setup/teardown integration for nosetests, as well as an Environment abstraction that allows to easily switch between local and remote Cloud execution.

LocalStack builds on existing best-of-breed mocking/testing tools, most notably kinesalite/dynalite and moto. While these tools are awesome (!), they lack functionality for certain use cases. LocalStack combines the tools, makes them interoperable, and adds important missing functionality on top of them:

The easiest way to install LocalStack is via :

You can also spin up LocalStack without any installation requirements, using Docker:

You can pass the following environment variables to LocalStack:

If you pull the repo in order to extend/modify LocalStack, run this command to install all the dependencies:

This will install the required pip dependencies in a local Python virtualenv directory (your global python packages will remain untouched), as well as some node modules in . Depending on your system, some pip/npm modules may require additional native libs installed.

The project comes with a set of unit and integration tests which can be kicked off via a make target:

The Makefile contains a target to conveniently run the local infrastructure.

Then you can point your CLI to use the local infrastructure, for example:

If you are accessing the cloud APIs from within yout Python code, you can also use and use the parameter to connect to the respective service on . See for convenience methods to connect to the local services.

If you want to use LocalStack in your integration tests (e.g., nosetests), simply fire up the infrastructure in your test setup method and then clean up everything in your teardown method:

See the example test file for more details.

In order to use LocalStack with Java, the project ships with a simple JUnit runner. Take a look at the example JUnit test in . When you run the test, all dependencies are automatically downloaded and installed to a temporary directory in your system.

The LocalStack JUnit test runner is published as a Maven artifact in the Bitbucket repository. Simply add the following configuration to your file:

The projects also comes with a simple Web dashboard that allows to view the deployed AWS components and the relationship between them.

We welcome feedback, bug reports, and pull requests!

For pull requests, please stick to the following guidelines:

Please note that we need to collect a signed Contributors License Agreement from each individual developer who contributes code to this repository. Please refer to the following links:

Copyright (c) 2016 Atlassian and others.

LocalStack is released under the Apache License, Version 2.0 (see LICENSE.txt).

We build on a number of third-party software tools, with the following licenses:|||

localstack - A fully functional local AWS cloud stack. Develop and test your cloud apps offline!