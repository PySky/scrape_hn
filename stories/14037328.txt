I was talking recently to a friend who is working with the technical support team for a leading software product, he was complaining about an annoying bug for many users, which he reported to the development team several times but for some reason they didn’t fix it for a long time. Which made me think about how companies and software projects handle users feedback and even more important how they ‘prioritize’ them.

Apparently, One of the most practical ideas that agile software development methodology brought us is to do first feature programming then collect user feedback about it, then improve and deploy again and so on, the quicker you apply this cycle, the more successful and user satisfying your product/site is. I think we need to focus more on how to improve the feedback process since a satisfied and loyal user is the key factor of your project future, The first step could be easy by integrating simple project to collect user feedback, bugs and features requests.

How to decide which feature or bug to consider first?

The more the project user base grow, the more different opinions you can see in feedback tickets queue, Every user will complain that the issue he has is significant and development team need to fix NOW! or maybe that old version of browser X doesn’t support a particular feature. But that doesn’t mean that this ticket needs to be fixed immediately. The decision should be more about how many users have this issue so that the development time would have a value and real impact for the majority user’s benefit.

Looking into feedback tickets could be tricky, one user opinion not necessarily important issue or feature for the project sometimes not even from the development team point of view, but if 50% of users share the same opinion now, it should jump into the high priority queue. But it’s even hard to collect such a percentage.

Maybe user voting for the tickets would be helpful to set feedback priorities to focus on the important ideas, a good example for this could be what StackOverflow do for ranking questions.

This direction for some projects could lead naturally into different way of management thinking, for example considering feedback driven design, which was described more in an interesting podcast about handling user feedback on Windows 10 using Feedback hub.

How your team collects/prioritize users feedback? Share it in a comment!|||

I was talking recently to a friend who is working with the technical support team for a leading software product, he was complaining about an annoying bug for many users, which he reported to the…