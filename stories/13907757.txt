I got my XPS 15 on Friday and I've spent a whole fucking day trying to get it to work exactly like I needed. To be more specific, what I needed was:

I won't talk about the problems and minor annoyances (no home button... really?) that the machine iteslf has (I'll make a thread if and when Dell fixes this shit up).

 My XPS is configured as follows:

So let's get to it. This is what you have to do, from the moment you open the box until you finally have everything set up.

 I got the instructions for the dual boot part from here, so check it out for a more detailed guide.

Boot in Win10 and complete the initial setup.

 Apply all updates in Windows Update, apply all updates with the Dell utility that comes preinstalled, download BIOS updates from the Dell website.

 I also did most of the things listed here.

 I don't plan to be using Windows much, but I kept it anyway in case I'll need extra stability someday.

Shrink the volume to the desired size. If you do this from the Windows disk utility it will only allow you to shrink it by half: there are other tools out there to do it properly, but I didn't really care so I left it half the disk (you'll always be able to use the NTFS partition from Ubuntu anyway).

 If you want swap, use part of the unallocated space to create a swap partition now (you can do it by hand when installing Ubuntu but I did it at this point. Also, I'm not sure if the default install procedure of Ubuntu will allocate swap by default if there is no swap partition).

Disable hibernation and fast startup from within Windows by going into the advanced power settings.

 We now need to switch the SSD operation mode from RAID to AHCI (this is required to dual boot). First, enable safe boot by doing:

Now reboot and enter the BIOS by pressing F2 when the Dell logo shows up. Once in the BIOS:

Windows will now boot in safe mode. Restore it to normal mode:

Reboot again to check whether everything works fine in Windows.

Burn the .iso to a USB and insert it into the machine when rebooting. Press F12 when the Dell logo shows up and select the USB stick as boot medium.

 You'll boot into GRUB: here you can either test Ubuntu out or install it directly.

 When you eventuallly decide to install, it should prompt you to install alongside Windows: do that, and let it do its business until it prompts you to reboot.

 This will cause the PC to boot into GRUB when you'll power it on. In the past, I have managed to keep the Windows bootloader as main and use GRUB as secondary, but since I haven't really kept up with the UEFI stuff I have no idea of how to do this now (if someone posts in the comments how to do this, I'll add it to the guide).

This is the tricky part, and the one part on which I spent 20 continuous hours before coming up with a fairly simple solution.

 This will cause a lot of instability in the system (mostly random freezes at boot, log out, and shutdown. Also, for some reason it doesn't like it when I remove the charger and it freezes), so be aware. I'll try to update the kernel soon to see if the problems disappear.

First of all, this only works for Ubuntu Unity 16.04. It hasn't worked for me on Ubuntu Gnome (it would freeze at boot), nor on Linux Mint 18.1 (it would crash Cinnamon badly), so feel free to test whichever distro you like but be aware of this fact.

 Open a terminal and run:

Now go to "Additional Drivers" and enable the nvidia-375 driver and intel microcode: it may take a while because it's a big download, so let it do its business until it finishes.

 Remove the splash option from GRUB by running:

This is nececssary for when you reboot using the Intel GPU: if you skip this part you may have even more random freezes at boot and shutdown.

 Reboot.

This should be fairly easy, just go to the Tensorflow website and follow the instructions.

 Install CUDA 8.0 by downloading the .deb from the Nvidia website and running:

Get cuDNN v5.1 from here and run:

If you see the name of the 1050 printed out when running this code, it's working (yay!). Also watch out for packages that install tensorflow as dependecy, because those typically default to the CPU version and break the install (Keras doesn't tho, so you should be good).

You should have the nvidia-settings app installed (or the prime-select command in the terminal, if you prefer): use that to switch GPU in the "PRIME profile" section.

 It will prompt you to log out and back in everytime you change: I found it better to reboot altogether.

 To really make sure that the install is stable, make sure to switch GPU and reboot a few times both on battery and AC (freezes happen when the login screen pops up and when you try to shutdown the machine).

Not much to do here, the battery on this thing is massive so it's a good starting point.

 Install tlp:

and you should be good already.

 I keep the intel GPU as default for doing productivity stuff and only change to the 1050 when I'm debugging Tensorflow, and I get anything from 10 to 13 hours of Chrome surfing with brightness to 50% (the battery is brand new so it'll decrease in the future).

 Pycharm is a bit more power hungry so it drops the runtime to 7-ish, but it's still too soon to tell (I'll update these numbers in the future).

I've always been a gesture addict and it's the only real thing that I envy to rMBP users.

 Touch support on Linux is utter shit, the only thing that comes close is Fedora with Wayland and Gnome but good fucking luck getting the GPUs to work on that.

 We therefore have to settle for the poor man's gesture manager: touchegg (jk, cheers to the guy who created it).

 Install touchegg:

and add this to to blacklist the default touch manager:

Now open and edit the configuration to your likes. Log out and back in, and test the gestures.

 I have it set up to change workspace with three finger swipe L/R and display all windows ( ) on 3 fingers up.

Since we're talking touchpad, you might as well fix palm detection. Get the id of your touchpad with:

And add the following commands as startup applications:

Since this is being more of a ongoing process than a one-time thing, I'll add here the various fixes that I found to various bugs.

Laptop freezes when unplugging the power chord (yep, really)

 Revert back to using the 4.8.0-36 kernel. To do this:

Now when you boot you'll just have to press enter twice and you'll boot into the old kernel. You might as well uninstall the newest kernel but I'm still testing this one out so I can't recommend it yet.

 Also, if you run it will uninstall kernel 4.8.0-36 leaving you with the newest one.

Ubuntu does not detect headphones/external speakers

 Edit and ad the following line at the bottom of the file:

Now there should be no problems.

And that's all folks.

 Now install all your stuff and change the Unity theme because boy the default's ugly.

Here's a few things that I wasn't skilled enough to solve, but people might have a solution to. If you do, please comment below with a how-to.|||

I got my XPS 15 on Friday and I've spent a whole fucking day trying to get it to work exactly like I needed. To be more specific, what I needed...