Data Coding in Bash â€“ this is episode 4! Letâ€™s continue with some basic bashÂ best practices. Today Iâ€™ll show you 9 tips, that will make your data coding life in the command line much easier.

 This week Iâ€™ll also start experimenting with video format. Feel free to feedback in comments if you liked it or not. I first suggest to watch the video, and Iâ€™ll list the tools and commands below anyway. So you can jump on your Terminal and try them after watching the vid!

Note: If you are new here, I suggest to start with these previous data coding and/or bash articles:

Bash best practice #1

 Tab key: Any time when you start typing in the command line and you hit the TAB key, it automatically extends your typed-in text, so you can spare some characters.

Bash best practice #2

 Up/down arrows: They help you to bring back your previous commands. So if you misspelled something or if you want to do a small modification, you donâ€™t have to type the whole command again.

Bash best practice #3

 â€“Â» This bash tool prints your recently used commands on your terminal screen. (Pro tip: try it with ! Eg. will list you all the commands you have used and contained .)

Bash best practice #4

 CTRL + R or : It cleans your screen. Better for your mind, better for your eyes!

Note: First Iâ€™ve heard about the CSVKit bash toolsÂ in this book: Jeroen Janssen â€“ Data Science at the Command Line.

Then try and :

Bash best practice #5

 helps you to see your csv files in a much cleaner, much processable-by-humans format. Eg. hereâ€™s a short sample from our flightdelays.csv file:



Bash best practice #6

 gives you back some basic statistics about your dataset. Try:



Note: is unfortunately not so great with bigger files. So you canâ€™t use it for the flightdelays.csv for example, because that file is way too big.

Bash best practice #7

 Enter-enter-enter

 This will sound dummy, but I assure you this is a real problem and this is a real solution for it. This is what data scientists do, when they use command line in real life. The problem: when you a file on your screen, then another one right after, itâ€™s really hard to find the first row of the second file. The main reason is, that the prompt looks like every other line in your files. If youâ€™ve watched the video above, you have seen, that I colored my prompt. Thatâ€™s part of the solution, but to make sure IÂ will find the first line of myÂ second file, before the second I usually hit 10-15 blank enters.

As Iâ€™ve mentioned earlier, these articles of mine are just the beginning and theyÂ give you the approach and the basic bash tools. But on the long term I suggest 2 major ways to continuously extend your knowledge.

Bash best practice #8

 â€“Â» this is a bash command to learn more about specific command line tools. Eg. try:

 â€“Â» and you will get into the manual of . It works for almost every command. ( , , etcâ€¦) The good thing in it is that in each manual you can find a great list for all the options for the given command.

Best practice #9

 Googling + StackOverflow

 I know this is something I should not even mention, but still: if you have a question, you can be sure that someone has already asked it and another one has already answered it somewhere on the internet. So just donâ€™t forget to use Google first. Most of the answers are on a website called StackOverflowÂ â€“ by the way. If itâ€™s accidentally not there, Stackoverflow is still awesome, because you can also ask questions there. There are many nice and smart people there, from whom you will get an answer fast, so donâ€™t be shy! ðŸ˜‰

And eventually itâ€™s time to mention a great book about Bash!

 Jeroen Janssen â€“ Data Science at the Command Line

As far as I know, this is the one and only book that writes about bash as a tool for data scientists. It comes with many great tips and bash best practices! It assumes that you have some initial Python and/or R knowledge, but if you donâ€™t, I still recommend it. If you have read my Data Coding 101 articles about bashÂ so far, it wonâ€™t cause any issue the understand the most of this nice book!

Today we went through some great tools to make your job in bash cleaner, faster and smarter.

 Next week Iâ€™ll show you two major control flow components of bash: the command and the loops. (And they are even more important, as we are gonna use the same logic later in Python and R as well!) Update: hereâ€™s the new episode!

If you donâ€™t want to miss any of my new data contents (articles, videos, e-books, etc), subscribe to my Newsletter!|||

Data Coding in Bash - this is episode 4! I'll show you 9 bash best practices, that will make your data coding life in the command line much easier.