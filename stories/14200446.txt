This is an example on how you can build a Weather Chatbot on Facebook platform, using Ruby on Rails and API.AI

The technology stack we used is

(1) Able to return the “2 Hour Nowcast” when user asks for the current weather

User: “What’s the weather in Singapore?” Bot: “The weather in Singapore is {weather}”

User: “How’s the weather in Singapore?” Bot: “The weather in Singapore is {weather}”

User: “Is it raining in Singapore” Bot: “The weather in Singapore is {weather}”

You can try out the weather bot here: WBot By Robusttechhouse

Go to https://console.api.ai and register an account for you. Please note Api.ai cannot support collaboration yet so you may have to create a generic account to share among your team. Read https://docs.api.ai/docs/get-started and follow the steps there. Then, go to the settings in your wit app and get the token id.

Fortunately we have a nice Ruby SDK to the https://api.ai natural language processing service. You can find out more about this gem at here.

After that you can send text requests to the https://api.ai with command

Or try to invocate intent via defined ‘event‘:

For cleaner coding, I have wraped all the integration between our Rails App and API.AI within a single class. Create a new chat_service.rb file in /services. What we need to do is create a ChatService class and in it’s initializer, where we will set up a API.AI client

By doing this, when new message coming from an user, we can simply give user ID and the message to our ChatService class through the execute method which in turn will result in the @response_message

Note that you shouldn’t actually have your API.AI access client access token or any other token like it just lying around in code waiting to be put in version control. You should use the secrets.yml or application.yml (using Figaro) for development and environment variables in production.

Here is how we implement the execute method, please note there are lots of thing we can implement here to customize and improve the chat experience:

Note: WeatherService is a class within my services directory. This class acts as an adapter, connecting to 3rd party weather provider to fetch weather information given a specific location.

Head on over to the developer console and press “Add a New App”. After creating one, you can skip the quick start. You’ll end up here.

From here, you’re going to want to press “+Add Product” and add Messenger. After we configure a webhook, Facebook wants us to validate the URL to our application.

We’ll be using the facebook-messenger gem. It’s arguably the best Ruby client for Facebook Messenger.

Add below initialization code so that our Rails App can loaded the gem

I also have a Facebook Messager Service class, which main function is to handle the replying to the sender, wrapped within the deliver method:

Add to config/application.rb so rails knows about our bot files

One last thing is to update routes for /bot

Also, do not forget to set the env variables for the following

Now that we have a functional bot, we can play around with the UI elements that Facebook provides. You can check them out here.

With this post, I hope you can build a API.AI chatbot for your own. This is an interesting space as it’s fairly new, good luck!

You can find the example Rails app here: https://github.com/duc4nh/wbot-api-ai.git

Original article here. Brought to you by SingaporeChabots.sg. Want to build a chatbot? Drop us a note !|||

This is an example on how you can build a Weather Chatbot on Facebook platform, using Ruby on Rails and API.AI Go to https://console.api.ai and register an account for you. Please note Api.ai cannot…