Lumogon provides a way to inspect, analyze and report on your running Docker containers.

You'll need Docker installed and running locally. This should already be true if you have Docker containers you want to analyze with Lumogon.

Now that you have Lumogon installed, let's run it to find out which containers you have running and what we can learn about them. The output from a Lumogon scan will be a JSON listing of all the containers found and what Lumogon could learn about them.

Since JSON can be hard to read as one big unstructured message, you might want to use a "pretty-printer" like jq to print the data in a more readable format.

After a few seconds you should see your JSON data:

Since Lumogon's output is valid JSON, you can slice and dice it with , or pass it along to any other tool you use that can accept JSON input.

Lumogon provides an optional web service that can translate your JSON data into more human friendly reports.

The command generates the same data as , but sends it over HTTPS to the Lumogon reporting service and returns a URL to view your report.

The examples directory provides more thorough examples of how to use the data provided by Lumogon to test and build your images and containers.

Let's get the usage for the Lumogon client:

Feel free to explore those command-line options. Of note:

If you're making changes to Lumogon, or just interested in seeing how it works under the hood, you might want to try building from source. For this you'll need a few more things:

The terminal commands to do this are:

Note that this build process isn't widely tested away from macOS yet but will eventually work everywhere.

We'd love to hear from you. We have a Slack channel for talking about Lumogon and please do open issues against the repository.|||

lumogon - Get a complete picture of what your applications are made of *without* changing how you currently build and run containers. Just run and report.