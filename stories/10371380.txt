When I was little, my dad taught me everything I’d need to know to be, well, me. He taught me to code when I was twelve. I worked for him full time at 14, which we’re gonna pretend is totally great parenting for the purposes of this article. But before that, starting at around 9, he taught me how to sell.



My dad was a psychologist by training, but switched at the end of his master’s to marketing. Mostly because my mom said she wouldn't marry him if she beat him to finishing her degree, since he had a two year head start on her. So, he rushed through a few classes in marketing, and learned to do sales. Then, as a combination sales guy / hacker, he passed his skills on to me.

One of the techniques he taught me is emotional sales. I didn't realize it at the time, but this would shape my ability to teach and lecture well from the very beginning. You should use this too, in your next conference talk or training, because it’s an amazing way to introduce new information.

Most teachers are only able to get their students to retain 40% of the information they present, but I think this is due to the pitch. If people don’t understand the information in context as to why it is important, their brains will neatly file it away under “not important”, because that’s what our brains are trained to do. However, if you sell the new information like it’s a solution to a problem, our brains keep it top-of-mind for whenever that type of problem presents itself. It also lends itself to novel use better, because our brains try to pattern-match on problems, and if whatever you’re presenting is the solution for one problem, it might work for similar problems.

You probably know how your material will help the student, but they don’t. Picture a time in the future when your student will use the thing you’re teaching them. What’s the problem they’re trying to solve? Is the emotion associated with it positive, or negative? Start with this idea, you’re either making something bad go away (which is strong) or making something good happen (which is weaker).

Now, pick a memory you think a student has encountered. “When was the last time you were late to something because you couldn't find your keys” is a great example for a pitch for a product, and for education (especially in tech) it’s almost the same. “Remember the last time you spent hours trying to untangle your local git repository?” is a good for teaching a new git workflow, or “you know how a lot of your time is spent writing really basic SQL queries?” might be a good way to introduce an ORM. This is called picking an Associative Memory.

Now it’s time to grab their attention, typically with some humorous anecdote. Pick some specific details of the problem that bring the person’s association up strongly. “You spent 4 hours fighting with rebase, and ended up losing track of what you were trying to fix”, or “you end up creating mountains of unmaintainable code to get a few records out of a database”. This establishes you as “on the same team”, as someone who understands the pain they've gone through or what they’re trying to accomplish. It’s called Confirming The Schema. The more specific the details you talk about, the better the retention of the message, just make sure lots of people share that experience.

Now you Insert New Information — it’s time for the material. This is the part where the sales guy says “it doesn't have to be that way!”. It’s where you’d put statistics, like “in California it’s legal to keep your insurance documents on your smartphone”. In our example it’s a good time to introduce the concept- “Well it turns out there’s a tool for that- it’s called an Object Relational Mapper”, then you explain how it works. Give a brief overview of the concepts, don’t dive into specifics. This is the big reveal, so have some showmanship.

After the reveal, recall the Schema you established. Start explaining how the problems you talked about are solved with this new information. This part is called Rationalizing With Facts. In sales, this is where you would put your main argument. This is where the particulars become important, such as the actual syntax of the tool, or techniques you actually use to address the problems in the schema. What this really does psychologically is to satisfy the skeptic part of their brain that says “I don’t want to learn a new way to handle this”, but it also feeds the part that says “I’m excited to never have to deal with that problem again”. Explain how and why this is better and will make their lives easier.

Now it’s time for the exercise or implementation, called the Call To Action. Have a specific action item for your audience to do that demonstrates and cements that this is a real solution to their problem. This is really key to getting your material into long-term, problem-solving memory.

The last (optional) phase is called the Guarantee. This part is similar to Rationalizing Facts, in teaching it’s the best place to put other kinds of proof that aren't stuff you’d find in a textbook or documentation. Social proof, success metrics and special offers go here. For teachers, this is a great time to volunteer to answer questions or explain how you will be on-hand to help them with this. Finish by answering questions, which establishes credibility that you’re going to be there to make sure it goes smoothly.|||

When I was little, my dad taught me everything I’d need to know to be, well, me. He taught me to code when I was twelve. I worked for him full time at 14, which we’re gonna pretend is totally great...