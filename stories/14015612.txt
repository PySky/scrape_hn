Looking for an efficient codeless solution for UI testing automation? Meet Screenster, a new cloud-based platform that brings speed and simplicity to UI testing. Here are five reasons why we’re different from (and better than 😉) our competition.

Okay, we all know that every other UI testing automation tool boasts having a smooth learning curve. Here’s why Screenster is different: when we say our platform is easy to pick up, we mean it.

Screenster requires, precisely, zero programming skills. Instead of relying on scripted tests, the functionality of this platform revolves around record-playback and screenshot comparison. This allows manual QAs and product owners to cover the whole UI and test actual UX scenarios instead of hand-coding verifications. Now isn’t this what UI testing automation is all about?

When working on Screenster, we’ve put a lot of effort into making it accessible to non-testers. You don’t need to read manuals to automate basic UI tests, and most of the things are easy enough to learn while actually working with the platform.

… And I’m not talking about all those “hello, world!” mock tests. Take a look at the video below, and you’ll see how a basic UI test of Gmail can be automated in under three minutes:

Sure, something more complex will take longer — but even when it comes to automating complex tests, Screenster is pretty darn fast. Given that outdelivering your competitors is so important, speed is a must for any UI testing automation tool used in any real-life project.

More importantly, Screenster does a great job at eliminating maintenance pains. Thanks to Smart Maintenance, all of your test will always be up to date, and no test will break because someone renamed a class or an ID. But more on that later:).

When recording a test, Screenster captures the DOM tree of the UI and creates a list of locators for every UI element. It will automatically update these lists in case someone changes the code of your UI. As a result, your testers can forget about the “element not found” exceptions and move on to more challenging tasks.

Dynamic areas is another source of pesky little problems for testers — and, also, another thing that Screenster handles automatically. When doing the first run of a UI automation test suite, the platform will detect dynamic areas and offer you to ignore them. Simple as that :).

Finally, our “automate everything” roadmap includes timeouts. The platform automatically determines the right waiting time for each action. With Screenster, global delays are a thing of the past — and so are hand-coded explicit and implicit waits.

This is, in fact, one of the main reasons to choose a smart record-playback solution over a code-based tool like Selenium or PhantomJS. If you’ve ever worked with one of the latter, I’m sure you’ve noticed how they can only verify separate UI elements properties. But UI automation testing requires a more comprehensive approach that tests CSS layouts, images and visual aspects of the page.

With a record-playback tool like Screenster, a single test does both visual testing of the layout and the actions taken by the user. Tests of this kind focus on the visual side of the UI as a whole, not just its separate parts. These tests cover the layout, fonts, colors, paddings, margins, user input — as well as every other aspect of the UI.

UI testing automation has long turned into an activity carried out by teams, not individual testers. Given this, it’s surprising to see that only a few UI testing tools support collaboration as a major feature.

Being a web-based platform, Screenster offers QA and Dev teams to access all tests on a shared portal where tests are stored. Depending on the needs of a particular project, teams can use a shared server that’s either running on premise, or a cloud-based one.

There’s a lot that we can tell you about Screenster — mainly because we’re really proud about this product. Still, there’s only one way to actually see if this tool is able to meet your UI testing automation needs. Check out our free demo, and try automating a simple test for your website. Chances are you’ll like what you see:)|||

Looking for an efficient codeless solution for UI testing automation? Meet Screenster, a new cloud-based platform that brings speed and simplicity to UI testing