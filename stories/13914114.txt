Companies that don’t deliberately encourage their engineers to have side projects are missing out, big time. We need to change the way most businesses think of side projects. The best way to do that is to knock off the “don’t ask don’t tell” attitude, and openly talk about them much more than we do now.

There’s this backwards way of thinking that most companies believe, which is that once you agree to collect a paycheck they own you. Oh they don’t come out and say it exactly that way, but that’s how they operate.

Business owners know just how powerful an engineer with an idea can be. In today’s world, with our ability to release a new idea over a weekend (requiring zero capital), companies fear that if they let us run wild, we’ll invent the next Facebook or Airbnb and they’ll miss out on billions in revenue.

Most companies have a sort of don’t-ask-don’t-tell policy with regard to side projects. They know they’re happening, but they don’t want anyone to talk about it in the open. They like the benefits (more on that later), but they can’t officially encourage it because the lawyers or executives won’t let them.

When companies behave this way — often through one-sided contract clauses in new hire paperwork — all they do is drive their best engineers (and their ideas!) underground. Like it or not, side projects will continue to happen. You just won’t know about it.

Whether you “allow” it or not, every good engineer is going to have at least one side project going on at any point in time. They may not be in full-on startup mode, but you had better believe they’re day-dreaming about it.

“They’re going to do it anyway” isn’t a good reason to allow anything on its own. I point this out, however, to emphasize the point that most businesses are missing out on a massive opportunity: the creativity and curiosity that comes with being a top-notch engineer.

Curiosity and problem solving is what fuels us. We love to learn, and we learn best by doing.

There are more new technologies and ideas springing up every day than any one person could ever experiment with in a lifetime. We are constantly faced with having to decide where we want to focus our new attention. Shiny things are everywhere.

Trying new things and getting our hands dirty charges our batteries. It gets us excited and it keeps us going. If you’re lucky as an engineer, you’re working with exciting and new technologies every day at work. But for many (if not most) we have a job to do, and its not always glamourous. Side projects are what we do to to stay happy.

One of the reasons that companies fear side projects is they worry that some brilliant engineer is going to run off, steal your secret sauce, and compete with you. Its a pretty naïve attitude, when you stop to think about it. As any engineer who has tried to start a startup can tell you: building the thing is the easy part. Marketing and selling it, THAT is the hard part. We’re not going to steal your secret sauce.

Believe me, we’ve got more ideas swimming around in our heads than we know what to do with. The last thing we’re going to do is try to recreate what we already do at work. Much of why we play around with side projects is to take a break from our day jobs.

On top of all this, engineers are highly moral by nature. We deal with facts and data. The world tends to be more black-or-white to us because of this. We’re not the ones you should be worrying about. We want an honest day’s work for an honest day’s pay, and hopefully that comes with our idea of fun: puzzle solving and trying new things every once in awhile.

As a .NET guy, I felt stuck. Don’t get me wrong, I love C# — I had grown up on it — but I couldn’t shake the feeling that I was missing out on a world of other opportunities. Every employer I had worked for in my early years considered themselves “Microsoft Shops”, and they’d hiss and shield their eyes from anything that wasn’t officially blessed by Microsoft. I’m not hating on Microsoft — this was more a reflection on the poor judgment of the CTOs and VPs I’ve worked with than Microsoft — but it was common.

So what did I do? I stayed loyal to my employer during the day, and I started multiple side projects at night. Sure, I dreamt of starting my own company some day, where I could make my own rules (and my own mistakes), but I was only ever half-serious if I’m honest with myself. It was fun to daydream, but I never did anything dramatic.

In my case, I started out with Python because I kept hearing about it on Hacker News and met Guido at a local event one day. That led to trying out Ruby, then digging into how to properly run an Apache server, then NGINX, and eventually Docker. I dug into Mongo, and Cassandra, and several other NoSQL types. Memcache and how to properly scale followed soon after. I played around with jQuery, which led to a deeper curiosity about real JavaScript (as opposed to the random scripts I copied from around the web), and then Node, Angular, Backbone, and React. That led to jQuery Mobile, then PhoneGap, which led to Objective-C, Java (on Android), and mobile in general. The list goes on and on.

How many of these did I get to use daily at work? Zero (initially, at least). But I learned invaluable lessons, patterns, and concepts along the way. Eventually, they began to creep into my day-to-day in ways that made me and my boss look good. I was able to speak to new technologies and alternatives that we could be using. Some got shot down (for good reasons), and some were ultimately adopted. I am proud of many of the advances that were made at my previous companies, and they were due in large part to my experimentation and side projects.

I didn’t just fiddle around with these technologies either: I built real things. Some of them had actual paying users; most did not. It didn’t matter though. Every day, I took what I learned the night before and thought about how I could apply that to my current project. Not every little thing you learn can or should be applied to your current job, and I learned that. Some ideas and technologies were just shiny new things I wanted to try.

Whether they knew it or not though, every company I have ever worked for has benefitted from my side projects. Every single one of them had some kind of foolish clause in their new hire contracts that said something about them owning everything I invented. What a load of crap. If they want a dozen half-baked side projects, they can have them!

It is fair to argue that as an engineer, your job is to stay up-to-speed on the latest and greatest. While that is true for your more experienced engineers and architects, its naïve to expect that from the less experienced. On top of that, engineers with uninteresting day jobs are not going to go out of their way for you. Sorry. You don’t pay them enough (in both money and exciting projects).

Your best engineers have side projects, because the best engineers are driven by curiosity and a desire to always be learning something new. Given that they are your best engineers, they’re giving you all they have during the day, and don’t have the time to go off and learn something new on the company’s dime. Explicitly allowing them to experiment without fear of their hard work being stolen is a reward in itself.

Less experienced engineers can dramatically boost their career by going out and actually building new things. Companies that discourage side projects are shooting themselves in the foot. I find it highly ironic when I hear about a company that is trying to put together a career path plan for their engineers, yet discourage any sort of entrepreneurial behavior via side projects.

The best way to gain knowledge is through experience, and some of the best experience in my career has come through side projects. I have five pages of half-baked projects on BitBucket. Some of them have been released into the wild, but most of them are just experiments. I am not a special snowflake. You had better believe that your best engineers are doing the same thing.

A startup mentality is not just good for startups. An entrepreneurial mindset benefits anyone in any position at any size company. Empathizing with the customer, proper prioritization, not over-architecting, proper discovery, a sense of urgency, not taking anything for granted, and making data-driven decisions are all critical to succeeding as a startup. Why in the world wouldn’t you want to encourage these same concepts in every single department within your company?

Some side projects turn into actual businesses. Great! Don’t discourage those either. We all know the odds of a startup actually succeeding (particularly bootstrapped startups), and they’re miniscule. Employees who manage to reach escape velocity should be celebrated! Your mentorship and guidance probably helped them get there. You should be proud! I guarantee that they shared a ton of what they were learning along the way to help you and your team.

The worst engineers are those that stagnate or fall into a rut, becoming nothing more than giant cogs in a corporate machine. Curiosity and an entrepreneurial mindset are crucial to not falling into that rut. If you can’t offer your engineers the opportunity to scratch that itch at the office, encourage them to play around with things at home! Don’t avoid it. TALK about it. Bring it up in your one-on-ones and see what advice you can offer. Perhaps paradoxically, their loyalty to you and your company will increase dramatically as you help them dream about one day not working for someone else.

As you talk openly and honestly about side projects, your engineers will become more and more excited to share what they’ve learned with you. As you show more genuine interest in their curiosities, their loyalty will grow as well, and they will be more and more likely to just try random things that could really only benefit the company.

Many of the projects I have led over the years started out with me playing around with one of my own (seemingly unrelated) ideas, which then evolved into something valuable for my employer. If an engineer comes up with an idea that could either 1) someday maybe turn into a successful startup, or 2) immediately have an impact on their reputation or career at their current employer, a significant majority will choose to share what they’ve learned or invented in order to boost their career and reputation.

Stop worrying, and start celebrating the curiosity of good engineers!

So lets stop dancing around the issue of side projects. We all have them, and nothing you do will stop that. You don’t want to stop that. It is promising to see that some states and countries are more aggressive about stopping employers from claiming that they own every minute of their employees’ lives, but we still don’t talk about it enough.

We need to talk about it more, and more openly. If you are an influencer in your company, bring it up and point them to this article. We can’t expect change overnight in the IBMs of the world, but startups and small businesses can lead the way. That is exactly how the Lean Startup movement began, how Agile methodologies took hold, and so many other innovations. This is just one more evolution in the process of recognizing and democratizing the practice of coming up with good ideas. Not all good ideas come from the top. Some of your best ideas will come from the people closest to the metal: your engineers.

Its time to stop dancing around the issue and (dare I say it?) encouraging it!|||

Companies that don't deliberately encourage their engineers to have side projects are missing out, big time. Here's how to change...