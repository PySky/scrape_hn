At Keen IO, we provide the Explorer to help our customers quickly analyze and visualize their data. However, sometimes we can’t analyze or visualize data the way we want to using the Explorer. When I run into this problem when I’m analyzing Keen IO data, I turn to Python.

One of the tools I use regularly to analyze our own data is Jupyter Notebook, a browser application that allows data scientists to run Python code in an interactive environment and create inline visualizations. I use this tool often because I can quickly visualize and tweak multiple queries at once using Python, and I can also easily share those results with others. If my teammates need a slightly different analysis, they can easily copy my example and modify it to their own needs. Additionally, Jupyter Notebook is a great way to document how we’re analyzing our data.

Over the next few weeks, I’m going to share some of the ways I use Python and Jupyter Notebook to analyze and visualize my data. In this post, we’re going focus on setting up Jupyter Notebook and making queries with Keen IO’s Python client.

Follow the installation instructions on the Jupyter Notebook. After you’re done installing Jupyter Notebook, use pip to install Keen IO Python client.

We’re going to be looking at earthquake data that I’ve been storing in a Keen IO project. Insert in your command line, run it, and create a new Notebook project. Set up a client object in Python so we can query data using the project id and read key provided in the example below.

Run a simple query to test if everything’s working. In the example below, we’re getting number of earthquakes from the time range we’ll be working with (October to February).

That’s it! We can run all the types of queries in our Python environment. For instance, if we wanted the number of earthquakes by day, all we need to do is add a line to the query above:

Because we’re just dealing with Python objects, we can just use Python code to quickly get us answers about our data, like minimum and maximum number of earthquakes per day.

We’re only scratching the surface of what we can do with Python and Keen IO. You can clone this project and analyze your own Keen IO datasets! Next time, we’ll talk about how to visualize the data we’re getting back from Keen using Matplotlib.|||

Jupyter Notebooks with data from Keen IO can be a very handy data exploration tool — here’s how to get it running earthquake data in just a few minutes!