When Redis is used to cache large amounts of items, the least frequently used items can take most of the memory.

This proof of concept written in LUA allows to set 2 expiration dates for each item:

This will address the situation where the long tail takes most of the memory:

A search engine uses Redis to cache query results. Each search can be cached with a normal expiration of 600 seconds and a pre-expiration of 60 seconds.

We have 2 searches: and .

will be searched more than once every 60 seconds and it will expire at its normal expiration (600 seconds).

is an uncommon search query and will not be searched again within the first 60 seconds. It will expire early.

Output is similar to GET|||

redis-expire-least-used - Redis 2 step expiration tool to pre-expire least used items on a Redis server