This project is new and the API may change.

In general, for non-browserify based environments, make sure you have read the instructions on the mapbox-gl-js README.

react-map-gl provides an overlay API so you can use the built-in visualization overlays, or create your own.

Built-in overlays are: , , , and . They are imported using

deck.gl is a companion module to that provide a number of classic data visualization overlays (scatterplots, choropleths etc) implemented in WebGL. These overlays are suitable for large and/or dynamic data sets, or for use in perspective mode applications.

Third party overlays can also be created. For example, the heatmap-overlay uses webgl-heatmap to create geographic heatmaps.

Want to create and share your own overlay? Fork the react-map-gl-example-overlay project to get started.

Perspective mode is exposed using the and props (both default to ), which will show the map "tilted" degrees (overhead being 0 degrees), looking towards (0 degrees is north).

In addition, the prop (default: ) will activate mouse handlers that allow the user to change and using the mouse while holding down any function key {command, shift, ctrl, alt}.

If is not set to then the user will not be able to change the pitch and bearing, which means that the default props will show an overhead map and only enable standard pan and zoom mouse actions on that map.

does not expose the transition API for since it is designed to be a stateless component.

Instead it is recommended to use a separate module like react-motion to animate properties.

The property of the as well as several of the built in overlay properties must be provided as ImmutableJS objects. This allows the library to be fast since computing changes to props only involves checking if the immutable objects are the same instance.

If you're using redux, it is relatively simple to hook this component up to store state in the redux state tree. The simplest way is to take all properties passed to the function property and add them directly into the store. This state can then be passed back to without any transformation. You can use the package redux-map-gl to save writing this code yourself.

Install project dependencies and check that the tests run

Note on yarn: does not appear to be compatible with v0.31, in terms of installing correct versions of dependencies needed to run test scripts in the folder. While this is likely to change, for now it is recommended it is recommended to use in the root folder of . This restriction only applies when installing in the root folder; is still supported and recommended when installing the examples in the folder.

Then start the main example in by running the shortcut

This should open a new tab in your browser with the examples. To make the maps load, either:

Contributions are welcome. It can be helpful to check with maintainers before opening your PR, just open an issue and describe your proposal. Also, be aware that you will need to complete a short open source contribution form before your pull request can be accepted.|||

react-map-gl - React friendly API wrapper around MapboxGL JS