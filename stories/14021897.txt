Logical replication support for initial data copy   Add functionality for a new subscription to copy the initial data in the tables and then sync with the ongoing apply process.   For the copying, add a new internal COPY option to have the COPY source data provided by a callback function. The initial data copy works on the subscriber by receiving COPY data from the publisher and then providing it locally into a COPY that writes to the destination table.   A WAL receiver can now execute full SQL commands. This is used here to obtain information about tables and publications.   Several new options were added to CREATE and ALTER SUBSCRIPTION to control whether and when initial table syncing happens.   Change pg_dump option --no-create-subscription-slots to --no-subscription-connect and use the new CREATE SUBSCRIPTION ... NOCONNECT option for that.   Author: Petr Jelinek Logical replication support for initial data copy Add functionality for a new subscription to copy the initial data in the tables and then sync with the ongoing apply process. For the copying, add a new internal COPY option to have the COPY source data provided by a callback function. The initial data copy works on the subscriber by receiving COPY data from the publisher and then providing it locally into a COPY that writes to the destination table. A WAL receiver can now execute full SQL commands. This is used here to obtain information about tables and publications. Several new options were added to CREATE and ALTER SUBSCRIPTION to control whether and when initial table syncing happens. Change pg_dump option --no-create-subscription-slots to --no-subscription-connect and use the new CREATE SUBSCRIPTION ... NOCONNECT option for that. Author: Petr Jelinek

Some time ago I wrote about support for logical replication in PostgreSQL 10, and noted that it lacks support for sending initial data state.

This was solvable using some semi-clever tricks, but was a pain. Now, supposedly, the problem is gone. Let's see if it really is the case.

Just like previously, I ran master on port 5100, and slave on 5101, and made my psql prompt obvious about where I run the queries:

So, let's create the example table, and some data:

Then, I need to create the table on slave:

With this in place, let's create publication on master:

and now on slave, let's subscribe to it:

Nice. Data is copied automatically, by default. What about changes?

and a moment later on slave:

Nice. There could be a case where you don't want to copy initial data. In such cases CREATE SUBSCRIPTION has option NOCOPY DATA that will bring back previous behavior.

Great. This is really, really amazing. Thanks a lot Petr (and all other involved).|||

