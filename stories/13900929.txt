At least in technology, my field, we find ourselves exposed to many unknown situations every day. These situations (also called challenges or problems) are happening for several reasons - we work with cutting-edge technology that is not yet solid or frequently evolving; situation only happens under unexpected conditions; we want to disrupt the current environment and try to go beyond the limitations.

Before we continue it is important to remark the difference between experience and expertise. Experience can be defined in a very simple way as knowledge/skill gained over years, expertise is the same but irrelevant of number of years.

Usually tech teams, my specialty, are recruited and organized based on field expertise which in many cases a is direct factor of seniority (years of experience). The logical thinking says: the more field expertise the better (also more expensive).

This article tries to justify that until certain extend the mentioned logical thinking should not be always applied, at least while setting up a tech team.

One of the most difficult decisions while building technology, my passion, is to choose which approach to take because technology offers you almost endless options to tackle it. Sometimes having multiple options add more complexity to solve the problem - you might want to assess pros and cons of all/many of them.

From all the legacy projects I have inherited during my working career, 100% of them they could have been solved in a more simplistic way - without loosing any functionality, making easier to maintain and to scale. Taking the projects were time/speed was not the top constraint for the decision, we find the following common mistakes: they didn't spend time on simplification, they ignore/discarded more simple approaches or they took literally common practices without challenging if it was actually necessary to implement it.

During the past 4 months we have been working in what we believe is the next big thing for our company. We had a clear idea of what we wanted to achieve and the only challenge was, as usual in any start-up, we didn't have the field expertise in house.

Since we considered this project the core piece of our future growth and we didn't have the initial rush of 2014 (no time/speed constraint), we decided to do things in the right manner. First step was to dedicate time and budget to find the field expertise we were missing to build a consistent, simple and scalable solution. Thus ensure we have a solid ground for the future and we can iterate on top of it.

After hiring experienced consultants and reaching external professionals through our network, all of them with more experience and expertise than us, none of them were able to reach a solution close to what we could consider an starting point to discuss. Solutions were either not scalable, too complex or not compatible with our current structure.

Finally we decided to ignore all the proposed solutions and dive deep into the challenge by our own. After big amount of trial/error, very long frustrated days and multiple retro engineering rounds we managed to come up with a solution that we believe only 10% of senior field experts would have came up with.

We believe that thanks to our ignorance beforehand on existing patterns and limitations, challenging every single step - thinking that we just scratched the surface and keep trying harder we gained our expertise. The alternative would have been to accept a boring, complex and expensive solution that we would had to deal with for the next 10 years.

This experience helped us to prove that it is a good practice to incorporate in senior teams some less senior profiles - who are ready to explore, wild enough to not foresee limits and resilient enough to research until the last drop of sweat. In one sentence, sometimes muscle can beat knowledge.|||

