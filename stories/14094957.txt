Powerful Javascript Middleware Pattern implementation, apply middleweares to any object. A painless solution to make codes as scalable and maintainable as ReduxJS and ExpressJS.

Middleware functions are functions that have access to the target function and it's arguments, and the target object and the next middleware function in the target function cycle. The next middleware function is commonly denoted by a variable named next.

Middleware functions can perform the following tasks:

If the current middleware function does not end the target function cycle, it must call next() to pass control to the next middleware function. Otherwise, the target function will be left hanging.

and import it in your files

Then we define a middleware function to print log.

Now we apply the log function as a middleware to a Person instance.

Whenever a Person instance call it's walk method, we'll see logs from the looger middleware.

We can also apply a middleware object to a target object. Middleware object is an object that contains function's name as same as the target object's function name. Function's name start or end with "_" will not be able to apply middleware.

Or we can use to define function names for middleweare target within a class.

Apply (register) middleware functions to the target function or apply (register) middleware objects. If the first argument is a middleware object, the rest arguments must be middleware objects.|||

js-middleware - Powerful Javascript Middleware Pattern Implementation, apply middleweares to any object.