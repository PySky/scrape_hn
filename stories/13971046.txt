It’s only March, but already IBM leads the software industry in gasbaggery.

Gartner’s most recent Magic Quadrant for Data Science Platforms includes this little gem:

That’s a polite way to say that IBM marketing messages have enough hot air to float a fleet of balloons over the Bernese Alps. With payloads.

Anyway, they do if they’re still using SPSS.

Wow, automation! The Holy Grail of machine learning. Sounds great! But can IBM deliver?

After eighty-eight minutes of visionary gibberish, we get to the product. According to the press release, IBM Machine Learning is cognitive. And automated:

It reminds me of that scene in the first season of Mad Men, when Don Draper develops the tagline for Lucky Strike.

The product page is more circumspect. The words “cognitive” and “automated” do not appear. That gives cause for suspicion right there — IBM’s legal team carefully scrutinizes product copy for exaggerated claims, so the gasbaggery falls by the wayside.

Fortunately, we can judge for ourselves by watching the “live product demo,” which you can see at 1:28:06 in this video.

In the demo, an IBM tag team, who we shall call Mr. Businessperson and Mr. Data Scientist, pretend to be bankers.

Mr. Businessperson has a problem. His boss worries about customer churn.

Stop right there. Smart banks stopped obsessing about churn around fifteen years ago when they learned that there is no cost-effective way to retain a customer once their behavior signals that they are at risk to leave. It’s not a prediction problem — it’s a what-do-we-do-with-the-prediction problem. The focus in CRM shifted long ago to building relationships over the long term rather than begging customers to stick around until the end of the quarter, so our bonuses don’t get hammered.

I know, it’s a digression. But it tells you something about the depth of IBM’s playbook. They’re recycling stuff from 1998.

Returning to our “live product demo,” Mr. Businessperson asks Mr. Data Scientist for information about customer churn.

Sure, I’ve got that, says Mr. Data Scientist. He opens his Thinkpad and shows everyone the Jupyter notebook he used to run some churn analysis with Scala and Spark before this Potemkin demo started.

It must be the magic of automation.

Mr. Data Scientist shows everyone his Scala code, which undoubtedly excites the large population of bankers who write Scala.

But I need more insight! Says Mr. Businessperson. I need to know who is churning and why!

No problem says Mr. Data Scientist. He scrolls down in his notebook to show more of the stuff he ran this morning.

At which point I spray my coffee.

But insight is not enough! Says Mr. Businessperson. I need predictions!

Hold my beer, says Mr. Data Scientist. He brings up another window. Looky here, he says. Here’s all our data, nicely cataloged. All I have to do is check this little box. Conveniently, the data is already denormalized, aggregated, and cleansed, with external data appended. The servants did it, I guess.

Next, Mr. Data Scientist proceeds through some web pages that look like visual front-ends for Apache Spark, with widgets for each Spark feature. He shows us some transformers and algorithms that he selected before the demo.

All of this undoubtedly excites the large population of bankers who know the difference between a StringIndexer and a VectorAssembler, or between a Multilayer Perceptron and a Naive Bayes Classifier.

Finally, he jumps straight to the results he ran this morning.

Wow! says Mr. Businessperson. That was easy!

IBM showed video of a similar demo at Spark Summit Europe. Except they forgot to edit out the splash pages that said running algorithm — ten minutes remaining. Ten minutes to run one model, so a typical hyperparameterization experiment will take, oh, about seventeen hours.

Here’s a flash quiz. You’re managing the development of a hot new machine learning product that will disrupt the industry. Which of the following platforms would you choose?

If you chose “IBM Mainframe,” you’re probably an IBM employee. Yes, I know. “It’s not your father’s mainframe.” Just remember, GM used that line for Oldsmobile just before they pulled the plug.

Now, put yourself in the shoes of the IBM product leader. Why would you possibly want to launch this software on the mainframe? I can think of three reasons:

— (1) CEO Ginny Rometty is sick and tired of double-digit declines in mainframe revenue and wants the Analytics crew to Flog Big Iron.

— (2) IBM has a slew of customers stuck with underutilized mainframes, and Armonk wants everyone to figure out what to do with them before they go to the scrap yard.

— (3) Something about this software forces IBM to launch it on proprietary hardware.

Note that the reasons aren’t mutually exclusive. But you could do (1) and (2) concurrently with a Unix/Linux rollout, which would make more strategic sense.

On the other hand, if the actual reason is (3), a simultaneous launch on other platforms is impossible.

Thus, I suspect this software can’t run anywhere except on a mainframe — at least, for now. IBM tries to position this bug as a feature, arguing that mainframes are the logical platform for machine learning because they are “the operational core of global organizations where billions of daily transactions are processed…”

It’s a nonsense argument. Nobody runs machine learning directly in an operational data store: the DBAs won’t allow it, the data is crap, and we don’t want to bring down the ATMs by running a genetic algorithm. You’re going to copy the operational data somewhere. It makes very little difference whether you copy it to another mainframe, copy it to a data warehouse appliance, or copy it to Hadoop — you’re still moving data. So, you might as well move to an analytics platform that makes sense.

IBM’s logic is a classic example of what Marketers call “merchandising a disadvantage.” Like the fish merchant who tells you that rotten herring is a delicacy.

When an IBM Seller calls and asks you to consider “IBM Machine Learning,” the first thing you should do is ask: which IBM machine learning product do you mean?

You’re trolling her of course. Because you know that IBM has umpteen machine learning software products, and she only knows about one of them.

If the answer is “IBM Machine Learning for the IBM Mainframe” ask: when will the software be available on commodity hardware? Remind her that many machine learning platforms already run on commodity hardware – including actually automated platforms.

When she tries to tell you that it makes sense to put machine learning on the mainframe because it is “the operational core of global organizations where billions of daily transactions are processed…”, Ask: why? See above for why it doesn’t make sense at all.

If you happen to have a spare IBM mainframe computer sitting idle, ask the rep whether IBM Machine Learning is a product or a service offering. Pay attention to this detail in the Gartner report:

That explains what makes this product “cognitive.” You have to rent Mr. Data Scientist.

Before you invest, consider this caution from Gartner:

Tell your rep that you are willing to forego cars that read your mind and shopping carts that fill themselves if you can have technical support that doesn’t suck.

Smile when you say all this, and be kind. She’s an IBM Seller and has to push what the company offers.|||

It's only March, but already IBM leads the software industry in gasbaggery. Gartner's most recent Magic Quadrant for Data Science Platforms includes this little gem: Customers are often confused by mismatches between (IBM’s) marketing messages and actual, purchasable products. That's a polite way to say that IBM marketing messages have enough hot air to float a fleet…