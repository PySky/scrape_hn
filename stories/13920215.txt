An easy way to get the device's current location and geographical region monitoring on iOS(swift).

LocationKit provide asynchronous block-based way to get the current location and region monitoring. It can manages multiple simultaneous location and region requests. Each request can specify its own setting like detect type(Once, UpdatingLocation, or SignificantLocationChanges), accuracy level, detect frequency, and distance filter.

Check out Get Started tab on cocoapods.org.

To use LocationKit in your project add the following 'Podfile' to your project

Copy the LocationKit Directory to your project. Go ahead and import LocationKit to your file.

Please check out the Example project included.

Before using LocationKit, you must configure your project to use location services. Apparently in iOS 8 SDK, requestAlwaysAuthorization (for background location) or requestWhenInUseAuthorization (location only when foreground) call on CLLocationManager is needed before starting location updates. Open , and add the following lines~

The string value which you add will be shown when your app try to use location services at the first time.

First, create a new LocationManager instance and set the requests permission to use location services.

Get the device's current location(.Once style), then stop service automatically.

Get the device's current location(.UpdatingLocation style). You must stop service manually.

You can set distanceFilter, locationAccuracy, and detectFrequency properties.

You can get current location ever 5 seconds if you move more than 10 meter

If you use the .SignificantLocationChanges detectStyle to get location, this request will response new event only when it detects changes to the device’s associated cell towers, resulting in less frequent updates and significantly lower power usage, even when your app is terminated.(need requestAlwaysAuthorization requestAccess)

You don't need to set the locationAccuracy and detectFrequency properties.

You can easily to be notified when the user crosses a region based boundary. LocationKit provide three region monitoring way.

First, you need to create region list which you want to monitior.

It is a standard region monitoring way by didDetermineState function(.MonitoringRegion style). In this way, you can monitor region even when your app is terminated(need requestAlwaysAuthorization requestAccess). But, please note that there's a limit of 20 regions that can be monitored at the same time.

You don't need to set the locationAccuracy, distanceFilter and detectFrequency properties.

In this way, you can monitor more than 20 regions(.UpdatingLocation style). But, please note that can't monitor regions when your app is terminated.

You can set the locationAccuracy, distanceFilter and detectFrequency properties.

In this way, you can monitor more than 20 regions even when your app is terminated(need requestAlwaysAuthorization requestAccess). But this request will response new event only when it detects changes to the device’s associated cell towers.

You don't need to set the locationAccuracy, distanceFilter and detectFrequency properties.

You can set the requests permission by LocationManager instance.

.requestWhenInUseAuthorization //when in use

You can use to stop all location service.

Or, you can create an identification service

Now, you can stop this service by identification name.

You can get the change event by authorizationChange block

When you create LocationManager instance, the default number of managed location service is ten. You can easily get multiple simultaneous location service response.

If you want LocationKit to manage more than ten simultaneous location service, you can set the detect instance number.

LocationKit is available under the MIT License.|||

LocationKit - An easy way to get the device's current location and geographical region monitoring on iOS(swift).