rdrp uses Multicast DNS to enable peer-to-peer discovery between clients. This means that rdrp will likely not work in most cloud/virtual environments.

When a client first connects, they're registered as a new instance on the service. Each sender continuously browses this service for newly connected broadcasters with whom they'll establish a connection and attempt to send their respective file.

Read more about mDNS: RFC 6762 and DNS-SD: RFC 6763.

There's two parties involved in a single transaction: the sender and the receiver. To send a file over your local network, use the command. Provide the file path with the flag OR pass the file's contents via stdin. Every broadcaster will receive a request to transfer the file. This process continues until aborted (Ctrl+C). $ rdrp send -help Usage of send: -file string File to transfer -name string Connection name -send-to value Comma-separated list of client names To broadcast yourself as a receiver (i.e. someone receiving a file), use the command. You'll be listening for incoming requests. Upon a new connection, you'll be prompted on whether you'd like to accept the file or not, just like AirDrop. The incoming file is copied to stdout. $ rdrp broadcast -help Usage of broadcast: -name string Connection name Note that each role has an optional name flag, if not provided, a name is chosen randomly (which is what happened in the demo above). You can also view all connected clients with . Use to specify the type of clients to list and to listen for new connections. $ rdrp list -help Usage of list: -type string Type of client ("broadcast", "send", or "all") (default "all") -watch Listen for new connections (use Ctrl+C to exit)

This project is completely open source, feel free to open an issue or submit a pull request.

Before submitting a PR, please ensure your changes comply with Golint, use to test this.

The demo GIF was generated by asciinema, with tmux (recording tmux sessions with asciinema).|||

rdrp - A cross-platform command line tool for sending and receiving files over your local network, inspired by AirDrop.