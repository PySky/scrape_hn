At Quora, as our product continues to grow—to over 100M unique users per month, launching in a second language, and a new advertising program—so too has our engineering organization grown. It's now reached over 80 people and counting, and while we're not at the tens-of-thousands size of some of our Mountain View neighbors, in recent months we've needed to fine-tune some elements of our organization to stay in a good position to scale and continue growing. In this post, I'll give a quick overview of how our engineering organization is structured, and then focus on one part we're particularly excited about: our Engineering Guilds.

Product teams

 

The main divisions in our organization are product teams. Product teams include everyone needed to work on a development area, which includes engineers, product managers, designers, and data scientists. These teams are in charge of owning both maintenance and innovation within their product area, and they grow and change to reflect changing company-wide priorities and strategy. For example, a few months ago, we started a new Ads team to implement our monetization strategy based on advertising.

 

Some product teams are focused on user-facing features, such as search or feed ranking, while other product teams focus on strictly technical aspects. For example, our Platform team is in charge of developing tools and abstractions to improve the productivity of the rest of the development team, which includes everything from native mobile development to continuous deployment tools. This team is composed mainly of engineers, but it also has designers, product managers, and data scientists.

The problem with teams

 

Having focused teams is great. Many successful companies, such as Amazon and Netflix, are based on this idea of having very autonomous and independent teams that have a lot of freedom. This kind of organization improves agility, one of our company values, since small/focused teams can move faster. It also promotes drive and pragmatism, two more of our values, since teams own their product mostly end-to-end, feel ownership, and do whatever is needed to make it work.

 

So, what's wrong with that? Well, as anyone who has been at any product-based organization can tell you, isolation between teams can cause problems. Let’s see an example:

Team A is working on a problem and gets to a point where they realize that existing open source implementations are not fast enough. They have no alternative but to code an efficient implementation from the ground up. The team decides to use C++ for performance reasons. At the same time, Team B gets to a point where they also need similar functionality. They decide to use an existing open source implementation in Python. The performance isn't great, but they prefer to deal with this than to implement something from scratch. At some point Team B learns about the internal implementation Team A has done. Unfortunately, all their infrastructure has already been set up exclusively to work with Python. They would have used the efficient C++ implementation had they known in time, but now it's too late.

Similar situations that involve getting many teams on the same page happen often in organizations with a focus on product areas. Here are some typical scenarios:

All of these situations are negative examples of another one of our company values: awareness. If teams are extremely focused, they might become too isolated, making it harder for information and communication to flow easily through the company and ultimately making it difficult for anyone to be aware of what is going on.

 

A common solution to some of the issues above is the matrix organization. While its mechanism for connecting vertical teams is valuable, we found that the approach of adding horizontal teams created too much extra complexity in the organization. We've instead solved these problems by introducing a new structure we call guilds.

 

The engineering guilds

We define engineering guilds as flexible associations of Quora engineers that share a particular technical focus, independent of the team they are on. Broadly, each guild is responsible for sharing knowledge across product teams that are working in similar technical areas, as well as coordinating staffing changes. As of today, we have 5 guilds:

Every engineer has a primary guild at any point in time. This guild is selected by each engineer's manager after taking into account their preferences and background. Encouraging all engineers to have a primary guild has also had other benefits that we didn't initially anticipate, such as giving people a better high-level view of the organization and streamlining project staffing. In addition to selecting a primary guild, engineers can also choose secondary guild(s). We don't recommend having too many secondary guilds, since it's good for engineers to have a certain degree of focus, but we do have engineers who are actively involved in as many as three different guilds.

 

With this organization, it's clear that teams will have engineers from a variety of guilds. Some focused teams might have most of their engineers focused on one or two guilds, while teams with more cross-cutting work will include members of several guilds, like systems, frameworks, and machine learning. The figure below is an example organization of product teams and guilds that's somewhat similar to where we stand today at Quora:

All engineering managers are members of guilds as well, and each guild is led by an engineering manager. 

 

Besides this high-level organization design, guilds are completely free to organize themselves and their activities however they want. We have no other prescriptions on what they should or should not do, since requirements may be completely different from one guild to another. With that said, most of the guilds have agreed on a number of activities that are helpful:

In order to understand a bit more how guilds have self-organized, let's take a look at the machine learning guild and some of the activities it runs.

 

The ML guild coordinates all of our activities related to machine learning, as well as related areas such as natural language processing. It currently has around 20 engineers (out of our current total of around 80 engineers) and four managers. Since one of the main objectives of guilds is to share knowledge across the engineering organization, the ML guild is very active in organizing trips to ML conferences, bringing in external speakers, and sharing research. Whether through casual messages in the guild's Slack channel or hour-long presentations in the weekly guild meetings, the ML guild promotes machine learning knowledge across the company. Many of these discussions lead to documentation describing general ML-related topics like the qualitative evaluation of models or ML complexity, which we've recently shared on our engineering blog. 

 

While many of the guild's discussions are targeted at experienced ML engineers, the guild also promotes general ML education for people new to ML at Quora, or even new to ML in general. For example, the ML guild has organized various talks and trainings to introduce attendees to machine learning systems like answer ranking and feed.

The Machine Learning Guild in action

 

The ML guild also makes investments to improve machine learning development velocity. For example, the guild has taken ownership of the cluster of machines that is shared across all ML teams for development, training, and analysis; the ML guild is responsible for defining how that cluster is shared and maintained. The ML guild also organizes Technical Reviews, where teams present proposals for a new systems or refactors to get feedback from people across the company.

 

Another responsibility of the guild is enabling flexible staffing across the different teams that have ML engineers. If one team needs more ML resources, the request will go to the guild, which will act as a load balancer to manage different requirements and needs across teams. Similarly, the ML guild is involved in recruiting, which includes helping hiring managers work together and assigning incoming candidates to the right teams. Finally, the guild is responsible for defining the interview loop for our machine learning roles.

 

 Conclusions

 

Engineering guilds have improved knowledge sharing and communication between teams dramatically. With little investment, we have become a much more efficient, flexible, and scalable organization. In fact, guilds at Quora have become so successful that we are now pushing more and more responsibilities onto them.

 

In our experience, guilds as described in this post are an easy way to supplement and improve organizations that are based on focused and independent teams. We look forward to continuing to use guilds as a way to grow Quora and, ultimately, the world's knowledge. Check out our careers page if you'd like to join us in our mission.

 

Credits

 

We take inspiration from looking at how many other companies are set up. Guilds in particular were inspired by Spotify. They have a complex organizational structure with many different artifacts. We did not implement any of the other parts, but found guilds to solve exactly the problems that we were facing.|||

