Last fall ARM Education posted this link for the Raspberry Pi-based Aircraft Tracker on our Facebook Page.  As the Americas Program Manager for the ARM University Program and a private pilot, I took particular interest in the product and thought this might be something fun to put together that would also be quite useful flying in the quite busy San Francisco Bay Area.  For pilots, this sort of capability is known as a Traffic Collision Avoidance System (TCAS), which for installed certified systems in an aircraft can be breathtakingly expensive.  I noted the link and the list of components and put those on my Christmas list.  Sure enough, I was fortunate to find these items underneath our tree.

During the holiday break, I followed the instructions in the video and put together the components.  As advertised, it would have taken about an hour, except that I use Foreflight as my Electronic Flight Bag on my iPad, and I needed to have the latest version of Foreflight installed to get it to work with the Stratux software.  As a result, I needed extra time to get the Forflight software updated.

After updating Foreflight, I was ready to try it out.  I did end up having a few issues with pairing of the Tracker with my Foreflight-equipped iPad and the Dual GPS receiver I use in the airplane.  Initially, I paired the Stratux Receiver via wifi and the GPS via Bluetooth.  With that, I could, at least, verify that the system works in my house (See Fig. 1).



Figure 1. Stratux-based Aircraft Tracker displayed on Foreflight Electronic Flight Bag.  Note the dark blue  dot is our GPS location (i.e., our house), the dark blue “X” in the middle of the concentric rings is San Francisco International Airport (SFO), and the lighter blue diamonds and arrows are aircraft tracks; several appear to show aircraft heading in to land at SFO.

The next test is to try it out in the air.  With all of the rain we have had in Northern California this winter, finding a good flying day has been difficult.  Eventually, weather cleared enough to at least get it up in the air.  So, I found a good weekend and tried it out (See Fig. 2 and 3).

Figure 3.  Test set up with Raspberry Pi Aircraft Tracker and iPad Display

My original set up included my 16GB iPad, which for the latest version of Foreflight, was proving to have insufficient storage for the aeronautical charts used.  So, this set-up included a new 128 GB iPad Air (with a white background—I guess being “forced” to upgrade is not a terrible thing ;-).

Unfortunately, a new storm was on its way, so my flight was limited to the traffic pattern at Hayward Airport (HWD).  So, while the conditions allowed me to test the tracker in the air, they were not very good to see its real utility in helping to identify traffic. (My traffic issues were called out to me by the airport control tower.)  Also, it did not allow me to get to a very high altitude to see the additional data that the tracker would provide.  As an added complication to the set-up, my GPS receiver gave out, so I was not able to include my own tracking data on the display.  Finally, flying in the traffic pattern is busy enough, that there was barely the opportunity to get one photo of the system in operation.  Nevertheless, I was determined to see it work in the air, and Figure 4 shows that it does indeed work airborne!

The next step is to use it on a flight away from the home airport, where there is an opportunity to go to a higher altitude to get more of the available data provided by the system, use it in more realistic conditions, and have more time to get better photos of the system in use.  For now, though, I am quite happy with my new ARM-powered device.|||

Last fall ARM Education posted this link for the Raspberry Pi-based Aircraft Tracker on our Facebook Page . As the Americas Program Manager for the ARM University...