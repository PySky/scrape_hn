curl -X PUT --header 'Content-Type: application/json' --header 'Accept: application/json' -d '{ "key": ${client_key}, "document": { "_type": "custom", "expires": null, ${column_name}: ${column_value}, "_modifiedColumns": ["createdAt", "updatedAt", "ACL", "expires", ${column_name}], "_tableName": "data", "ACL": { "write": { "allow": { "role": [], "user": ["all"] }, "deny": { "role": [], "user": [] } }, "read": { "allow": { "role": [], "user": ["all"] }, "deny": { "role": [], "user": [] } } }, "_isModified": true} }' 'http://api.cloudboost.io/data/${app_id}/${table_name}'

var cs = new CB.CloudSearch("Student"); cs.searchQuery = new CB.SearchQuery(); cs.searchQuery.searchOn('name','John'); cs.search({ success: function(list) { //list is an array of relevant CloudObjects }, error: function(error) { //error } });

var cs = new CB.CloudSearch("Student"); cs.searchQuery = new CB.SearchQuery(); cs.searchQuery.searchOn('name','John'); cs.search({ success: function(list) { //list is an array of relevant CloudObjects }, error: function(error) { //error } });

CloudSearch cs = new CloudSearch("Student"); SearchQuery searchQuery = new SearchQuery(); searchQuery.searchOn('name','John'); cs.search(new CloudObjectArrayCallback(){ @Override public void done(CloudObject[] x, CloudException e) throws CloudException { if( e != null){ //error } if(x!=null){ //cloudObject } } });

curl -X POST --header 'Content-Type: application/json' --header 'Accept: application/json' -d '{ "key": ${client_key}, "limit": 10, "sort": [], "query": { "filtered": { "query": { "bool": { "must_not": [], "should": [{ "match": { "name": { "query": "[\"egima\",\"bengi\"]" } } }], "must": [] } }, "filter": { } } }, "skip": 0, "collectionName": ${table_name} }' 'http://api.cloudboost.io/data/${app_id}/${table_name}/search'

//Start Listening CB.CloudNotification.on('ChannelName',function(data){ //data can be anything you publish to a channel. Can be a string, number, object etc. }}); //Publish CB.CloudNotification.publish('ChannelName','data');

//Start Listening CB.CloudNotification.on('ChannelName',function(data){ //data can be anything you publish to a channel. Can be a string, number, object etc. }}); //Publish CB.CloudNotification.publish('ChannelName','data');

//Start Listening CloudNotification.on('ChannelName',new CloudNotificationCallback(){ //data can be anything you publish to a channel. Can be a string, number, object etc. }}); //Publish CloudNotification.publish('ChannelName','data');

//REST / cURL api for realtime is not available

var queue = new CB.CloudQueue('QueueName'); queue.addMessage('sample', { success : function(queueMessage){ //queueMessage is an instance of CB.QueueMessage class. console.log(queueMessage.id); }, error : function(error){ console.log(error); } });

var queue = new CB.CloudQueue('QueueName'); queue.addMessage('sample', { success : function(queueMessage){ //queueMessage is an instance of CB.QueueMessage class. console.log(queueMessage.id); }, error : function(error){ console.log(error); } });

CloudQueue queue = new CloudQueue("QueueName"); queue.addMessage("sample", new CloudQueueMessageCallback() { @Override public void done(QueueMessage[] msgs, CloudException e) { if (e != null) // else // } });

curl -X PUT --header 'Content-Type: application/json' --header 'Accept: application/json' -d '{ "key": ${app_key}, "document": { "_type": "queue", "expires": null, "queueType": "pull", "name": "hostel", "ACL": { "write": { "allow": { "role": [], "user": ["all"] }, "deny": { "role": [], "user": [] } }, "read": { "allow": { "role": [], "user": ["all"] }, "deny": { "role": [], "user": [] } } }, "subscribers": [], "retry": null, "messages": [{ "_type": "queue-message", "expires": null, "_id": null, "_modifiedColumns": ["createdAt", "updatedAt", "ACL", "expires", "timeout", "delay", "message"], "ACL": { "write": { "allow": { "role": [], "user": ["all"] }, "deny": { "role": [], "user": [] } }, "read": { "allow": { "role": [], "user": ["all"] }, "deny": { "role": [], "user": [] } } }, "delay": null, "timeout": 1800, "_isModified": true }] } }' 'http://api.cloudboost.io/queue/${app_id}/${queue_name}/message'

var cache = new CB.CloudCache('CacheName'); var item = {'name':'John Doe', 'age':24, 'sex':'MALE'}; cache.set('sample',item, { success : function(item){ //item is the object that you added to the cache. console.log(item); }, error : function(error){ console.log(error); } });

var cache = new CB.CloudCache('CacheName'); var item = {'name':'John Doe', 'age':24, 'sex':'MALE'}; cache.set('sample',item, { success : function(item){ //item is the object that you added to the cache. console.log(item); }, error : function(error){ console.log(error); } });

CloudCache cache = new CloudCache("student"); cache.set("test1", "sample", new ObjectCallback() { @Override public void done(Object x, CloudException e) throws CloudException { if (e != null) // else { // } } });|||

CloudBoost is serverless cloud platform which helps you to build your apps in half less time.