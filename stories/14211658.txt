In the seven years following its initial release, Clojure has become a popular alternative language on the JVM, seeing production use at financial firms, major retailers, analytics companies, and startups large and small. It has done so while remaining decidedly alternativeâ€”eschewing object orientation for functional programming, C-derived syntax for code-as-data, static typing for dynamic typing, REPL-driven development, and so on. Underpinning these differences is a commitment to the principle that we should be building our systems out of fundamentally simpler materials. This session looks at what makes Clojure different and why.





Author:

Rich Hickey

Rich Hickey, the author of Clojure and designer of Datomic, is a software developer with over 25 years of experience in various domains. Rich has worked on scheduling systems, broadcast automation, audio analysis and fingerprinting, database design, yield management, exit poll systems, and machine listening, in a variety of languages.

View more trainings by Rich Hickey at https://www.parleys.com/author/rich-h...



Find more related tutorials at https://www.parleys.com/category/deve...|||

In the seven years following its initial release, Clojure has become a popular alternative language on the JVM, seeing production use at financial firms, maj...