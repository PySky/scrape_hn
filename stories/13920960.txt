Technology has a gender problem, as everyone knows.

The underrepresentation of women in technical fields has spawned legions of TED talks, panels, and women-friendly coding boot camps. I’ve participated in some of these get-women-to-code workshops myself, and I sometimes encourage my students to get involved. Recently, though, I’ve noticed something strange: the women who are so assiduously learning to code seem to be devaluing certain tech roles simply by occupying them.

Conventional wisdom says that the key to reducing gendered inequality in tech is giving women the skills they need to enter particular roles. But in practice, when more women enter a role, its value seems to go down more.

It’s not always obvious to outsiders, but the term “technology sector” is a catch-all for a large array of distinct jobs. Of course there are PR, HR and management roles. But even if we confine ourselves to web development, technical people often distinguish among front-end, back-end and full-stack development. The partition between the two “ends” is the web itself. Front-end developers are the people who design and implement what you see in your web browser. Back-end developers are the people who do the programming that works behind the scenes. And full-stack developers are the people who do it all.

But here’s the problem: the technology industry enforces a distinct gender hierarchy between front-end and back-end development. Women are typecast as front-end developers, while men work on the back end – where they generally earn significantly more money than their front-end counterparts. That’s not to say that women only work on the front end, or that men only work on the back end – far from it. But developers tell me that the stereotype is real.

The distinction between back and front wasn’t always so rigid. “In the earliest days, maybe for the first 10 years of the web, every developer had to be full-stack,” says Coraline Ada Ehmke, a Chicago-based developer who has worked on various parts of the technology stack since 1993. “There wasn’t specialization.”

Over time, however, web work professionalized. By the late 2000s, Ehmke says, the profession began to stratify, with developers who had computer science degrees (usually men) occupying the back-end roles, and self-taught coders and designers slotting into the front.

Back-end developers often attribute front-end expertise not to mastery but to alchemy, wizardry or magic. Its adepts don’t succeed through technical skill so much as a kind of web whispering: feeling, rather than thinking, their way through a tangle of competing styles – in other words, those soft fuzzy things that women are supposed to excel at. That’s not true, of course; nothing on a computer is any more or less logical than anything else.

The gendered attributes switch as you travel to the back of the stack. On the back-end, developers (more often “engineers”) are imagined to be relentlessly logical, asocial sci-fi enthusiasts – bearded geniuses in the Steve Wozniak tradition. This brilliant but unkempt genius is a familiar figure in the history of computing – familiar, but not immutable.

In fact, computing was originally the province of women. Innumerable articles and books have pointed this out, but it still seems to surprise everyone every time it’s “revealed”. The bearded savant of computer science lore only emerged as the field professionalized and gained prestige, according to computing historian Nathan Ensmenger. And it emerged in order to push women out of programming as men moved into what had originally been female jobs.

“If you’re worried about your professional status, one way to police gender boundaries is through educational credentials,” Ensmenger says. “The other way, though, is genius. And that’s something I think nerd culture does really well. It’s a way of defining your value and uniqueness in a field in which the relationship between credentials and ability is kind of fuzzy.” And “genius”, of course, is a strongly male-gendered attribute. Just look at student evaluations of their college professors.

Today, the case of the female front-end developer is repeating history in the opposite direction. Front-end developing is a feminizing subfield rather than a masculinizing one. But it’s governed by the same market forces that edged women out of programming in the first place. Prestige accrues to labor scarcity, and masculinity seizes prestige.

Front-end jobs are easier for women to obtain, and feminized jobs are less prestigious. In turn, the labor market generates its own circular logic: women are front-end developers because they’re well disposed to this kind of labor, and we know this because women are front-end developers.

Get-girls-to-code initiatives aim to fix tech’s gender imbalance – but they may help reinforce it. Women are generally cheaper, to other workers’ dismay. “Introducing women into a discipline can be seen as empowerment for women,” Ensmenger says. “But it is often seen by men as a reduction of their status. Because, historically speaking, the more women in a profession, the lower paid it is.”

As a result, an influx (modest though it is) of women into the computing profession might be helping to push developers to make distinctions where they didn’t exist before. “As professions are under threat, stratification is very often the result,” Ensmenger says. “So you take those elements that are most ambiguous and you push those, in a sense, down and out. And down and out means they become more accessible to other groups, like women.”

The computing historian Marie Hicks can’t stand it when people tout coding camps as a solution to technology’s gender problem. “I think these initiatives are well-meaning, but they totally misunderstand the problem. The pipeline is not the problem; the meritocracy is the problem. The idea that we’ll just stuff people into the pipeline assumes a meritocracy that does not exist.”

Ironically, Hicks says, these coding initiatives are, consciously or not, betting on their graduates’ failure. If boot camp graduates succeed, they’ll flood the market, devaluing the entire profession. “If you can be the exception who becomes successful, then you can take advantage of all the gatekeeping mechanisms,” Hicks says. “But if you aren’t the exception, and the gatekeeping starts to fall away, then the profession becomes less prestigious.”

My students are always so excited that they’re “learning to code” when I teach them HTML and CSS, the basic building blocks of web pages. And I’m happy for them; it’s exhilarating to see, for the first time, how the web is built. Increasingly, though, I feel the need to warn them: the technology sector, like any other labor market, is a ruthless stratifier. And learning to code, no matter how good they get at it, won’t gain them entrance to a club run by people who don’t look like them.

Miriam Posner teaches in the Digital Humanities program at the University of California, Los Angeles. This piece originally appeared in Logic, a new magazine about technology. Visit logicmag.io to subscribe.|||

Get-girls-to-code initiatives aim to fix tech’s gender imbalance – but they may help reinforce it