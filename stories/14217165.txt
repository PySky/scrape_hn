This patch implements tier up for wasm functions. Unlike with JS

 code, wasm code needs to be able to tier up concurrently with the

 running code. Since JS code is synchronous we can always link on

 the running thread, wasm, however, can run the same code on more

 than one thread. In order to make patching work correctly, we need

 to ensure that all patches of callsites are aligned. On ARM we get

 this for free since every call is a near call. On X86 we ensure

 that the 32-bit relative offset is 32-bit aligned.



This patch also modifies how Wasm::Plan works. Now Plan is a

 abstract super class and there are two subclasses, which

 correspond to the different tiers of our wasm engine. The first,

 Build Bytecode Quickly (BBQ) tier, roughly does what the old plan

 code did before. The new tier, Optimized Machine code Generation

 (OMG), can be called at any point by BBQ code and compiles exactly

 one function. Once an OMGPlan finishes it will link it's code

 internally then reset the instruction cache of all running wasm

 threads, via, a ThreadMessage. Once the instruction caches have

 been reset all the other functions will be patched to call the new

 code.

|||

