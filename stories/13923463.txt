I used to think the best engineers are the ones that write the cleanest code. When I started out developing software, I thought it was all about writing the cleanest and fastest. And of course, writing robust software that can stand up to testing. But recently I came to a realization. After years of endless discussions about which design patterns make the “sexiest” code, and refactors upon refactors of perfectly functioning code, it hit me. Most of your time as a software engineer isn’t spent writing code. It’s spent researching.

Research is the backbone of any productive software engineer’s body of work. You research new technologies. You read up on other teams and how they developed software to fit their needs. You try to understand what your competitors are doing, and which features will make a killer product. Being an effective researcher is essential to being an effective software engineer. Next, I’ll tell you why—and share some tips that have helped me.

There are three reasons why I think it’s important to be a good researcher:

Here are a few tips I’ve learned (sometimes the hard way):

Hopefully, I have convinced you that it’s worthwhile to develop your research skills—for your own sake, as well as your team’s.|||

I used to think the best engineers are the ones that write the cleanest code. When I started out developing software, I thought it was all about writing th