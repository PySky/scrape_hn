In early April, Stanford University began piloting a new version of its introductory computer science course, CS 106A. The variant, CS 106J, is taught in JavaScript rather than Java.

"[CS 106J] covers the same material as CS 106A but does so using JavaScript, the most common language for implementing interactive web pages, instead of Java," the university website explains. "No prior programming experience required."

According to The Stanford Daily, Eric Roberts, emeritus professor of computer science, has been working on the transition for the past five years, writing a new textbook, creating assignments, and training teaching assistants.

Roberts wrote the Java textbook still used in CS 106A, The Art & Science of Java.

Java, released in 1995, debuted at Stanford in 2002. For the decade before that, Stanford's computer science department focused on the C programming language, according to The Stanford Daily. And before that, CS 106A was taught in Pascal.

Roberts, who was not immediately available to discuss the change, told The Stanford Daily that Java is showing its age and that JavaScript has taken its place as a web language.

Questions about whether Java is on its way out have been surfacing for years, particularly since Oracle's takeover of Sun and Java in 2010 politicized the issue. Many programmers who believe in open-source software would be happy to see Java wither and die if only to spite Oracle, a company seen as hostile to open source.

Certainly, there are signs that interest in Java is waning, for those who see validity in tools like Google Trends.

But the reality is that Java is alive, generating programming jobs, and healthy enough to plod on for decades. Consider that COBOL, designed in 1959, is still used.

Despite its dwindling desktop presence, Java is the language of choice for the world's most widely used consumer-facing operating system, Linux-based Android. And it continues to be essential for business systems.

By the measure of Tiobe, a software quality assessment company, Java was ranked the number one programming language in April 2017 and April 2016. JavaScript was ranked #8 this year, down from #7 last year.

In March, RedMonk, a consultancy that tracks programming language popularity, updated its biannual ranking and placed JavaScript at the top of the heap, ahead of second-placed Java.

Stephen O'Grady, a co-founder of RedMonk, doesn't see Stanford's JavaScript pilot as particularly significant. "For the job market, this doesn't mean much," he said in an email to The Register.

"JavaScript is lighter weight and easier to pick up than Java, so it's a better fit for an introductory course, particularly when a lot of the students won't go any farther than building websites anyway. If you don't intend to pursue a career in computer science, which a lot of introductory students won't, JavaScript is more useful to know than Java."

"As long as Java still numbers among the higher-level, more-advanced classes – and it does in most cases – the language doesn't have to be concerned about the prospects for seeing a steady stream of new Java developers entering the workforce." ®|||

