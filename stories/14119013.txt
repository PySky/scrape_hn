This is a relatively minor release of Miller, containing feature requests and bugfixes while I've been working on the Windows port (which is nearly complete).

The new mlr fraction verb makes possible in a few keystrokes what was only possible before using two-pass DSL logic: here you can turn numerical values down a column into their fractional/percentage contribution to column totals, optionally grouped by other key columns.

The DSL functions strptime and strftime now handle fractional seconds. For parsing, use %S format as always; for formatting, there are now %1S through %9S which allow you to configure a specified number of decimal places. The return value from is now floating-point, not integer, which is a minor backward incompatibility not worth labeling this release as 6.0.0. (You can work around this using .) The DSL functions gmt2sec and sec2gmt, which are keystroke-savers for and , are similarly modified, as is the sec2gmt verb. This resolves #125.

A few nearly-standalone programs -- which do not have anything to do with record streams -- are packaged within the Miller. (For example, hex-dump, unhex, and show-line-endings commands.) These are described here.

The stats1 and merge-fields verbs now support an antimode aggregator, in addition to the existing mode aggregator.

The join verb now by default does not require sorted input, which is the more common use case. (Memory-parsimonious joins which require sorted input, while no longer the default, are available using .) This another minor backward incompatibility not worth making a 6.0.0 over. This resolves #134.

mlr nest has a keystroke-saving --evar option for a common use case, namely, exploding a field by value across records.|||

miller - Miller is like awk, sed, cut, join, and sort for name-indexed data such as CSV, TSV, and tabular JSON