FLVIZ stands for "Formal Languages Visualizer". It is a Windows GUI program which reads a configuration file, and based on its content creates a visualization of a state machine (graph), and lets you apply a stimulus (vocabulary) and see the state transitions happen dynamically.

It was originally written in 2009 during my "Formal Languages" class which was a part of my M.Sc CS curriculum. The biggest challenge was getting it on time and making it work under Windows, since it was written in about 3 days on FreeBSD and then quickly ported. You can see what I mean if you glance at the directory.

Created for Windows XP with SP 3 and based on QT Creator and library, it hasn't been build/used since I finished the class. In 2015 I have updated it: by using http://www.appveyor.com I converted it to library and made it work on Windows Server 2012.

During "Formal languages" class we were provided the state machine input file. The format isn't something I designed and is very imperfect.

All libraries are present in the repo, so deployment straight after compilation should be possible.

For convenience, build script is present in the repository. To build, run:

Please note this script may need to be adjusted if you end up building with anything else but Qt 5.5.

If you clone the repository and also decide to use Appveyor for remote testing/work, you may want to run:

Which will install both Vim editor and ConEmu, which are convenience tools for development.

Data format was provided in a class. It's not great. Sample data format is as follows:

Empty spaces or lines don't matter. For convenience of discussion, I'm mentioning line numbers for reference below. means empty state.

TODO: understand state indexing. My original comment stated states are indexed from 0, which I believe referred to the implementation.

There are some example data files in the folder.|||

flviz - FLVIz - Finite Automata Simulator written in QT/Graphviz