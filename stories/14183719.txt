Squirrelmail version 1.4.22 (and probably prior) is vulnerable to a remote code execution vulnerability because it fails to sanitize a string before passing it to a popen call. It's possible to exploit this vulnerability to execute arbitrary shell commands on the remote server. The problem is in Deliver_SendMail.class.php on initStream function that uses escapeshellcmd() to sanitize the sendmail command before executing it. The use of escapeshellcmd() is not correct in this case since it don't escapes whitespaces allowing the injection of arbitrary command parameters. The $envelopefrom variable is controlled by the attacker, hence it's possible to trick sendmail to use an attacker-provided configuration file that triggers the execution of an arbitrary command. In order to exploit this vulnerability the MTA in use must be sendmail and Squirrelmail must be configured to use it as commandline (useSendmail directive of the config file set to true).

 Also, the edit_identity directive of the config file must be set to true, but this is the default configuration. To reproduce the issue follow these steps: Create a rogue sendmail.cf that triggers the execution of a /usr/bin/touch: Upload it as a mail attachment and get it's remote name (ex: lF51mGPJwdqzV3LEDlCdSVNpohzgF7sD) Go to Options -> Personal Informations and set the following payload as Email Address: Verify the execution of the command with "ls /tmp/executed" on the remote server

The followig python script exploits this vulnerability to execute an attacker provided bash script on the remote server.

Dawid Golunski discovered this vulnerability and reported it to the vendor in January. See the seclists.org thread below for details. https://seclists.org/fulldisclosure/2017/Apr/100|||

