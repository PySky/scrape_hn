Vuez is a very simple but powerful state management library for Vue.js projects.

Vuez is currently under development, and the document would be updated regularly as the project is improved. For any advice or requirements, please kindly give issues, PR, or directly contact me by email. Thanks a lot:)

Some peers have mentioned about the confusing difference between Vuez and Vuex. I'd like to say that for these developers below, please skip Vuez and use Vuex, at least for now:

Developers for commercial or governmental projects. Vuex is the official choice for Vue.js projects, with official and long-term support. You shouldn't consider Vuez for now as it doesn't have so much quality guarantee and document supports. Developers in team more than 3 people. The core of Vuez is the 'observing table' with observed names on it. For a large-scaled team, it might cause bugs when collaborating, because Vuez has very little limitations on the usage of the store object. A team should consider Vuex, as Vuex has the 'modules' structure which I think is suitable for a team. And codes in Vuex projects are always easier to merge (in my experience).

However, if you're not one of those developers I listed above, and you want to keep things as simple as possible when facing state management, use Vuez cause it's really simple. You can check the example projects for that simplicity. Just keep the 'table' in mind when developing, and that's enough.

And if you faced any issues in your project, please kindly give them to me, or help Vuez with a PR yourself :). I know it's a no-mainstream and not-so-stable choice, but I do think that it has its own advantages, and can become a cool helper in your Vue.js projects.

As always, vuez can be installed through npm or yarn.

When used with a module system, you must explicitly install Vuez by calling :

And then please follow the 'Basic usage' part to use Vuez.

In short, Vuez is a centralized monitoring 'store' which is accessible for all your Vue components after installing Vuez. From each component, you can access the store through .

The store concept in Vuez is very simple, imagine an excel table with three columns: 'name', 'object', 'actions'. Whenever you are interested in monitoring an object or an event, start a new column in the table with a new name, with an object you plan to monitor. Then put everything you want to do when the object changed, as functions in the 'actions' column. Everytime you want to care about the 'name', you use to observe it, if the column's value has changed, all related to the would be triggered.

It has only two set of APIs:

With these simple APIs, Vuez can deal with many troublesome event handling such as data communication, monitoring data change, etc.

Please check the Vue.js todolist app project using vuez, by running .

Please check the document through wiki.|||

vuez - A very simple but powerful state management for vuejs projects.