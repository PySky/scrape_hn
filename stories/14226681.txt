A tool for working with the output of telegram-history-dump

First, you need some data! To get this, you must install telegram-cli and telegram-history-dump. They both have install instructions but I'll give a short version here:

Next, I suggest editing the telegram-history-dump config.yaml chat sections (near the top of the file) with the names of the chats you want to get chatlogs of to start with, and putting 'null' in any empty chat sections. It's full of explanatory comments, so this shouldn't be too difficult. The rest of the config has some sensible defaults, and it's probably not worth changing them at this point. Another thing to keep in mind when writing the config file is that if you're putting in chat names, make sure there are no commas or square brackets in them. Also, consider using chat_ids instead of names, as names can change.

Then, run with no commandline arguments and set it up with your account - just a case of putting in your phone number and an auth code. Once that's set up, run and leave that terminal open. In another terminal, run the script (it'll be in the folder where you cloned telegram-history-dump) and it'll start downloading your chatlogs.

Once you have these things, you should be able to run all the analysis scripts!

To start with, I recommend putting your json chatlogs in a folder with the scripts, so that your /path/to/chatlog.jsonl won't be a mess of relative path shenanigans.

Get all the text from a chat and print to standard output (one line per message): Get all the text in a chat by a particular user and print to standard output (one line per message): Get all the text from a chat, and dump it into a text file: You can combine a text-dumping with to get a list of the most commonly sent messages and their frequencies. For example, find what messages a user sends most often in a particular chat: Get a pie chart of the most active users in a chat: Get a graph of the usage of a particular phrase or phrases in a chat over time: Get a graph of the activity levels of a chat or chats over time: Same as above, but instead of opening a window with the graph, save the graph as an image in a folder: The same -o or --output-folder argument can be passed to , , and . This allows, for example, scripting these so that you run them on every chat and save all the outputs to a certain directory: for file in json/*; do ./mostactiveusers.py --output-folder figures/ --file $file Find a rough percentage of users in a chat who send less than 3 messages:

Note that this script outputs a number which could be taken as a member-count of a chat, but is not, because the chatlogs have no data about people leaving a chat.

Note that this script, due to a lack of data about people leaving in the chatlogs, will use a userlist of people who have ever been in a chat, not the actual current membership of a chat.

This script gives more accurate venn diagrams, but uses data which is not easy to get. The script to get this data might become open source in the future.

Thanks to NotAFile for writing this one.

Note that as with other scripts that use chatlogs for member counts, this one has no ability to see users leaving, so the numbers will be wrong if you use it for that.

If you like the project and have some bitcoin lying around, you're very welcome to send some to me here:|||

telegram-analysis - Analyse telegram chats easily