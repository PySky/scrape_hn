What do you think was your best investment in your career A few days learning about good testing and reading Daniel P. Friedman and Matthias Felleisen’s series

What classes, books or resources would you recommend Udacity has some shorter and practical classes and there are great videos online from renowned software engineers. Question what people teach: how competent are they __really__ in the subject matter?

There are some good papers and advanced text in every field (classics or the very original paper in a field have been good for me)

What shouldn’t people be doing Chasing what everyone else seems to be doing (unless they really want to do that thing)

What will you tell your former self 5 years ago or at the beginning of your journey Just do what you were/are/will be doing

Technology or tools that you like or recommend Early editions of Learn How to Study (by Derek Rowntree) which teaches a lot, Cram.com, and Pivotal Tracker the ticket system I like the most (currently over Trello, the GH system, and other internal tools we have)

Sources or guides for advancing your skills The Practice of Programming & The Elements of Programming Style are very good by the Unix + Plan 9 engineers

Any advice for developers looking to build or advance their tech careers Advice like “modularization is good so do it” aren’t helpful because something like (good) modularization is about having a good way to do something, modularization seems to fall out of that (regardless of programming language or paradigm), i.e. it is a consequence of having a good way of doing something. Not the end goal per se. When we do something ask: what difference will this make?|||

