Adapted from Dr. Seuss' "Green Eggs and Ham". Link to text, art copyrighted by Dr. Seuss.

I am San.

 I am San.

 San I am.

That San-I-am!

 That San-I-am!

 I do not like that San-I-am!

Do you like Redis keys in RAM?

I do not like them San-I-am

 I do not like Redis keys in RAM.

Would you like them large1 or small?

I would not like them large or small.

 I would not like them not at all.

 I do not like Redis keys in RAM.

 I do not like them San-I-am.

Would you like them as a String?

 Would you serialize everything?

I do not like them as a String.

 I do not like to serialize things.

 I do not like them large or small.

 I do not like them not at all.

 I do not like RedisÂ keys in RAM.

 I do not like them San-I-am.

Would you like them in a Hash?

 Would you like a Hash as cache?

Not in a Hash. Not as a cache.

 Not as a String. No serialized, no anything.

 I do not want them large or small.

 I do not want them, not at all.

 I do notÂ want Redis keys in RAM.

 I do not want them, San-I-am.

Would you want them as a List instead?

 Do you want to access tail, body and head?

Not as a List.Â Not as a Hash.

 Not as a String. Not as a cache.

 Small or large I will have naught.

 Goodbye San-I-am and thanks a lot.

Would you? Could you? As a Set?

 Get the difference! Store a union! Or just intersectâ€¦

I would not, could not, as a Set.

You may like them.

 You'll see for sure.

 You may like

 Sorted Sets by score?

I would not, could not by a score.

 No more Sets! I say no more!

 I do not like them as a List

 Stop this now â€“ I do insist.

 I do not like them as String orÂ Hash

 I do not like an in-memory database or cache.

 I do not want Redis keys in RAM.

 I do not want them, San-I-am.

You do not like them.Â So you say.

 http://try.redis.io! Try them! And you may.

 Try them and you may, I say.

San! If you will let me be,

 I will try them. You will see.

Say! I like Redis keys in RAM!

 I do! I like them, San-I-am!

 So I will have them as a String.

 And as a Hash, a List or anything.

 And as a Set â€“ bothÂ unordered and an ordered one.

 Say! Data structures are so much FUN!

I do so like Redis keys in RAM

 Thank you! Grazie, San-I-am

I presented the above as part of my "Use Redis in Odd and Unusual Ways" talk at Percona Live Europe 2015 in Amsterdam. While mainly focused around MySQL, the conference'sÂ program hadÂ no less than four sessions solelyÂ about Redis.Excluding my own. Being a RedisÂ advocate,Â that's probably the best thing I could hope for, but as a presenterÂ it posed a challenge: how do I prepare a talk that is relevant to an audience that'sÂ heterogeneous not only in its experience with Redis, but also with NoSQL at large?

So the result is a mix of basic and advanced Redis topics that I hope both newcomers as well as Redis veterans can benefit from. The DR.ediseuss motifÂ merits a little background: like many before me,Â when I took my first steps red-bricked roadÂ I was somewhat befuddled2 with the API's naming scheme. While soaking it all in,Â I came up with a little "poem" that was but the first step to all that. For your enjoyment, here's the first (and only) page fromÂ myÂ "Dr. Seuss Reads Redis" book:

This is my friend

 His name is ZADD

 ZADD's a ladÂ 

 Who's always SADD

It's really badÂ 

 that ZADD is SADDÂ 

 I don't know whyÂ 

 And that makes me SCARD

I hope that ZADD

 Will be someday glad

 And that he'll get over

 This stupid PFADD

Lawsuits? Critical acclaim? Email or tweet me â€“ I'm highly available ðŸ™‚

FN#1Â Keys in RedisÂ can be up to 512MB and are binary safe. Simple string values can be up to 512MB and are binary safe as well. Other data structures can hold 232 elements, each up to 512MB.

FN#2Â Note of encouragement to fellow beginners â€“ it will soon fall perfectlyinto place and you'll wonder what was so befuddling in the first place ðŸ™‚|||

Adapted from Dr. Seuss' Green Eggs and Ham. Link to text, art copyrighted by Dr. Seuss. I am San. I am San. San I am. That San-I-am! That San-I-am! I do not like that San-I-am!