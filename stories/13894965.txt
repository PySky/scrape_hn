cx_Oracle is a Python extension module that enables access to Oracle Database and conforms to the Python database API 2.0 specifications with a considerable number of additions and a couple of exclusions. The time data type is not supported by Oracle and is therefore not implemented. The method cursor.nextset() is not implemented either as the DB API specification assumes an implementation of cursors that does not fit well with Oracle's implementation of cursors and implicit results. See the method cursor.getimplicitresults() for more information.

See PEP 249 for more information on the Python database API specification. See the documentation for a complete description of the module's capabilities.

cx_Oracle is licensed under a BSD license which you can find here.

cx_Oracle has been tested with Python version 2.7, and with versions 3.4 and higher. You can use cx_Oracle with Oracle 11.2, 12.1 and 12.2 client libraries, allowing connection to multiple Oracle Database versions. Oracle's standard client-server version interoperability allows connection to both older and newer databases, for example Oracle 11.2 client libraries can connect to Oracle Database 10.2 or later.

Please note that an Oracle client (or server) installation is required in order to use cx_Oracle. If you do not require the tools that come with a full client installation, it is recommended to install the Instant Client. which is far easier to install.

Issues and questions can be raised with the cx_Oracle community on GitHub or on the mailing list.

Binaries for some platforms are available at PyPI. If you prefer to build your own you can use this command

which will download the source package, build and install it. Otherwise, you can download the source package directly from PyPI, extract it and run these commands instead

This module is built with ODPI-C which supports versions 11.2, 12.1 and 12.2 of the Oracle Client libraries on Linux, Windows and macOS. Others have reported success with other platforms.

For more examples, please see the test suite in the test directory and the samples in the samples directory. You can also look at the scripts in the cx_OracleTools and the modules in the cx_PyOracleLib projects.|||

python-cx_Oracle - Python interface to Oracle Database conforming to the Python DB API 2.0 specification.