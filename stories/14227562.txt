FaaS is a framework for building serverless functions on Docker with first class support for metrics. Any UNIX process can be packaged as a function enabling you to consume a range of web events without repetitive boiler-plate coding.

FaaS is an open-source project written in Golang and licensed under the MIT license.

Functions as a Service or FaaS was a winner in the Cool Hacks contest for Dockercon 2017.

If you’d like to find the functions I used in the demos head over to the faas-dockercon repository.

Serdar Yegulalp Senior Technical Writer covered FaaS in a write-up looking at serverless in the open-source world:

There is also a community being built around FaaS with talks, demos and sample functions being built out.

You can TestDrive FaaS on your laptop in 60 seconds, or deploy to a free online Docker playground. Find out more in the TestDrive.

You can dive straight into the sample functions here. You’ll find hello-world examples for the most common programming languages including: Golang, DotNet Core, Java, NodeJS, Python even BusyBox.

There is even an experimental faas-cli in development to create functions quickly from templates for Node.js or Python, and to deploy to your gateway with a single command.

FaaS enables you to run your serverless functions in whatever language you like, wherever you like - for however long you need.

Contributions to the project are welcome - please send in issues and questions through Github.|||

Functions as a Service - a serverless framework for Docker