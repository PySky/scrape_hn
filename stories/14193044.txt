Auditing your code for proper crypto use is extremely important.  However, what if it’s not generally your focus?  If your job today is to find flaws in the cryptographic components of application א, where should you start?

I like to start an audit by checking which crypto primitives are used. This often gives you an idea of the quality of the crypto and can reveal exploitable flaws just by looking at one line of code.

The simplest way to identify weak crypto primitives is to look for their names in the code. For example, this one-liner script that I published a while back, partially as a joke, will find some of the most obvious primitives to be avoided:

You can see this as a crypto equivalent of tools like flawfinder, which attempt to find flaws from pattern-based rules.

Of course, such a dumb recursive grep can get you tons of false positives, and is by no means comprehensive—it won’t catch DES, for example—but it will help you spot obvious errors without manual inspection of the code base. And it’s fast, thanks to ripgrep (which will skip binaries, ignore hidden and gitignored files). For example, I could process half a gigabyte worth of git repositories in about one second.

So what should you look for in these first 30 minutes of audit? Common examples are:

These are all beginner mistakes, but generally many developers don’t know anything about crypto and will just do their best with the help of Google and Stack Overflow.

If everything looks good so far and you didn’t spot any obvious flaws, there are still a million ways your crypto can fail, and you’ve got to ask questions such as:

And that’s just the few things I can think of in a the few minutes left I have to write this post. The bottom line is that reviewing cryptographic software is much more than checking what algorithms are used.|||

Auditing your code for proper crypto use is extremely important.  However, what if it's not generally your focus?  If your job today is to find flaws in the cryptographic components of application א, where should you start? I like to start an audit by checking which crypto primitives are used. This often gives you an idea of…