Continuing from our previous blog post on MySQL monitoring, we focus on another popular database - PostgreSQL.

PostgreSQL continues to be among the top 5 databases and growing rapidly in popularity. While there is quite intense debate on whether to use MySQL or PostgreSQL, it is safe to say that each has its strong points. MySQL scores very high on its efficient internal representation (using InnoDB storage engine) and replication features, PostgreSQL comes out strong in terms of sophisticated data-models (arrays, inheritance) and analytics. Nevertheless, whether you use MySQL or PostgreSQL, you will need to ensure that the database is healthy and performing well in production. Before discussing Netsil’s approach for PostgreSQL monitoring, let’s do a quick review of existing techniques.

The Netsil Application Operations Center (AOC) adopts the following approach for monitoring PostgreSQL:

By using interaction analytics combined with basic polling, Netsil AOC is able to extract details about queries which are not possible with other approaches. The approach neither requires any change on the database server nor requires any code change to the client application. The approach also has very little overhead making it the ideal solution for monitoring PostgreSQL in production environments.

We described the four golden signals of monitoring, i.e., latency, traffic, errors, and saturation in our previous post, in the context of APIs and services. Here we briefly describe how we can use these signals for monitoring health and performance of PostgreSQL databases.

Similar to the golden signals for APIs, the signals for databases are still latency, throughput and error rates; except that the context is with respect to queries between client and server. With AOC, you can further drill down latency, traffic and errors based on dimensions such as query string, query type, server error code, server error string, username, schema name, server instance, server port, etc. Some examples of out-of-the-box MySQL golden signals in Netsil AOC are:

In conclusion, Netsil’s interaction analytics combined with basic polling gives complete visibility into the performance of the PostgreSQL database, without any instrumentation on client application or database side. By interpreting the network interactions, Netsil is able to track the performance of queries with no overhead to database servers. If you are using PostgreSQL for your cloud application, we encourage you to try Netsil AOC at https://netsil.com/|||

By interpreting the network interactions, Netsil is able to track the performance of queries of PostgreSQL with no overhead to database servers.