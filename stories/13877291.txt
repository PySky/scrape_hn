go-alone is a Go package that provides

For more information, please read the wiki

For help with this package or general Go discussion, please join the Discord Gophers chat server.

For a fast and easy to use snowflake ID library, check out this

This package should not be considered stable and completed. While I feel the majority of this package is where I want it to be - there is still a slight chance of some breaking changes in the near future. I would guess within a month I will have the API stable/locked.

This assumes you already have a working Go environment, if not please see this page first.

Here's a basic example below. There is also an example program in the example folder that demonstrates a few more ways of using Go-Alone. You can read the API documentation on GoDoc.

main ( ) () { This secret is used as the hash key for the signer. = [] ( It's a secret to everybody ) This data is what we will be signing below. = [] ( It's dangerous to go alone! Take this. ) Create a new Signer using our secret We pass over the secret key, and set the Options to nil Take a look at the documentation to see what Options can be set. goalone. (secret, ) Sign and return a token in the form of `data.signature` s. (data) Unsign the token to verify it - if successful the data portion of the token is returned. If unsuccessful then d will be nil, and an error , s. (token) err != { signature is not valid. Token was tampered with, forged, or maybe it's not even a token at all! Either way, it's not safe to use it. } { signature is valid, it is safe to use the data ( (d)) } }

To run the tests and benchmarks, use the following command.|||

go-alone - A very simple to use, high-performance, Go (golang) MAC signer.