Natural Logic Interpreter automatically interprets and validates nested natural logical arguments (logical arguments expressed in natural language) based on rules of inference and propositional logic. The program uses "divide and conquer" algorithms implemented by recursive functions to go through nested logical arguments and to be able to define and validate them accordingly.

"Translating sentences in English (or other natural languages) into logical expressions is a crucial task in mathematics, logic programming, artificial intelligence, software engineering, and many other disciplines."

I came across this paragraph while studying "Discrete Mathematics and It's Applications"; therefore, I got inspired to automate this task using computers.

We can establish these logical arguments:

IF (I'm healthy) THEN (NOT I'm sick)

IF (I'm healthy) THEN (I'm happy) OR (I'm fit)

Then we can validate any proposition we want based on them:

(it rains today) OR ((I exercise) AND (I study)) ----->

We can also see all the conclusions that were able to be drawn by the program:

Download or clone the repo and click on the executable python file called "NLI" to enter an interactive command line interface.

This is how various expressions should be entered in this program:

The regex that is written to recognize the type of arguments sometimes fails to do so when the depth or length of main logical arguments becomes large. However, there has not been any known issues when working with arguments similar to the ones seen in the Examples section.

In addition, NOT operation for now cannot be used in the following ways:

These need to be implemented using De Morgan's Law

The author is working on these issues.

This field of study is huge and this program is not complete by any means. There is a lot that can be done to add on its capabilities. Please feel free to contribute and build on top of it. Should you have any questions in order to start email me at: ppourdavood@gmail.com.|||

Natural_Logic_Interpreter - Automatically interpret and validate nested natural logic arguments based on rules of inference and propositional logic