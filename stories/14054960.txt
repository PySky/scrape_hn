Painless Docker is a practical guide to master Docker and its ecosystem based on real world examples.

Painless Docker tends to be a complete and detailed guide to create, deploy, optimize, secure, trace, debug, log, orchestrate & monitor Docker and Docker clusters.

Through this book you will learn how to use Docker in development and production environments and the DevOps pipeline between them in order to build modern microservices applications.

This tutorial is part of this book and through it, we are going to discover how to use Rancher in order to create a scalable Wordpress application.

In Rancher, everything (like containers, networks or images ) is an API resource with a process lifecycle. Containers, images, networks, and accounts are all API resources with their own process lifecycles.

Rancher is built on the top of containers:

When you run Rancher using the Rancher API + Rancher Process Server + The Database + Machine Microservice are processes that live inside this container.

Note that the docker-machine binary is also living in the same container but only runs when it is called by the API.

Rancher has also an Agent part that manage the life cycle of containers.

If creates a machine successfully, some events are exchanged between the and the microservice. A bootstrap event is created and a command is executed to get the details needed to connect to the machine’s Docker daemon.

If everything run without problems, the service fires up a Rancher Agent on the machine via docker

Rancher Agents open a WebSocket connection to the server in order to establish a 2-way communication. The Rancher Agent manage its containers and reports every change using the Docker API.

During this tutorial, we are going to use an EC2 machine and this is how a different view of the layers of our Rancher installation:

RancherOS is a small distribution released by Rancher team. It is an easy way to run containers at scale in production, and includes only the services needed to run Docker.

It only includes the latest version of Docker and removes any unneeded library that a “normal” Linux distribution could have.

In RancherOS, everything is a container, the traditional init system is replaced so that Docker run directly on the Kernel.

A special component in this system is called User Docker which is the daemon that allow a user (a non-system user) runs its containers.

We are going to run RancherOS in an EC2 machine using AWS CLI:

This is the list of AMI by region:

Now you can login to your machine using the AWS common ssh command :

Since Docker is installed by default, we can start using it directly. Let’s start a MariaDB server then use it with Rancher Server.

Run the Rancher Server and change 172.31.0.190 by your MariaDB IP:

Now you can go to your and add a Linux host with a supported version of Docker:|||

In the Docker World, the orchestration is the most important part of the ecosystem. Docker Swarm, Kubernetes, Apache Mesos .. all of these are orchestrators, every one of them has its own philosophy…