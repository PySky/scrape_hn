We are in an era which our machines have many cores. We also have languages which can use those cores in simple ways.

Imagine you want to boil eggs in parallel in a new language like Go:

But what about our 40 years old bash?

Lets boil our eggs in parallel in bash.

Adding “&” at the end of your command will push it into background to run in parallel.

The command “wait” waits for all your background processes to finish.

It is that simple.

As an example when I needed to clone around 40 github repositories for some reason in travis-ci, only using this method, I was able to bring down the cloning time from 120 seconds to around 18 seconds.

This is how simple it was:

Next notice first one is not in the list! You can use braces to your advantage:

But this time first job is included!:

Now lets wait only for the second job to finish (%2):

Of course you can’t go too far with bash but as a simple tool which is ready for you in many places with no effort or installation you can use it to your advantage for many tasks.|||

We are in an era which our machines have many cores. We also have languages which can use those cores in simple ways. As an example when I needed to clone around 40 github repositories for some…