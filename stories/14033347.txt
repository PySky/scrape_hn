Since I hit 2,000 followers this month, I hosted a small giveaway . This not only gave me a little follower boost, but it also made my Instagram account seem more legit.

After 4 months of running the script, this is how my average post looks like:

In the fourth month, the growth, sadly, again was just ~620 new followers.

Broken down to the smallest parts, the whole script does nothing more than looking for the needed elements on each page and clicking them or extracting their text.

The biggest task for such tool is finding the right paths to the elements by analyzing the HTML of the page (in my case instagram.com).

Now we are already following that user on Instagram.

Once we have our follow-button, we just need to call:

This is were the problem with changing HTML comes into play. If Instagram now changes the class from “_follow” to something like “_follow_button” the script needs adjustment. It’s just a small change, but it would be nicer to only have to do this once.

We can now just use our browser to get the button element with e.g. the class.

Once your at the page you can get the elements of the page e.g. by their tag name. So let’s pretend the Follow-Button would look like this in HTML

You can then head to any page using the get method.

It’s actually really simple, Selenium starts a browser window and acts like a real person.

Of course you could just check out the code in the repository on GitHub , but reading a short description is some times way more comfortable. So here we go.

If you’re interested in how the script works, keep reading from here. Otherwise, you can just skip to the fourth month.

That was exactly, what I had to learn this month.

The Problem with using a GUI-Testing tool like Selenium is that if the site (in my case Instagram) changes something with their HTML layout, I have to change it in my script and update the elements selected from the page.

Upon posting a new image or video, by now, I normally reach ~100 Likes in the first hour.

If we compare the number of new followers before and after the start of the giveaway, we can see that it gave a little boost with ~28 new followers per day.

If we take a look at the graph above, we can see that the mean number of new followers dropped from ~32 to ~20. On days where my script had problems, I got fewer followers. Some of the days even were really good with ~40 new followers per day.

Here, again, we can really see what an impact the script had. Even on the older posts, which have been there, before the script started.

Right at the start of the fourth month, I posted the link to my GitHub repo on Reddit to spread the word a bit more and maybe get some developers helping me test it and report bugs.

What I got was this issue:

After stating my point of view on this topic, the exact same guy wrote me this E-Mail:

What really impressed me was that even with such a quick and dirty automation script, I managed to get their attention.

Since I’m, at the time of writing this part, an Intern at Bosch Engineering, I couldn’t consider joining their team. But with its beautiful nature and nice people, I’d love to work in Iceland one day, .

Since I wanted to be able to keep this experiment running for some more time, I thought about a way to pay once, then keep the service running basically forever.

A RaspberryPi3 seemed like the perfect fit for it. It was small, powerful enough and cheap enough.

For ~35$ you can get a small unix computer upon which, with some tinkering, you can run Google Chrome.

With this guide: How to run Google Chrome on RaspberryPi and some time, I was able to install InstaPy on my RaspberryPi and get it up and running.

This has more than just the advantage of cheaper service. When checking for bots, most services have a list of IP’s of data centers. DigitalOcean and other Infrastructure as a Service providers have dedicated IP’s which can be traced back to every datacenter.

A small computer like a the RaspberryPi runs in your home network, and has the same IP address as your computer or smartphone.

At the moment of wrapping this whole article up, I thought about not publishing it, because “automating” a site against it’s robot.txt — the document that tells bots what parts of the website the website owners would prefer they not scan.

For example, Facebook’s robot.txt starts with the following lines:

A whole bunch of sites have them:

Interestingly, Instagram doesn’t have one at all.

This is may contribute to my observation that there are a lot of bots on Instagram. Instagram itself doesn’t mind so much, since more bots mean more activity in the whole system.

Edit: Some pointed out, that Instagram in fact does have a robots.txt. You can check it out here.

As of writing this, I have ~2,800 followers. I plan to keep running my script until I either get banned from Instagram or rise to the highest heights.

No, seriously. I’m really interested seeing how far this can go.

Of course I’ll get back to you if there are some great breakthroughs or findings.

Up to now, I’ve only spent only $5 on renting a server. With the $50 coupon from GitHub’s “Student Backpack” I could let this run for another 5 months without investing a penny more. With the $35 RapsberryPi 3 probably forever.

If you’re into RaspberryPi’s, you could also just get one of the Model3’s and install all the necessary tools to let it run there for a one time cost of ~$35. That is what I did in the fourth month. If you’re interested check out How to run Google Chrome on RaspberryPi.

Also, I spend around $16 for the shipping of a giveaway I did when reaching 2,000 Followers.

So, without all the extra stuff, it would be only $5. If we’d include all the costs (including the ones I didn’t pay) I would’ve payed ~$100 to run it essentially forever.

Everyone. I’m serious. Even if you don’t want to bother with getting it up and running on a server, you can easily download the script and run it manually.

There are a lot of professional services that do exactly the same stuff that my script does. The only real difference is that they cost quite a lot of money (like FollowLiker for $100). Mine’s free.

I also added a quick start file in which you only have to enter some easy information.

If you’re curious about what each line does, check out the documentation on GitHub.

And if you invest some more time, you can checkout my step-by-step guide on how to setup a server for selenium automation.

If you like what I did, consider following me on

GitHub, Instagram, YouTube and Twitter. Be sure to star it on GitHub :P

Thank you for reading. I’m curious about what you think so hit me with some comments. 

You can also get in touch me directly through email.

Since I’m currently searching for an internship abroad, please hit me with any opportunities there!|||

A few months ago, I started a side project to learn Python and Selenium WebDriver at the same time. I just wanted to see whether I could get a few Instagram followers. But when I first ran the script…