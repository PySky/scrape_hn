Code For Cash: It's been 3 months since we launched on Indie Hackers. Month 3 revenue: $1194

This is the revenue report for Code For Cash (formerly known as Breaking Into Consulting) for its third month of operations.

Code For Cash is a service that provides resources for programmers. Our biggest value adds are

(a) We train you in best practices for freelance consulting through our book, "Code For Cash" and the accompanying video course,

(b) We find freelance consulting gigs for you,

(c) We build a beautiful web presence for you, and

(d) We are a community to eSocialize with as you spend your days working independently. We try not to drink any Code For Cash kool-aid, and since we aren't in an employer's chat, employer kool-aid and developer politicking -- such as undermining each other through nitpicking technical issues -- is absolutely forbidden.

Learn more about our product at https://codefor.cash/signup.php.

Now, on to the report!

This is a 25% increase from month one revenue, $959 [1].

25% growth in two months implies 2.5% w/w growth. Not exactly YC-quality (Paul Graham says startups should be able to grow at 7% w/w during YCombinator). And all this letting alone the fact that $1000 is a relatively easy base to grow from.

However, there are reasons to be optimistic.

We found new sales channels. So far, we've found customers through:

Another reason for optimism is that month one sales were entirely comprised of one-off sales. 58% of this month's sales were through recurring revenue. Recurring revenue forms a base that is much easier to grow off of. Although not 100% of subscribers have been delighted, we are working at systematically addressing the shortcomings: let's talk product.

We introduced programmer webpages as a new benefit for subscribers! Now,. subscribers get a beautiful, branded web presence for themselves as developers.

If they don't have their own domain name, we'll register one for them and handle renewal as long as they're members (if they ever want to leave, it's zero cost to port the domain elsewhere, and they may keep the HTML and CSS we generate for them).

Webpages offer programmers an opportunity to showcase their portfolio, a case study, a code sample, and provide their contact info [contact form + social media links].

Having a web presence is a way to show people (rather than tell them) that you get things done. And, it makes it easy for you to start sending email from your own branded domain name, another signal of professional quality (a free email service seems sketchy). Using a brand implies reputation and credibility; anonymity implies sketchiness.

See my example website at https://www.zackburt.com

On my todolist: automated reminders to help people complete their website. Before I do this, I want to learn more about why people are struggling so the reminders can be helpful rather than "nagging" (e.g. Don't have a code sample you have a license to? Apply to a quick gig and offer a discount with the condition that you get to show a portion of the code on your website and they give you a reference.)

We finally closed our first deal with a coding bootcamp: Florida Vocational Institute! https://www.fvi.edu

The sales cycle took about 2.5months. So far, they are thrilled with the service; we're giving students real world exposure, a web presence to take with them, and job leads – therefore, they accelerate the ROI of their investment in their trade education.

Better yet, since these students are hoping to make $15 to $20 per hour upon graduating, they're an appropriate fit for many of the lower end gigs that we find on Craigslist.

The job alerts system is getting better. Now, we're constantly monitoring even more sites for opportunities that match skill keywords, and we're doing a better job of weeding out the bad opportunities (red flag clients, onsite only, etc.) through keyword detection.

List of sites we now monitor:

Next on my list is Hacker News (the monthly Seeking Freelancer thread) and Twitter.

Before, when people joined as subscribers, I would interview them about their keywords and then manually make an entry into a MySQL that powered the database side of the job alerts system. Although it has been valuable since it forced me to learn a lot about my customers, it became problematic for a variety of reasons: cusotmers would need to bug me in order to update keywords; it created a too lengthy onboarding experience for new customers; et cetera. So, I launched a Rails app where users can manage accounts. This is the same app that manages presence. There's a hint here: the solid web presence is there to help close gigs.

We are in the extremely early stages of building systematic outreach to tech hiring managers to bring original gigs into the Code For Cash community. Previously, we had been doing this organically; Jay El-Kaake, for example, hired a few subscribers (one for a Magento gig; another for a MongoDB gig). So it makes sense that we would like to do this methodically.

However, this is really too early to talk about in depth as we are still in the 'market research' phase rather than the execution phase.

In conclusion, the Code For Cash community is growing and vibrant. There are now extensive, valuable and interesting conversations happening in the Slack channel that occur without me stoking conversation. There are many new things to be excited about for the future and I sincerely appreciate you following along with the progress.|||

This is the revenue report for Code For Cash (formerly known as Breaking Into Consulting) for its third month of operations. Code For Cash is a service that provides resources for programmers. Our ...