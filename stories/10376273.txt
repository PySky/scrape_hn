Please be advised, this article is rated S for Satire.

A bit of psychobabble that has been kicking around since 1978 is the “impostor syndrome,” a mental phenomenon that leaves sufferers unable to accept their self-worth and justify their achievements. While that sense of inadequacy may currently be epidemic in tech circles, the coddling response from abounding support groups does the vast majority of the afflicted great disservice. For 9 out of 10 technology workers, impostor syndrome isn’t a lie of the mind, it’s cold reality.

Let’s imagine that you’re the owner of a business and wish to assemble a crack, agile-oriented team to build and grow a new website. Here’s a typical group, with nine people holding nine distinct and well-understood roles:

Do you really need all nine? Nine salaries? Nine egos in the room?

Because it’s commonsense that every additional person on a product team increases process complexity and slows down decision-making, let’s strive for the bare minimum headcount needed to build your killer website.

In a now-legendary comedy bit, George Carlin dissects the Ten Commandments and pares down the redundancies to form a sleek and streamlined Two. We’ll do the same with your nine-person team, shining an interrogator’s lamp on each role, one-by-one, to find the impostor(s) of the group. Reader discretion is advised, there will be blood.

We start with the job title that sounds suspiciously like a children’s book monster. Surely, the position’s duties can’t be as silly as its nomenclature.

Here’s what a ScrumMaster, sorry “Certified” ScrumMaster, does according to ScrumAlliance.org:

On the surface, it appears as though Scrum is so complicated that its implementation requires a full-time teacher in attendance, not for a few weeks, but for the rest of time. It presupposes that Scrum’s intricacies will always evade absorption by the rest of the group, who we should note have spent years internalizing complex proofs, algorithms, mix models and cross-browser compatibility tricks. That can’t be right.

In reality, the “master” portion of ScrumMaster is modeled more after “Dungeon Master” than “Master’s Degree” — anyone can learn the basics of Scrum by watching a one hour YouTube video and that fancy Certification takes a weekend.

You might think that there’s value in how the ScrumMaster protects the group from distraction…until you realize how passive aggressive that is. Assigning someone the job of saying “no” to everyone around your group is like having your roommate tell a persistent suitor that you’re out of town, yes for the third time this month. Better to send a “Dear John” letter directly and finally.

In the words of this guy, “[A ScrumMaster] is a bullshit management role that involves responsibility without power.” Amen.

While blunt, there’s wisdom here. Design is much more than “look/feel” and great designers have always obsessed over the user’s overall experience. Even during the Mad Men days, art directors were paying attention to how a customer’s eyes darted across a page, their consumption context and how layout tweaks improved 1–800 number call volume. UX was such an intrinsic part of design, it didn’t need its own acronym.

Why aren’t we holding modern digital designers to that same standard?

If you have a graphic designer who only cares about color, it’s true that you need a strong UX designer to straighten them out. But we’re trying to build an A-list team with the minimum possible nodes. Let’s fire the UX’er and spend a little more money when hiring the designer.

Okay, so you have a proper designer on your team, but they’re not off the hook yet. We’re building a technology product in 2015, not 2005. You can’t get away with one person mocking up a layout in PhotoShop or InDesign and another coding that layout in HTML. Your competitor will have launched six versions by the time you’ve polished your first.

Instead of hiring a front end programmer who can’t design and pairing her with a graphic designer who can’t code, let’s hire a front end programmer with good design instincts and be done with it.

Oh, and if you need a logo, pay one of those crowd sourcing sites $99.

I don’t know why “marketing manager” is on this list. Probably because it would be so easy scratch out. Listen: PR and advertising are dead. Audiences are fragmented and competition is runaway, so the only way to become successful is through referrals and the only way to achieve that is with a God-level product.

Creating and selling a God-level product doesn’t need a marketing person, it needs a God-level production team.

“But what about defining your target audience?”

Easy, make sure that the production team IS the audience. Then you’ll always have product-market fit.

“But what about the marketing copy?”

Easy, don’t let the non-native English speaker write it. A God-level product speaks for itself anyway.

“But what about the 3 P’s of marketing? Pricing? Promotion? Positioning?”

Easy, make it free to build audience, encourage word-of-mouth to grow and God-level is its own position.

Still unconvinced? Read this seminal article by Andrew Chen, one of Silicon Valley’s great essay writers. We don’t need marketers, we need engineers who can double as “growth hackers”!

The sad fact is that no one likes the marketing department anyway. Make your team marketer-free and the gains you’ll make in recruiting will outweigh any impossible-to-measure increases in “brand equity.”

Verdict: Marketing manager is an impostor

Team Change: Delete marketing manager. Bestow “growth hacking” ability upon backend programmer

“Data scientist” is a sexy-sounding title, obviously crafted by a marketing guy who wanted to hire his unemployed math-major friend. (Shame that marketing guy couldn’t give his input on “ScrumMaster,” but I digress.)

While data is in fact critically important for developing and managing a product, making one person the Lord of all data will either stall you with analysis paralysis or lull you into a false sense of security. This is because interpreting data the “right way” is nigh impossible.

University-sheltered PhDs can spend a year looking at the nuances of a data set and come up with useless “on the one hand X on the other hand Y” conclusions. How can we expect a data scientist, with less training, no peer review and under brutal industry pressures, to do better than that?

Instead, let’s use data but not worship at its alter. Assign data duties to the backend programmer as a side gig. They won’t stress out over the distribution of residuals, but they’ll get the gist of what the data is saying and move on.

If you’re still worried that your backend developer won’t be up to the task, remember that there are two types of backend developers in the world. There are the impostor “I can code but hate math” variety that you see in most companies. These folks blindly copy their code from Stack Overflow. Then there are the computer scientists who probably double-majored in Math at MIT. Since Statistics is the easiest subfield in Math, they won’t have any trouble picking up the essentials.

A computer scientist who knows statistics is like Blade, half-human, half-vampire, with the strengths of both and the weaknesses of neither. Their technical skills let them parse data and build cool visualizations, while their overall busyness prevents them from over-thinking the details.

A QA tester is only needed when the team is rushed or if the product has low-quality code. Nothing about your product will be rushed because you’ll throw away arbitrary deadlines and adopt an “it’s done when it’s done mentality.” Dropping deadlines isn’t a radical notion, the best software companies in the world operate this way (see Valve, read PeopleWare).

In terms of low-quality code, QA testers do more harm than good. A QA tester is kind of like a crutch, if you know she’s there, you’ll slack off a little bit. Despite your best intentions, a part of you will always know that she’ll catch your mistakes and boomerang them back to you later.

To draw a parallel, I’ve made dozens of spelling and grammar mistakes in this article, but I can’t be bothered to correct them because I have a smart editor who’ll re-write most of these ramblings anyway. No editor? I become Shakespeare.

Dropping the deadlines and throwing away the crutch means…

It’s a brutal fact of life, but there’s a pecking order to programmers and front-end programmers are at the bottom. If you want to teach a computer scientist CSS or jQuery, give them an hour. If you assign a front-end programmer the task of building a recommendation engine, prepare for a panic attack.

If you jettison the front-end developer/designer, you can’t realistically expect the computer scientist to pick up the design slack, but in these modern times, that’s okay.

There’s a glut of websites and apps on the market and every possible UI problem has a dozen readily available solutions that your computer scientist can copy-and-paste from.

If your coder is too busy to do that basic market research, the advent of responsive design and parallax has reinvigorated the template market. Buy a modern template, style accordingly and 99% of consumers won’t notice the difference. How many company websites are built on SquareSpace these days?

Our computer scientist can get a rough beta version out — one with great utility — and then iterate according to data and feedback. Because our team is slim, those iterations will be so fast that suboptimal design decisions can be fixed in an hour.

I could wax bitter about what a bullshit job Product Manager is, but instead I’ll just quote someone who recently messaged me on Twitter:

“Product people are worthless without the engineers/designers/artists that made the product. Get a real job.” — (Name redacted.)

In any case, it should be clear by now that if there’s only one other person on the team, that Product Manager is closer to a personal assistant than an equal contributor.

Much of a Product Manager’s value comes from being a generalist in all of the fields listed above and corralling those disparate roles toward a common purpose. But if we determined that the specialists of those fields were impostors, what chance does the generalist have? And corralling one person doesn’t make sense.

If our computer scientist needs a pep talk or someone to bounce ideas off of, he’ll ask one of the other computer scientists in the organization.

If he needs help deciding what to build next, he’ll come up with a programmatic way to prioritize.

And he can get his own coffee, thank you very much.

The final team member! What you’re left with is the only non-redundant source of value, the computer scientist.

Finding this person will be hard since most programmers are impostors and the ones who aren’t don’t make good interview subjects. But you’re saving on *eight* other salaries, so put eight times the effort into the hire.

To recap, you’re looking for a deep computer scientist who’s not only great at math, but is also a generalist who loves learning new fields. She must be self-motivated and a native English speaker who can write competently. She should be in the target audience of the product you’re building and needs to be assertive enough to say “no” from time to time, but not so assertive that she becomes a terror. She must be a “growth hacker.” She should be a ferocious prioritizer, willing to spend most of her time on dull, high-value tasks rather than interesting, abstract ones. She should also be presentable to clients and to the conference circuit, so good grooming, stylish clothes and a crisp voice are mandatory. If she can work PhotoShop, that would be a great bonus, but we’ll figure it out if not.

Difficult qualifications to be sure, but not impossible. Look to Mark Zuckerberg, Elon Musk or Drew Houston for the template. There are literally dozens of examples in Silicon Valley alone.

Find one, assign her a big problem, and get out of her way. Use the profits to hire another and keep repeating until you have Google.

Verdict: Computer Scientist is not an impostor

Team Change: Upgrade computer scientist to unicorn computer scientist

We’re done! Your team is pared down to one superproductive member. You can now unleash her upon the world and sit back and reap the treasures that spill out of her keyboard. This article is concluded!

Now that I think of it, we forgot to evaluate one person: YOU, the business owner. What’s YOUR job supposed to be in all of this?

How are you supposed to manage and motivate your unicorn computer scientist?

Money? She can work at IBM for a year, save up, and live comfortably for 10 without a full-time job

The Idea? She’ll iterate and test 100 ideas in the time it takes for you to explain your bad one

The mentorship? If you’re old and in tech, most your knowledge is out-of-date. If you’re young and not actively working as a computer scientist, you probably sucked at it to begin with.

The culture? What culture? You’ve fired everyone else on the team…

Reader, it looks like you’re the biggest impostor of them all!

Adam Ghahramani is a professional impostor who has worn many different (counterfeit) hats over the years. Writing is his latest scam. Find him on Twitter and make friends!|||

A bit of psychobabble that has been kicking around since 1978 is the “impostor syndrome,” a mental phenomenon that leaves sufferers unable to accept their self-worth and justify their achievements…