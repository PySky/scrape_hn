Knowing what code changed recently is extremely helpful in determining the cause of an error, which is why we’ve expanded our Releases feature to support commit data. By integrating commit data, you’ll unlock a number of helpful features:

To get started, go to your organization’s dashboard, click “Repositories” and then click “Add Repository.” This will create a webhook and we’ll start collecting commit data, which you can then reference in releases.

To indicate which commits are part of a release, you simply send along a attribute when creating a release. In the below example, we’re telling Sentry that this release contains the my-repo repository, in which the current version (HEAD) is . When you send this information, we’ll figure out which commits are part of the release based on your git history and previous releases.

Once you are sending commit data, you can start resolving issues by including in your commit messages. For example, a commit message might look like:

When Sentry sees this, we’ll automatically annotate the matching issue with a reference to the commit, and, later, when that commit is part of a release, we’ll mark the issue as resolved.

We’ll have a series of posts about the new features we’ve added to our releases workflow. In the meantime, you can check out our docs for more details on how to get started. As always, let us know what you think on the Sentry forum.|||

