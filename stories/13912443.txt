It’s not like JavaScript was the underdog before Node.js, but this framework, runtime made companies move from languages like Java or Ruby on Rails, so it’s stepping up in the ring feisty and ready to rumble. JavaScript already ruled supreme on the front end, but with Node.js (and not just that) it grew to become, in a way, that sought after universal language. This expression “universal language” has been used as a benefit when mentioning why Uber or Groupon moved to Node.js, but the benefit itself is not just business-wise, it’s something important for developers as well.

One language to rule them all, one language to bring them all together

The latter is a bit too optimistic, but JavaScript has become somewhat of a tentacular being that really gets around. When it comes to pushing the language forward and going where no JavaScript developer has gone before, there is a lot of individual interest.

JavaScript is being used in an increasingly diverse type of software applications, but the server side represented through Node.js is its “magnus opus” of expansion. Companies are moving to Node because it’s fast and easy to use and because it’s easy to transfer front end developer to the backend. Because it gets them closer to that universal language state, because it’s easier to get things done.

Node.js is a New Frontier for JavaScript

Node is hugely popular, it has a vibrant community around it, an active open Foundation that oversees its development, conferences (Node Interactive) and a growing number of companies using it. The Node.js package manager (npm) is the biggest package manager in the world, with a growing list of active contributors. It hasn’t been all unicorns and rainbows, but right now, in 2017, Node.js is in a really good place and JavaScript is none the worse because of it.

Node is a very big tentacle of JavaScript but it’s not the only one, it’s rapidly expanding to just about every software development ecosystem possible.

JavaScript Native is powering Android and iOS apps, through React Native and NativeScript, it’s a part of robotics and IoT through Cylon.js, and with Electron and NW.js it can be used to build desktop apps.

JavaScript is everywhere, but does that mean it’s becoming that aforementioned universal language, or just that it’s growing new “tentacles” ? And are either of those things a good thing for JavaScript? I’ll leave you with this to ponder.|||

It’s not like JavaScript was the underdog before Node.js, but this framework, runtime made companies move from languages like Java or Ruby on Rails, so it’s stepping up in the ring feisty and ready…