(pronounced "oauth tool") is a simple command-line tool for working with Google OAuth 2.0. Its primary use is to fetch and print OAuth 2.0 access tokens, which can be used with other command-line tools and shell scripts.

This tool also demonstrates how to design a simple and easy-to-use OAuth 2.0 client experience. If you need to reimplement this functionality in another programming language, please use Go OAuth2l as reference code.

supports all Google OAuth 2.0 authentication flows for both user accounts and service accounts in different environments:

NOTE: caches the OAuth credentials in user's home directory to avoid prompting user repeatedly.

Specifies an OAuth credential file, either an OAuth client ID or a Service Account key, to start the OAuth flow. You can download the file from Google Cloud Console.

Using an external Single Sign-on (SSO) command to fetch OAuth token.

 The command outputs an OAuth access token to its stdout. The default command is for Google's corporate SSO. For example:

Then use oauth2l with the SSO CLI:

Fetch and print an access token for the specified OAuth scopes. For example, the following command prints access token for the following OAuth2 scopes:

NOTE: the flag specifies the output format. The supported formats are: bare (default), header, json, json_compact, pretty.

The same as , except the output is in HTTP header format:

The command is designed to be easy to use with . For example, the following command uses the BigQuery API to list all projects.

If you need to call Google APIs frequently using , you can define a shell alias for it. For example:

Print information about a valid token. This always includes the list of scopes and expiration time. If the token has either the or scope, it also prints the email address of the authenticated identity.

Test a token. This sets an exit code of 0 for a valid token and 1 otherwise, which can be useful in shell pipelines.

Reset all tokens cached locally. We cache previously retrieved tokens in the file .|||

oauth2l ("oauth tool") is a simple CLI for interacting with Google oauth tokens.