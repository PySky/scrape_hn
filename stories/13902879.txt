optenum(1) uses static analysis to extract the options accepted by a binary and lets you use bash's autocompletion with options.

Building optenum is quick and easy. Download the source into a staging directory, run then

Note The above will install optenum under the current user's home directory. For a system-wide install, replace the cmake invocation above with . This will cause optenum to be installed under , which will require elevated privileges.

All that's left to do is make sure the completion function is sourced and registered by your shell. You may want to add the following to your :

optenum(1) uses and from the GNU binutils package to parse the dynamic symbols used by a binary executable and disassemble its code.

When it finds a call to one of the supported option-parsing functions below, optenum will attempt to reconstitute the arguments passed as part of the call and, in the event the argument(s) that describes valid options has successfully been retrieved and points to a chunk of data hardcoded in the binary, finally parses it and exposes options to the user.

optenum(1) never executes foreign code and doesn't rely on any particular behaviour in the target binary. No usage message? No problem!

There are several moving parts and optenum operates on a best-effort basis. When optenum can't retrieve options, it will try to fail gracefully and fail fast.

optenum(1) extracts options from binary executables by relying on the assumption that the task of defining valid command line options is done through a call to one of the following supported functions:

optenum(1) only supports argument passing conventions at this time.

Please log any bugs you may encounter using the GitHub issue tracker or alternatively send a mail to .|||

optenum(1) is an option enumerator for command line executables.