TensorFlow implementation of word2vec applied on https://www.kaggle.com/tamber/steam-video-games dataset, using both CBOW and Skip-gram.

Context for each game is extracted from the other games that the user owns. For example if a user has three games: Dota 2, CS: GO, and Rocket League, this (input -> label) pairs can be generated:

For more reference, please have a look at this papers:

There are three training scripts:

Each script outputs an image with the game embeddings visualised using t-SNE, and a .npy file containing embeddings, dictionary, and reverse dictionary:

There are three notebooks that load the embeddings + some examples:|||

game2vec - TensorFlow implementation of word2vec applied on https://www.kaggle.com/tamber/steam-video-games dataset, using both CBOW and Skip-gram.