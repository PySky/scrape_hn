Starbase is a Webpack 2, ES6 & PostCSS boilerplate that utilizes some of the juiciest open source tools around such as:

This boilerplate is intended to be small in scope so that it can be easily extended and customized, or used as a learning tool for folks who are trying to become familiar with Webpack 2.

Starbase is fully open source and public domain, so you are free to do whatever you wish with it -- commercially or personally. You can buy me a beer next time you're in Boston, give me credit in a Konami code easter egg, or you can erase all signs of origin and tell your coworkers that you made it yourself. It's all good!

After completing the steps below, you will be ready to begin using Starbase:

Note: if you hate Yarn for some reason, you can skip Step 2 and use instead of in Step 4.

Starbase uses webpack-dev-server to serve up your project at http://localhost:8080 for streamlined and convenient development.

After running in the project root, your code will be served at the url above and watched for changes. As you modify code in , the project will be recompiled and your browser will refresh to show the latest changes.

Use in your project root to run a production build.

Production builds compile & minify your assets into for distribution and/or integration into whatever codebase you'll be using these assets in.

Starbase is setup to clear all contents of (where compiled assets are piped into) during each . If you'd like to remove this part of the build process, perform the following steps:

Removing the cleanup process means that deleted assets in will not be deleted in until you manually do so. I recommend keeping the cleanup process intact unless you have a specific reason not to, such as having un-managed assets in .

Starbase uses ESLint for Javascript (ES6) linting. The config ( ) included out of the box is very basic and does not contain many rules. I recommend modifying this to your liking. Check out the official docs for more information.|||

starbase - ‚≠ê a webpack 2 boilerplate w/ babel (es6), eslint, postcss, cssnext & more