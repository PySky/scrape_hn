In my previous publication, we have explored how you can transfer data from JSON to SQL Server 2016. Now, I am going to describe how you can generate JSON from relational data. You can do this using the FOR JSON statement.

The easiest way is to use FOR JSON AUTO. In this case, it will generate the JSON object array where each row in the selection will be a separate object, while a column will be a property.

As you can see, NULL values are being ignored. If we want to include them into JSON, we can use the additional INCLUDE_NULL_VALUES option.

The WITHOUT_ARRAY_WRAPPER statement may help if we want to display JSON without square brackets.

If we need to combine the results with the root component, then it is better to use the ROOT statement and specify its proper name.

Finally, if you want to create JSON with a more complex structure, specify proper names for properties and group them, then you should use the FOR JSON PATH statement. I recommend that you should refer to the first article about JSON to learn more about the path statements for JSON.

To check how you can generate JSON with a more complex structure, run this query:

In my further publication, we will explore how you can convert the JSON object into a relational data set.|||

This article describes how it is possible for a user to generate JSON from the relational data using the FOR JSON statement