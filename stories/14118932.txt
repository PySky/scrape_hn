Alertmanager UI is useful for browsing alerts and managing silences, but it's lacking as a dashboard tool - unsee aims to fill this gap. It's developed as a dedicated tool as it's intended to provide only read access to alert data, therefore safe to be accessed by wider audience.

Alertmanager's API isn't stable yet and can change between releases. unsee currently supports Alertmanager , and .

The unsee process doesn't send any API request to the Alertmanager that could modify alerts or silence state, but it does provide a web interface that allows a user to send such requests directly to the Alertmanager API. If you wish to deploy unsee as a read-only tool please ensure that:

unsee process metrics are accessible under path by default. If you set the WEB_PREFIX option a path relative to it will be used.

unsee is go installable, so the easiest way is to run:

The binary will be installed into directory. Note that this will build the latest master version which might not work with your Alertmanager version. See supported Alertmanager versions.

To clone git repo and build the binary yourself run:

is configured via environment variables or command line flags. Environment variable or cli flag is the only option required to run. See Environment variables section below for the full list of supported environment variables. Examples:

There is a make target which will compile and run unsee:

By default it will listen on port and Alertmanager mock data will be used, to override Alertmanager URI set and/or make variables. Example:

Official docker images are built and hosted on hub.docker.com.

Latest release details can be found on GitHub.

Note that latest master branch might have bugs or breaking changes. Using release images is strongly recommended for any production use.

This will build a Docker image from sources.

Will run locally built Docker image. Same defaults and override variables apply as with . Example:

Timeout for requests send to Alertmanager, accepts values in time.Duration format. Examples:

This option can also be set using flag. Example:

Interval for refreshing alerts and silences, tells unsee how often pull new data from Alertmanager, accepts values in time.Duration format. Examples:

This option can also be set using flag. Example:

Note that the maximum value for this option is . The UI has a watchdog that tracks the timestamp of the last pull. If the UI does not receive updates for more than 15 minutes it will print an error and reload the page.

URI of the Alertmanager instance, unsee will use it to pull alert groups and silences. Endpoints in use:

scheme is only useful for testing purposes, it's used for target.

This option can also be set using flag. Example:

This variable is required and there is no default value.

Will enable gin debug mode. This will configure to print out more debugging information on startup. Examples:

This option can also be set using flag. Example:

List of label names that will all have the same color applied (different than the default label color). This allows to quickly spot a specific label that can have high range of values, but it's important when reading the dashboard. For example coloring the instance label allows to quickly learn which instance is affected by given alert. Accepts space separated list of label names. Examples:

This option can also be set using flag. Example:

This variable is optional and default is not set (no label will have static color).

List of label names that should have unique colors generated in the UI. Colors can help visually identify alerts with shared labels, for example coloring hostname label will allow to quickly spot all alerts for the same host. Accepts space separated list of label names. Examples:

This option can also be set using flag. Example:

This variable is optional and default is not set (no label will have unique color).

Default alert filter to apply when user loads unsee UI without any filter specified. Accepts comma separated list of filter expressions (visit /help page in unsee for details on filters). Examples:

This option can also be set using flag. Example:

Default is not set (no filter will be applied).

This allows to define regex rules that will be applied to silence comments. Regex rules will be used to discover JIRA issue IDs in the comment text and inject links to those issues, instead of rendering as plain text. Rule syntax:

The above will match DEVOPS-123 text in the silence comment string and convert it to link.

This option can also be set using flag. Example:

This variable is optional and default is not set (no rule will be applied).

HTTP port to listen on. Example:

This option can also be set using flag. Example:

DSN for Sentry integration in Go. See Sentry documentation for details. Example:

This option can also be set using flag. Example:

This variable is optional and default is not set (Sentry support is disabled for Go errors).

DSN for Sentry integration in javascript. See Sentry documentation for details. Example:

This option can also be set using flag. Example:

This variable is optional and default is not set (Sentry support is disabled for javascript errors).

List of label names that should not be shown on the UI. This allows to hide some labels that are not needed on the alert dashboard. Accepts space separated list of label names. Examples:

This option can also be set using flag. Example:

This variable is optional and default is not set (all labels will be shown).

URL root for unsee, you can use to if you wish to serve it from location other than /. Examples:

This will configure unsee to serve requests from http://localhost/unsee/ instead http://localhost/.

This option can also be set using flag. Example:

Please see CONTRIBUTING for details.|||

unsee - Alert dashboard for Prometheus Alertmanager