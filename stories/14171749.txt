Posted by SBGK (A) on February 8, 2013 at 00:31:47 In Reply to: A revolution in audio rendering posted by SBGK on January 29, 2013 at 15:42:42: 



found that best vs2010 optimisation settings were for speed. 



playing wav files from a ramdisk gave best sound



then moved on to memory play, initially SQ was worse.



found that a function called memcpy was the culprit, most memory players use memcpy and this is one of the reasons why memory play sounds worse ie digital sounding. Fortunately there is an optimised version of memcpy from http://www.agner.org/optimize/, using this version removes the hard edge produced by memcpy. the other thing I did was to close the file after reading into the buffer.



also most players use malloc to get memory while new is the c++ method and sounds better.



updated exe below, sounds fantastic I use it all the time now, doesn't have the processed sound of JPlay and is the best player I have heard on my system.



https://rapidshare.com/#myrs_filemanager/file/3363



optimised loop below. 









 BYTE *sound_buffer = new BYTE [sizeof(BYTE) * nBytesInFile];



 hr = mmioRead(hFile, (HPSTR)sound_buffer, nBytesInFile);

 mmioClose(hFile, 0);

 //UINT32 nByteCnt = nBytesInFile - nBytesThisPass*2;



 //while (nBytesToSkip < nByteCnt)

 //while (--nBuffersPlayed)

 do

 {

 WaitForSingleObject(hNeedDataEvent, INFINITE);

 hr = pAudioRenderClient->ReleaseBuffer(nFramesInBuffer, 0); 

 hr = pAudioRenderClient->GetBuffer(nFramesInBuffer, &pData);

 A_memcpy (pData, sound_buffer + nBytesToSkip, nBytesThisPass);

 nBytesToSkip += nBytesThisPass;

 }

 while (--nBuffersPlayed);

 //while (nBytesToSkip < nByteCnt);

 //while (nBuffersPlayed > 0);

 // render loop

 

 WaitForSingleObject(hNeedDataEvent, INFINITE);



 

 //hr = mmioRead(hFile, (HPSTR)pData, nBytesThisPass);

 hr = pAudioRenderClient->ReleaseBuffer(nFramesInBuffer, 0);



 WaitForSingleObject(hNeedDataEvent, INFINITE);



 hr = pAudioRenderClient->GetBuffer(nFramesInBuffer, &pData);

 nFramesThisPass = nFramesInFile - nBuffersinFile*nFramesInBuffer;

 nBytesThisPass = nFramesThisPass * pWfx->nBlockAlign;



 A_memcpy (pData, sound_buffer + nBytesToSkip, nBytesThisPass);

 

 if (nFramesThisPass < nFramesInBuffer) {

 UINT32 nBytesToZero = (nFramesInBuffer * pWfx->nBlockAlign) - nBytesThisPass;

 ZeroMemory(pData + nBytesThisPass, nBytesToZero);

 }



 http://mqnplayer.blogspot.co.uk/ continue to optimise and get improvements in sound, one thing I have found is that as the loop is optimal the reliance on low latency is reduced, in fact sounds much worse at low values, so can now use a period of 0.5sfound that best vs2010 optimisation settings were for speed.playing wav files from a ramdisk gave best soundthen moved on to memory play, initially SQ was worse.found that a function called memcpy was the culprit, most memory players use memcpy and this is one of the reasons why memory play sounds worse ie digital sounding. Fortunately there is an optimised version of memcpy from http://www.agner.org/optimize/, using this version removes the hard edge produced by memcpy. the other thing I did was to close the file after reading into the buffer.also most players use malloc to get memory while new is the c++ method and sounds better.updated exe below, sounds fantastic I use it all the time now, doesn't have the processed sound of JPlay and is the best player I have heard on my system.https://rapidshare.com/#myrs_filemanager/file/3363optimised loop below.BYTE *sound_buffer = new BYTE [sizeof(BYTE) * nBytesInFile];hr = mmioRead(hFile, (HPSTR)sound_buffer, nBytesInFile);mmioClose(hFile, 0);//UINT32 nByteCnt = nBytesInFile - nBytesThisPass*2;//while (nBytesToSkip < nByteCnt)//while (--nBuffersPlayed)doWaitForSingleObject(hNeedDataEvent, INFINITE);hr = pAudioRenderClient->ReleaseBuffer(nFramesInBuffer, 0);hr = pAudioRenderClient->GetBuffer(nFramesInBuffer, &pData);A_memcpy (pData, sound_buffer + nBytesToSkip, nBytesThisPass);nBytesToSkip += nBytesThisPass;while (--nBuffersPlayed);//while (nBytesToSkip < nByteCnt);//while (nBuffersPlayed > 0);// render loopWaitForSingleObject(hNeedDataEvent, INFINITE);//hr = mmioRead(hFile, (HPSTR)pData, nBytesThisPass);hr = pAudioRenderClient->ReleaseBuffer(nFramesInBuffer, 0);WaitForSingleObject(hNeedDataEvent, INFINITE);hr = pAudioRenderClient->GetBuffer(nFramesInBuffer, &pData);nFramesThisPass = nFramesInFile - nBuffersinFile*nFramesInBuffer;nBytesThisPass = nFramesThisPass * pWfx->nBlockAlign;A_memcpy (pData, sound_buffer + nBytesToSkip, nBytesThisPass);if (nFramesThisPass < nFramesInBuffer) {UINT32 nBytesToZero = (nFramesInBuffer * pWfx->nBlockAlign) - nBytesThisPass;ZeroMemory(pData + nBytesThisPass, nBytesToZero);http://mqnplayer.blogspot.co.uk/ This post is made possible by the generous support of people like you and our sponsors:

Topic - optimised WASAPI exclusive event c++ code - SBGK 09:33:11 01/26/13 (179) might it work on XP X64 also? - hfavandepas 09:37:16 09/06/13 (33) RE: might it work on XP X64 also? - SBGK 15:34:02 09/06/13 (32) Whow, I wasn't repaired for this. What a SUPERB sound quality !!! - hfavandepas 09:29:09 09/10/13 (31) RE: Whow, I wasn't repaired for this. What a SUPERB sound quality !!! - SBGK 12:04:01 09/10/13 (2) 2.31 sse4 intel. Found it. It's there now. (NT) - hfavandepas 12:43:27 09/10/13 (0) uploaded 2.31 sse4 intel. Do I look at the correct place? - hfavandepas 12:41:16 09/10/13 (0) RE: Whow, I wasn't repaired for this. What a SUPERB sound quality !!! - SBGK 11:14:20 09/10/13 (27) Thank you. Lets see if I can get 2012 up and running (NT) - hfavandepas 12:46:06 09/10/13 (24) RE: Thank you. Lets see if I can get 2012 up and running (NT) - SBGK 14:59:21 09/10/13 (20) RE: Thank you. Lets see if I can get 2012 up and running (NT) - SBGK 15:18:58 09/10/13 (19) RE: Thank you. Lets see if I can get 2012 up and running (NT) - SBGK 13:22:07 09/10/13 (0) RE: Thank you. Lets see if I can get 2012 up and running (NT) - SBGK 13:12:19 09/10/13 (0) RE: Thank you. Lets see if I can get 2012 up and running (NT) - SBGK 12:56:59 09/10/13 (0)   Remember my Moniker & Password  (What's this?)    Eat Me  Automagically notify you when someone responds. To view your new posting or follow-up, click on the RELOAD or REFRESH button on your browser.|||

RE: A revolution in audio rendering  - SBGK - Computer Audio Asylum