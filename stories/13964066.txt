What if a cowboy programmer was put in charge of a waterfall development cycle? I assure you this has been tried at least one time.

Git is popular, so let’s use git. But instead of feature branches, just name your branches with your name. This should keep everyone accountable and transparent, right?

Master is a bottleneck, so let’s just give everyone full read-write access. This should force everyone to resolve merge conflicts before being allowed to ship. Everyone will surely coordinate to avoid duplicate or conflicting work.

Teams form naturally like a high-school cafeteria, so let’s allow everyone to pick or move their office desk assignments as they choose. Surely people will form groups related to work habits rather than cliques and identity politics.

Everyone cares about business goals, so let’s not force objectives onto developers. Surely teams will focus on whatever is the most relevant subject taken from overall business demand.

Everyone needs incentives, so let’s assign promotions by percentage of commits. Surely this will improve code quality.

Finally, none of this worked out as planned. So the only rule is that cowboy rules.|||

What if a cowboy programmer was put in charge of a waterfall development cycle? I assure you this has been tried at least one time. Git is popular, so let’s use git. But instead of feature branches…