First lecture will be Tue Aug 30 This graduate course provides an introduction to substructural logics, such as linear, ordered, affine, bunched, or separation logic, with an emphasis on their applications in computer science. This includes the design and theory of programming constructs for concurrent message-passing computation and techniques for specifying and reasoning about programming languages in the form of substructural operational semantics. Prerequisites: This is an introductory graduate course with no formal prerequisites, but an exposure to functional programming and type systems may be helpful. Enterprising undergraduates are welcome to attend this course. Prior Versions of This Course There is no textbook, but lecture notes and papers will be posted Weekly homework is assigned each Thursday and due the following Thursday. 

 Late homework will be accepted only under exceptional circumstances. Learning objectives: After taking this course, students will be able to define and reason about programming languages using substructural operational semantics apply the judgmental method to define logics and type theories for a rich variety of applications appreciate the deep philosophical underpinnings and elegance of the computation-as-proof-reduction and computation-as-proof-construction paradigms Topics: Many of these topics are tentative, depending on the pace of the course and participant interests. From inference rules to propositions and back Even more tenative:|||

Substructural Logics