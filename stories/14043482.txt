What’s the best way to test your Mix tasks? I needed to write a custom task yesterday, and I wanted to start off right by writing a test. I wanted to reuse some code that generates & verifies a JWT and spits it out in the terminal.

The code has always been relatively simple:

My test started off looking like this:

OK, this is fine, but there was an annoying side effect: the JWT was printed to when I ran the tests. I thought was supposed to actually capture and suppress the output… I was wrong. Or, I was missing something, and that ended up being the case.

I figured the best guidance I could get would be to see what Phoenix did, and I found an example in the routes task test:

Yes, assert_received seems like a cleaner way to go. How did this change my tests?

Still though, the JWT was being printed to ! I didn’t even know where to begin searching for how to handle this, so I went back to the Phoenix tests and noticed a helper was being required.

The key was at the top of that file!

Once I changed my tests to include that, the unwanted output went away and I was happy with the shape of the tests.

I hope this saves you some trouble, and I’d love to hear how you test your tasks. Mention me on Twitter with a link to a Gist and I’ll add it here.

I ended up using so I could pass in , and . My final test looked like this:

I’m really happy with the way that turned out.

Kelvin Stinghen clarified how one might use this from an umbrella application.|||

On a mission. Not sure what the mission is yet, but I'm on it.