Swift 3.1 is now officially released! Swift 3.1 is a minor release that contains improvements and refinements to the Standard Library. Thanks to efforts by IBM and other members of the community, it also includes many updates to the Linux implementation of Swift. There are also a number of updates to Swift Package Manager.

Swift 3.1 is a minor language release. It is source compatible with Swift 3.0. It contains the following language changes and updates, most of which went through the Swift Evolution process:

The protocol now has two new members:

See more at: SE-0045: Add and to stdlib

Swift 3.1 extends the attribute to use the version of Swift to indicate the lifecycle of a declaration. As an example, an API that is removed in Swift 3.1 would be written as:

See more at: SE-0141: Availability by Swift version

Swift 3.1 adds a new family of conversion initializers to all numeric types that either complete successfully without loss of information or return nil.

See more at: SE-0080: Failable Numeric Conversion Initializers

The version of that takes a is deprecated in favor of a new method on that takes a , with a goal of improving memory safety and enabling faster initialization of memory from sequences.

See more at: SE-0147: Move UnsafeMutablePointer.initialize(from:) to UnsafeMutableBufferPointer

Package dependencies are now stored in the tool-managed build directory by default, and a new command allows users to “begin editing” on a package, moving it under the user’s control (into the directory), exempting it from dependency updates, and allowing the user to commit and push changes to that package.

See more at: SE-0082: Package Manager Editable Packages

The version of each dependency you’ve used is now recorded in a file, which can be checked in to share those versions with other users of your package; and commands provide further control. The pinned versions of a package’s dependencies are fetched by default when resolving dependencies, but will re-resolve to the latest allowable dependency versions and update the pinfile.

See more at: SE-0145: Package Manager Version Pinning

Packages can now specify the minimum version of the Swift tools that they require. This requirement can be edited with the command and is recorded at the top of the manifest. Package versions which require newer Swift tools than those in use will be ignored by dependency resolution, so packages can adopt new Swift features without breaking clients who are using older Swift tools. The minimum tools version required determines which Swift language version is used to interpret the manifest, and which version of the API is available.

See more at: SE-0152: Package Manager Tools Version

Packages can now specify whether their sources are written in the Swift 3 or Swift 4 language version. If not specified, a default is inferred from the Package’s minimum Swift tools version.

See more at: SE-0151: Package Manager Swift Language Compatibility Version

Documentation for the Swift Package Manager can be found in the repository.

Swift 3.1 is source compatible with Swift 3.0. To help with moving to Swift 3.1 from earlier releases of Swift, Xcode 8.3 contains a code migrator that can automatically handle many of the need source changes. There is also a migration guide available to guide you through many of the changes — especially through the ones that are less mechanical and require more direct scrutiny.

An updated version of The Swift Programming Language for Swift 3.1 is now available on Swift.org. It is also available for free on Apple’s iBooks store.

Official binaries for Ubuntu 14.04, Ubuntu 16.04 and Ubuntu 16.10 are available for download.

For development on Apple’s platforms, Swift 3.1 ships as part of Xcode 8.3.

Development on Swift 3.1 was tracked in the on the following repositories on GitHub:

The tag designates the specific revisions in those repositories that make up the final version of Swift 3.1.

The will remain open, but under the same release management process, to accumulate changes for a potential future bug-fix “dot” release.|||

