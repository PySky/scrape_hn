The latest Erlang & Elixir Factory San Francisco was definitely worth the trip: new faces, interesting ideas and a buzzing hallway track.

As usual, plenty of top-notch technical talks, but personally I found that two important trends emerged: teaching and embedded devices.

In that respect, here are some highlights:

In the opening keynote, Sarah Allen delivered a very powerful idea: the way we encode ideas in a language (whether it’s programming or not, it doesn’t really matter) also defines how we think about the world.

It’s a solid linguistic perspective that can help us driving new adoption and community growth. Erlang and Elixir have a rich vocabulary that can help solving the big technological challenges of tomorrow, so we should work and capitalise on that.

Michal Slaski introduced Erlang Performance Lab (EPL), a tool capable of visualising the traffic between nodes and processes in a Erlang/Elixir system.

While walking through its features and capabilities, Michal touched on one of the most difficult challenges we face when teaching Erlang/Elixir: “seeing” processes.

EPL has an incredible potential as an educational tool that can help in exploring applications and grasping how a process-based system works, especially for people whose previous development experience doesn’t include anything similar.

Best of all, this tool is open-source and open to contributions from all levels of experience.

There were quite a few talks related to the embedded device development space.

On the theoretical front, Carl Hewitt dove into strong types and concurrency to outline a mental model for the development of IoT devices, touching various topics from security to computational models.

In terms of tools, Justin Schneck’s talk Building Devices with Elixir/Erlang using Nerves showed that by using Nerves, you can quickly create robust devices from a wide selection of off the shelf hardware and accessories.

Peer Stritzinger also showed how it’s possible to dive into hardware-based development with minimal investment in his talk, Wireless Embedded Erlang Applications with Grisp Hardware Boards and Toolchain.

Ever wanted to know how to quickly prototype Erlang Embedded Wireless Applications? Look no further.

In general, the IoT space seems to be fertile ground for Erlang/Elixir based technologies and these talks reflect the effort the community is putting into creating affordable tools that can help fostering innovation.

Chatting to different people revealed quite a broad range of projects and use cases, from startups to big companies (some of them new in the Elixir/Erlang space).

There’s a shared consensus that these technologies are solid and worth investing into, so we can safely say we’re past the phase where people are wondering about the commercial suitability of Erlang/Elixir (particularly the latter).

At the same time, there’s a clear need to bridge a knowledge gap between people with multi-year expertise on distributed computing and a significant number of people joining the development community.

Conversely, BEAM for a wider audience means more exposure to topics like user-experience, user interfaces, fast prototyping and generally speaking more user-facing software.

In short, lots of food for thought.

Catch up on the latest and greatest developments in Elixir at ElixirConf.EU, where Claudio will discuss availability >|||

The latest Erlang & Elixir Factory San Francisco was definitely worth the trip: new faces, interesting ideas and a buzzing hallway track.

As usual, plenty of top-notch technical talks, but personally I found that two important trends emerged: teaching and embedded devices.

In that respect, here are some highlights: