The official API Client to use IBM Quantum Experience in Python.

This package can be use in Jupyter Notebook.

You can install me using or . For example, from the command line:

To install the package in Jupyter, you have to run in a Notebook:

or, if you want the standard output, one could even use the exclamation bang:

Now it's time to begin doing real work with Python and IBM Quantum Experience.

Then, initialize your IBM Quantum Experience connection by supplying your token. You can obtain the token from Account area of Quantum Experience Platform in Personal Access Token section. An optional object knows as config has several extra options to customize, like the url of the API:

By default, the config parameter is defined like:

To get the information of a Code, including the last executions about this Code, you only need the codeId:

To get the information about the last Codes, including the last executions about these Codes, you only need call:

To get all information (including the Code information) about a specific Execution of a Code, you only need the executionId:

To get only the Result about a specific Execution of a Code, you only need the executionId:

To know the status (if it is running or in maintenance) of a device (real chip 5Q by default) you can run:

To show the result and the code in Jupyter, you can use the next snippet that has some visual representation functions:

If you want participate in the project, you can clone the repository and install the dependencies to run it.

You can do a pull request to improve or add any functionality.

You can run the tests under folder. See the test/README file to more information.|||

qiskit-api-py - A Python library for the Quantum Experience API