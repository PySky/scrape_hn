Note that according to your browser scope some transformation can be skipped to avoid extra useless output. Eg: if you use don’t cover IE 8, rem fallback and rgba fallback might be skipped.

Vendor prefixes are automatically added (and removed if deprecated/useless depending on your browser scope) using autoprefixer).

The current transformation for custom properties aims to provide a future-proof way of using a limited to selector of the features provided by native CSS custom properties.

⚠️ The definitions are limited to selector.

Allows you to store a set of properties in a named custom property, then reference them in other style rules.

⚠️ The definitions are limited to selector.

Allows you to use safely calc with custom properties by optimizing previously parsed references.

Allows to replace min-/max- with & (syntax easier to read)

A color function to modify colors (transpiled to: )

There is a lot of color modifiers available, so be sure to check them !

Similar to but easier for humans to work with (transpiled to: ).

Allows you to use more than 50 shades of gray (transpiled to: ). For the first argument, you can use a number between 0 and 255 or a percentage.

Allows use to use 4 or 8 digits hexadecimal notation (transpiled to: ).

Allows you to use the new color keyword as a homage to Eric Meyer’s daughter

are transformed to . You might take a look at the support of font feature settings.

The W3C filters are only transformed as svg filter using the trick for Firefox < 35.

Allow you to use value for any value. This value represents the value specified as the property’s initial value. It does not mean browser default.

For example, for the property, always means , because that’s the designated initial value of the property. As an example, using , will not be , but .

Allows you to use its new syntax consisting of space-separated arguments and an optional slash-separated opacity.

The alpha value accepts percentage as well as number and has been added to as optional argument. As a result, and are now aliases of each other.

Allows you to use its new syntax consisting of space-separated arguments and an optional slash-separated opacity.

now accepts angles ( , , , ) as well as numbers for hues and an optional percentage or number for alpha value. So, and are now aliases of each other too.

Allows you to use generic font-family. The current transformation provides a practical font-family list as fallback.

Any omissions of the CSS specifications (even in draft) that are subject to be handled by cssnext are not intentional. You can take a look at the list of features that are waiting to be implemented. Feel free to work on a feature ready to be added, or open a new issue if you find something that should be handled. Keep in mind that, as of right now, this project is intended to support new CSS syntax only.|||

