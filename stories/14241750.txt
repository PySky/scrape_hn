will parse, tokenize, execute code and return value from eax register. Startup value is . Above program will push ebx to stack and pop from stack to eax. So eax will eventually contain .

Of course awesomeness comes by default.

Didn't managed to compile this beast. My machine doesn't have enough amount of RAM, but here's the flow:

In folder you can find syscalls and stdlib funcitons documentations. For now there is no documentation with supported asm instructions.|||

ctai - compile time assembly interpreter