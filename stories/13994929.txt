Let’s say we have to query a table with a JSONB column on a PostgreSQL 9.5+ database.

You can query with the operator on . This operator can compare partial JSON strings against a JSONB column. It’s the containment operator. For this case you may need to add a GIN index on column.

The operator gets a JSON object field as text. Use it if you want to query a simple field in a JSONB column. You might add a B-tree index on .

Once again, the operator gets a JSON object field as text. Just use directly it in the .

You can use the operator with the classic operator you use on text: , , , etc. Do not forget to index with a B-tree index.

You can use both or , just like for first level attribute. Add an index according to your choice.

Remembering operator checks containment in a JSONB column, you can query on an array like by just passing to the clause:

Sometimes, we may need to select items where the attributes inside a JSONB column matches a bunch of possible values.

Use as usual and pass the whole object as JSON.

Use the operator to concatenate the actual data with the new data. It will update or insert the value.

The operator removes a key from an object.

Querying on JSONB objects is almost as simple as classic SQL queries. I posted only a few examples here, about what seems the most common use cases to me. It’s a note for me, I hope it could help other people too.

You may dig in PostgreSQL docs, which has many more examples and more precise explanations :

Feel free to comment with advices, feedback and criticism. I would be really happy to learn more.

Thanks to Emilien Schneider (once again) for his review.|||

You can query with the @> operator on metadata. This operator can compare partial JSON strings against a JSONB column. It’s the containment operator. For this case you may need to add a GIN index on…