The idea for this project was born from a conversation with a friend â€“ he was wondering if creating such game board could help in teaching kids how to play Chess. And I loved the fact that both making the project, as well as then playing using it sound fun ðŸ˜‰ And what a great opportunity to try out some new things that I didnâ€™t have experience with before (i.e. PCB design).

How is it special, you ask?

It tracks the game state, shows possible moves, indicates when a piece has been lost and should be removed from the board, and best part is: it teaches the game rules and prevents players from cheating! (you canâ€™t make a move that is not allowedâ€¦)

So far, I implemented Checkers (the International version), but the code is structured so that itâ€™s easy to add additional games. Next one, time permitting: Chess. Then maybe tick-tack-toeÂ â€“ board is 8Ã—8 so there could be 4 games played simultaneously ðŸ™‚ Â There are a lot of games that can be played on a board of this size!

Altogether, this project took aroundÂ 6 months â€“ there isnâ€™t always enough free time to dedicate to side projects, and this wasnâ€™t the only hobby occupying my free time (various other, smallerÂ projects always come to my mind), but Iâ€™m always aiming to finish what I start.

Iâ€™d estimate that I spent about 20 hours working on the mechanical design (my first project in Fusion 360, half the time was spent on learning the basics), about 10 hours designing PCB (using KiCad, again my first time with this app so there was definitely learning curve there), probably 15 hours or so on soldering and assembly (soldering 64 sensors, 64 resistors, countless number ofÂ wires in between it all, gluing acrylic boxes for pieces, etc.)Â and maybe 15 hours writing software (libraries + first game: Checkers), testing, and tweaking for more pleasant gaming experience.

Overall, I think it took about 60-70 hours from the initial concept to playing with my colleagues at work on the finished board.

If youâ€™d like to build something similar by yourself, below youâ€™ll find the list of components I used, and clearly (I hope ðŸ™‚ ) documented 3 main stages (mechanical design, electronics, software) in separate blog posts linked below. And donâ€™t hesitate to ask any questions if something is not clear.

This project requires access to laser cutter (some pieces require fairly high precision, i.e. the internal grid sides with the half-cut slots, which can be achieved by other means, but laser cutter makes life easier ðŸ™‚ ) and basic soldering skills. All materials can be cut on a laser cutter with bed size 24â€³ x 18â€³ or larger (there are pieces in this design very close to those dimensions [base of the board], thus they wouldnâ€™t fit on a smaller bed).

Also, a custom PCB board was used, andÂ is the single most expensive element â€“ more than halfÂ of the complete build cost (~$100 forÂ custom ordered PCBs). Itâ€™s not required, but I thought it makes for a more clean design (removes the need for extra wiring, also serves as a sturdy mounting plate for the sensors, makes the final assembly feel even cooler!).

Hereâ€™s a list of all used parts, for quick reference. Those parts are also called out in each of the appropriate section in the build stages linked above.

In my case, including extra materials used fow few iterations of various components as the design was changing, the total cost reached almost $300 (including two iterations of custom PCBs which resulted in a bill of almost $150, and original, unsuccessful attempt in soldering everything without the PCB â€“ too many wires everywhere to keep it clean and practical ðŸ™‚ ). Now, having the design figured out, I think the cost shouldnâ€™t exceed ~$150-$200.

Obviously, the cost highly depends on what you have available at hand, which materials/components you use and what needs to be purchased.

Also, once you splurge on the missing pieces, youâ€™ll still have plenty of components left when done with this project (resistors, headers, wires, etc.).

Are you interested in this project and have any questions? Have an idea on how to make it even better? Did you build something similar that youâ€™d like to share? (If you decide to try and replicate my build, Iâ€™d appreciate the mention!)

Or maybe you happen to have a factory at your disposal and would love to bring this project to manufacturing? ðŸ™‚

Leave a comment and Iâ€™ll get back to you!|||

