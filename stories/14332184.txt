is a tool that runs a command when source files change. For example, a file change can trigger compilation, tests, or deployment.

In this tutorial we use an existing Web API app with two endpoints: one that returns a sum and one that returns a product. The product method contains a bug that we'll fix as part of this tutorial.

Download the sample app. It contains two projects, (a web app) and (unit tests for the web app).

In a console, navigate to the WebApp folder and run the following commands:

The console output will show messages similar to the following (indicating that the app is running and waiting for requests):

In a web browser, navigate to , you should see the result .

Navigate to the product API ( ), it returns , not as you'd expect. We'll fix that later in the tutorial.

Any command can be run with , for example:

Run in the folder. The console output will indicate has started.

Fix the bug in the method of the so it returns the product and not the sum.

Save the file. The console output will show messages indicating that detected a file change and restarted the app.

detects the file change and reruns the tests. The console output will show the tests passed.

dotnet-watch is part of the GitHub DotNetTools repository.

The MSBuild section of the dotnet-watch ReadMe explains how dotnet-watch can be configured from the MSBuild project file being watched. The dotnet-watch ReadMe contains information on dotnet-watch not covered in this tutorial.|||

Shows how to use dotnet watch.