SIMD.js is cool. You can use it with Firefox or Edge nightly.

Can we speed up rectangle intersection checks? Yes we can! …With a big caveat.

The basic rectangle check logic is as follows:

This is equivalent to:

Properly speaking, we can’t do much with this. Yes yes we could compute and with separate SIMD operations (and indeed, we would have to do this if we wanted 64-bit coordinates), but I’m doubtful that this would be worth it.

Yeah, it’s wrong. It’ll yield a false positive if or . This is OK for my purposes, but it means this won’t be a drop-in replacement.

This loads the into SIMD registers (if the JIT wants to, anyway).

This is the interesting part. The shuffle function lets us rearrange our data so that the we will compare , , etc.

Now we just compare , and make sure that all bits in the resulting mask are .

yields a false positive if or . This is because the is transformed into so we can use a single SIMD op.

In practice, you’re probably better served by minimizing memory management overhead. Having an explicit object is, uh, wasteful.|||

