A tool that is used for everything will necessarily be a poor fit for most of the tasks for which it is used. In theory, a vice grip can be used as a hammer, screwdriver, or wrench; a mechanic who uses a vice grip for all these tasks does not inspire confidence. Somehow, this is not the case in the tech industry — whose vice grips include the web, hadoop, java, and c++.

Language wars aren’t totally pointless: it’s useful to inspect and document what tasks various tools are good at, and how best to use these tools. However, language wars at some point became a matter of tribalism, and tribal defense of the idea of one language over another for all tasks benefits no one — with the exception of snake-oil salesmen who want to sell you the panacea for all your programming woes. Such confidence artists exercise a lot of power in the industry these days.

One would think that common sense would prevail. After all, performance, man-hours, and downtime are all measurable. But, even as more and more is being automatically measured and recorded, connection to reality is increasingly tenuous: “unicorns” worth billions of dollars nevertheless have no plans for monetization, companies are created with the goal of being sold instead of providing services, and the fortunes of most players are determined arbitrarily by small gambling rings called venture capital firms. Everything’s a web service, and to the extent that they are monetized at all, they use ad-tech — a mutated version of microtransactions where an arbitrary corporation pays a fraction of a cent to a web host in return for an http request, with the value of that fraction determined by an uninformed estimate of how likely that request is to result in a product sale, and wherein that estimate drops endlessly because most requests come from robots incapable of purchasing products. As a result, the most highly valued properties are ones that no one wants, and fashions wholly disconnected from popular desirability sweep the industry. The tech industry strongly resembles modern Hollywood: dominated by expensive flops, and under thrall to its own marketing due to excessive insularity.

Another thing the tech industry strongly resembles is a pyramid scheme, or a cult.

At the very least, our industry is amusing, in the way that Sanatorium In the Sign of the Hourglass or The Penal Colony is amusing. Like most things whose value is based on faith in ideas that don’t track with reality, it probably won’t last in this state for very long. We’re in the Wiemar Cinema era of this industry, probably: Murnau can’t keep making films like Nosferatu if he binges on opium every night.

I’m not really concerned with the delusions of the elites, though. Peter Thiel and Paul Graham can make grand pronouncements, but they wouldn’t even notice if nobody on the ground listened. My major concern is that naive, lazy ideas dominate the industry even within the entry level. I attribute this to problems in education.

We have a bunch of mythology in the current industry, but it bears little in common with the earlier body of mythology and it teaches the wrong lessons. It elevates venture capital, lucky charismatic sociopaths, and companies whose value is wholly imaginary. It justifies using one tool for everything (via Paul Graham’s adulation of Lisp, didiactic standards for college curricula that suggest everything should be a Java class, the normalization of bootcamps that push you through a tutorial for a single language in a few weeks with the promise that you’ll be ready for employment). It’s the kind of mythology that cocaine-snorting ad men from the 80s would invent, because that’s who invented it.

When we eschew real history in favor of hero-worshipping Steve Jobs, we are eschewing real knowledge in favor of ad copy and flavor text. Our lack of familiarity with history allows us to imagine that the web is the way hypertext is supposed to work, putting an RDBMS on top of hadoop makes sense, PHP is an acceptable language, and new fashions in the industry are world-shaking innovations. It lets us imagine that Slack is a major improvement over IRC, Uber is the underdog fighting against foolish overregulation, smart phones are the future of computing, and hard work will make you a millionaire.

New, trendy ideas in tech are typically poorly-understood ideas from the 1970s. The flaws in these ideas that will cause everyone to abandon them in six months were published in the first response to the original paper, if not in the original paper itself. Save yourself some time, and read CS publications from the 70s. When the rare genuinely new idea appears, you will be uniquely suited to understand it.|||

A tool that is used for everything will necessarily be a poor fit for most of the tasks for which it is used. In theory, a vice grip can be used as a hammer, screwdriver, or wrench; a mechanic who…