We’re constantly talking on the Dart team about how to improve the language (like non-nullable types), and one of the features that has come up informally a few times is function overloading:

In short, this means you can write code like this (here’s a Java example):

We can’t do this (yet) in Dart, (or JavaScript, or TypeScript) but you can do:

Of course, this isn’t very ergonomic. We could also omit the type definition entirely, and rely on a runtime check (in Dart) or use a union type (in TypeScript):

Note that in both cases I needed to do additional runtime type-checks to know how to dispatch something to the appropriate code block. I didn’t have to do that in Java.|||

We’re constantly talking on the Dart team about how to improve the language (like non-nullable types), and one of the features that has come up informally a few times is function overloading: Of…