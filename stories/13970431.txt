Like me, you’ve probably used a git pair script at some point. There are a number of such scripts out there and they all work the same way – creating a local git config with the pair author information.

While I used to be an avid user of the git cli, that’s changed since I switched to Magit. Unfortunately, I still need to do so when I want to setup my git pairing session. I decided to change that, partly to keep me from having to switch out of emacs but also as an exercise to improve my elisp chops.

Here are my requirements:

After some code spelunking, I found that Magit exposes the variable , defined in , which holds a list of strings representing commit arguments. While it is customizable, my requirements call for a user experience that’s little more dynamic than setting an emacs custom variable. But, by using this variable, I’ll satisfy requirements , and . Time to write some code to manipulate it!

First I’ll create a function named that let’s me add an commit argument.

This works but it’s not interactive, meaning it can’t be invoked from the minibuffer, and I won’t get prompt for input. It’s a good start, though so I’ll add another function that fills in the gaps.

The function is interactive and prompts me with a message that’s a convenient reminder of the format. This satisfies requirement . Now that I can set it, I need to be able to remove it. The function, will do that.

Great, now I can add and remove overrides! That checks off requirement . Time to add override toggling. To do that I’ll define the variable to persist the author override. I can then update to use it as follows:

Now I can implement to check of requirement .

Finally, I’ll tie it all together through some keybindings that get set when Magit is initialized. I really like for things like this.

In the future I’ll probably add some niceties like support for selecting known pairs and support for pair initials but this is good enough for now.

The full implementation can be found in my emacs config . I’ve got some other goodies in there but, as you peruse my config, keep in mind that I use the Prelude Emacs distribution.|||

